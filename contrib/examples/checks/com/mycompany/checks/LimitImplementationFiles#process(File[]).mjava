    /**
     * @see FileSetCheck
     */
    public void process(File[] files)
    {
        if (files != null && files.length > max) {

            // figure out the file that contains the error
            final String path = files[max].getPath();

            // message collector is used to collect error messages,
            // needs to be reset before starting to collect error messages
            // for a file.
            getMessageCollector().reset();

            // message dispatcher is used to fire AuditEvents
            MessageDispatcher dispatcher = getMessageDispatcher();

            // signal start of file to AuditListeners
            dispatcher.fireFileStarted(path);

            // log the message
            log(0, "max.files.exceeded", new Integer(max));

            // you can call log() multiple times to flag multiple
            // errors in the same file

            // fire the errors for this file to the AuditListeners
            dispatcher.fireErrors(path, getMessageCollector().getMessages());

            // signal end of file to AuditListeners
            dispatcher.fireFileFinished(path);
        }
    }

