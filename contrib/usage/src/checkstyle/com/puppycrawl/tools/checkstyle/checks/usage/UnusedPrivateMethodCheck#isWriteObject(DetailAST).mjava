    /**
     * Checks if a given method is writeObject().
     * @param aAST method def to check
     * @return true if this is a writeObject() definition
     */
    private boolean isWriteObject(DetailAST aAST)
    {
        // name is writeObject...
        final DetailAST ident = aAST.findFirstToken(TokenTypes.IDENT);
        if (!"writeObject".equals(ident.getText())) {
            return false;
        }

        // returns void...
        final DetailAST typeAST =
            (DetailAST) aAST.findFirstToken(TokenTypes.TYPE).getFirstChild();
        if (typeAST.getType() != TokenTypes.LITERAL_VOID) {
            return false;
        }

        // should have one parameter...
        final DetailAST params = aAST.findFirstToken(TokenTypes.PARAMETERS);
        if (params == null || params.getChildCount() != 1) {
            return false;
        }
        // and paramter's type should be java.io.ObjectOutputStream
        final DetailAST type =
            (DetailAST) ((DetailAST) params.getFirstChild())
                .findFirstToken(TokenTypes.TYPE).getFirstChild();
        final String typeName = FullIdent.createFullIdent(type).getText();
        if (!"java.io.ObjectOutputStream".equals(typeName)
            && !"ObjectOutputStream".equals(typeName))
        {
            return false;
        }

        // and, finally, it should throws java.io.IOException
        final DetailAST throwsAST =
            aAST.findFirstToken(TokenTypes.LITERAL_THROWS);
        if (throwsAST == null || throwsAST.getChildCount() != 1) {
            return false;
        }
        final DetailAST expt = (DetailAST) throwsAST.getFirstChild();
        final String exceptionName = FullIdent.createFullIdent(expt).getText();
        if (!"java.io.IOException".equals(exceptionName)
            && !"IOException".equals(exceptionName))
        {
            return false;
        }

        return true;
    }

