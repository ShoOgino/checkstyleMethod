    /**
     * gets a column number for the tree;  if the current SymTabAST node does not have one associated
     * with it, traverse its children until a column number is found.  Failure results in column
     * number value of 0.
     *
     * @param tree the SymTabAST to process
     *
     * @return int the resulting line number (0 if none is found)
     */
    public static int getColumn(SymTabAST tree) {
        SymTabAST indexedNode = tree;

        // find a node that actually has line number info
        // REDTAG -- a label's ':' is a real token and has (the wrong) column info
        // because it is the parent of the ident node that people will want
        if (indexedNode.getColumnNo() == 0
            || indexedNode.getType() == TokenTypes.LABELED_STAT) {
            indexedNode = (SymTabAST) indexedNode.getFirstChild();

            while (indexedNode != null && indexedNode.getColumnNo() == 0) {
                indexedNode = (SymTabAST) indexedNode.getNextSibling();
            }

            if (indexedNode == null) {
                // we're screwed
                indexedNode = tree;
            }
        }

        return indexedNode.getColumnNo();
    }

