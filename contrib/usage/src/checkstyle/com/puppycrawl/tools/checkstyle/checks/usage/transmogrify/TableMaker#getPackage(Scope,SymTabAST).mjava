  /**
   * gets the package determined by the tree and parent package def.
   * The method analyzes the tree and parent scope and retrieves the
   * appropriate package definition from the internal package list.
   * If the package does not exist it is created.
   *
   * @param tree <code>SymTabAST</code> to consider
   * @param parent the parent package definition
   *
   * @return PackageDef the resulting package definition
   * @see net.sourceforge.transmogrify.symtab.PackageDef
   * @see net.sourceforge.transmogrify.symtab.SymbolTable
   * @see net.sourceforge.transmogrify.symtab.antlr.SymTabAST
   */
  private PackageDef getPackage(Scope parent, SymTabAST tree ) {
    String name = tree.getText();
    PackageDef result = null;
    if (!(parent instanceof BaseScope)) {
      result = symbolTable.getPackage(parent.getQualifiedName() + "." + name);
    }
    else {
      result = symbolTable.getPackage(name);
    }

    if (result == null) {
      result = new PackageDef(tree.getText(), parent, tree);
      symbolTable.definePackage(result, parent);
    }

    return result;
  }

