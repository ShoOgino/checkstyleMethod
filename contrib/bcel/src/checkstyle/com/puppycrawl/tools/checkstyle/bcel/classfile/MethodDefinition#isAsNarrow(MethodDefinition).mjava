    /**
     * Determines whether the Method of a MethodDefinition is as narrow
     * as the method for this definition.
     * Precondition: the method for this has the same name and the same
     * number of arguments as the Method for the given MethodDefinition.
     * @param aMethodDef the MethodDefinition to check.
     * @return true if the Method of aMethodDef is as narrow
     * as the method for this definition.
     */
    public boolean isAsNarrow(MethodDefinition aMethodDef)
    {
        return aMethodDef.isCompatible(this);
//        final Type[] types1 = getArgumentTypes();
//        final Type[] types2 = aMethodDef.getArgumentTypes();
//        for (int i = 0; i < types2.length; i++) {
//            if (!Utils.isCompatible(types1[i], types2[i])) {
//                return false;
//            }
//        }
//        return true;
    }

