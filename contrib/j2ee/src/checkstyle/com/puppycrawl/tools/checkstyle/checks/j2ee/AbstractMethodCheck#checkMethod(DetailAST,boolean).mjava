    /**
     * Checks method requirements:
     * <ul>
     * <li>The access control modifier must be <code>public</code>.</li>
     * <li>The method modifier cannot be <code>final</code>.
     * </ul>
     * @param aAST METHOD_DEF node for method definition to check.
     * @param aAllowFinal if false, the method cannot be final.
     */
    protected void checkMethod(DetailAST aAST, boolean aAllowFinal)
    {
        final DetailAST nameAST = aAST.findFirstToken(TokenTypes.IDENT);
        final String nameMessage = "Method " + nameAST.getText();
        if (!Utils.isPublic(aAST)) {
            log(nameAST.getLineNo(), nameAST.getColumnNo(),
                "nonpublic.bean", nameMessage);
        }
        if (!aAllowFinal && Utils.isFinal(aAST)) {
            log(nameAST.getLineNo(), nameAST.getColumnNo(),
                "illegalmodifier.bean",
                new Object[] {nameMessage, "final"});
        }
        if (Utils.isStatic(aAST)) {
            log(nameAST.getLineNo(), nameAST.getColumnNo(),
                "illegalmodifier.bean",
                new Object[] {nameMessage, "static"});
        }
    }

