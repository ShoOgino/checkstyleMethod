    /**
     * Tests whether two method definition ASTs have the same parameter lists
     * according to type.
     * @param aMethodAST1 the first method AST to test.
     * @param aMethodAST2 the second method AST to test.
     * @return true if aMethodAST1 and aMethodAST2 have the same
     * parameter lists.
     */
    public static boolean sameParameters(
        DetailAST aMethodAST1,
        DetailAST aMethodAST2)
    {
        final DetailAST params1 =
            aMethodAST1.findFirstToken(TokenTypes.PARAMETERS);
        final DetailAST params2 =
            aMethodAST2.findFirstToken(TokenTypes.PARAMETERS);
        if (params1.getChildCount() != params2.getChildCount()) {
            return false;
        }
        DetailAST param1 = (DetailAST) params1.getFirstChild();
        DetailAST param2 = (DetailAST) params2.getFirstChild();
        while (param1 != null) {
            if ((param1.getType() == TokenTypes.PARAMETER_DEF)
                && (param2.getType() == TokenTypes.PARAMETER_DEF))
            {
                final DetailAST type1 = param1.findFirstToken(TokenTypes.TYPE);
                final DetailAST type2 = param2.findFirstToken(TokenTypes.TYPE);
                if (!equalTypes(type1, type2)) {
                    return false;
                }
            }
            param1 = (DetailAST) param1.getNextSibling();
            param2 = (DetailAST) param2.getNextSibling();
        }
        return true;
    }

