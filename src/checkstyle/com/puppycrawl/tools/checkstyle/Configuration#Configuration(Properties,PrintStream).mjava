    /**
     * Creates a new <code>Configuration</code> instance.
     *
     * @param aProps where to extract configuration parameters from
     * @param aLog where to log errors to
     * @throws RESyntaxException if an error occurs
     * @throws FileNotFoundException if an error occurs
     * @throws IOException if an error occurs
     */
    public Configuration(Properties aProps, PrintStream aLog)
        throws RESyntaxException, FileNotFoundException, IOException
    {
        setTodoPat(aProps.getProperty(TODO_PATTERN_PROP, TODO_PATTERN));
        setParamPat(aProps.getProperty(PARAMETER_PATTERN_PROP,
                                       PARAMETER_PATTERN));
        setStaticPat(aProps.getProperty(STATIC_PATTERN_PROP, STATIC_PATTERN));
        setStaticFinalPat(aProps.getProperty(CONST_PATTERN_PROP,
                                             CONST_PATTERN));
        setMemberPat(aProps.getProperty(MEMBER_PATTERN_PROP, MEMBER_PATTERN));
        setPublicMemberPat(aProps.getProperty(PUBLIC_MEMBER_PATTERN_PROP,
                                              PUBLIC_MEMBER_PATTERN));
        setTypePat(aProps.getProperty(TYPE_PATTERN_PROP, TYPE_PATTERN));
        setLocalVarPat(aProps.getProperty(LOCAL_VAR_PATTERN_PROP,
                                          LOCAL_VAR_PATTERN));
        setMethodPat(aProps.getProperty(METHOD_PATTERN_PROP, METHOD_PATTERN));
        setIgnoreLineLengthPat(aProps.getProperty(
            IGNORE_LINE_LENGTH_PATTERN_PROP, IGNORE_LINE_LENGTH_PATTERN));
        setMaxLineLength(getIntProperty(
            aProps, aLog, MAX_LINE_LENGTH_PROP, MAX_LINE_LENGTH));
        setMaxMethodLength(getIntProperty(
            aProps, aLog, MAX_METHOD_LENGTH_PROP, MAX_METHOD_LENGTH));
        setMaxConstructorLength(getIntProperty(
            aProps, aLog, MAX_CONSTRUCTOR_LENGTH_PROP, MAX_CONSTRUCTOR_LENGTH));
        setMaxFileLength(getIntProperty(
            aProps, aLog, MAX_FILE_LENGTH_PROP, MAX_FILE_LENGTH));

        setAllowTabs(getBooleanProperty(aProps, ALLOW_TABS_PROP, mAllowTabs));
        setTabWidth(getIntProperty(aProps, aLog, TAB_WIDTH_PROP, TAB_WIDTH));
        setBooleanFlag(aProps, ALLOW_PROTECTED_PROP);
        setBooleanFlag(aProps, ALLOW_PACKAGE_PROP);
        setBooleanFlag(aProps, ALLOW_NO_AUTHOR_PROP);
        setJavadocScope(
            Scope.getInstance(aProps.getProperty(JAVADOC_CHECKSCOPE_PROP,
                                                 Scope.PRIVATE.getName())));
        setBooleanFlag(aProps, REQUIRE_PACKAGE_HTML_PROP);
        setBooleanFlag(aProps, IGNORE_IMPORTS_PROP);
        setIllegalImports(
            aProps.getProperty(ILLEGAL_IMPORTS_PROP, ILLEGAL_IMPORTS));
        setIllegalInstantiations(aProps.getProperty(ILLEGAL_INSTANTIATIONS_PROP,
                                                   ILLEGAL_INSTANTIATIONS));
        setBooleanFlag(aProps, IGNORE_WHITESPACE_PROP);
        setBooleanFlag(aProps, IGNORE_CAST_WHITESPACE_PROP);
        setBooleanFlag(aProps, IGNORE_OP_WRAP_PROP);
        setBooleanFlag(aProps, IGNORE_BRACES_PROP);
        setBooleanFlag(aProps, IGNORE_LONG_ELL_PROP);
        setBooleanFlag(aProps, IGNORE_PUBLIC_IN_INTERFACE_PROP);
        setCacheFile(aProps.getProperty(CACHE_FILE_PROP));
        setIgnoreImportLength(getBooleanProperty(
            aProps, IGNORE_IMPORT_LENGTH_PROP, mIgnoreImportLength));
        setHeaderIgnoreLines(aProps.getProperty(HEADER_IGNORE_LINE_PROP));
        setHeaderLinesRegexp(getBooleanProperty(
            aProps, HEADER_LINES_REGEXP_PROP, mHeaderLinesRegexp));

        final String fname = aProps.getProperty(HEADER_FILE_PROP);
        if (fname != null) {
            setHeaderFile(fname);
        }

        setLCurlyMethod(getLeftCurlyOptionProperty(
                            aProps, LCURLY_METHOD_PROP,
                            LeftCurlyOption.EOL, aLog));
        setLCurlyType(getLeftCurlyOptionProperty(
                          aProps, LCURLY_TYPE_PROP,
                          LeftCurlyOption.EOL, aLog));
        setLCurlyOther(getLeftCurlyOptionProperty(
                           aProps, LCURLY_OTHER_PROP,
                           LeftCurlyOption.EOL, aLog));
        setRCurly(getRightCurlyOptionProperty(
                      aProps, RCURLY_PROP, RightCurlyOption.SAME, aLog));
        setTryBlock(
            getBlockOptionProperty(
                aProps, TRY_BLOCK_PROP, BlockOption.TEXT, aLog));
        setCatchBlock(
            getBlockOptionProperty(
                aProps, CATCH_BLOCK_PROP, BlockOption.TEXT, aLog));
        setFinallyBlock(
            getBlockOptionProperty(
                aProps, FINALLY_BLOCK_PROP, BlockOption.TEXT, aLog));
        setParenPadOption(getPadOptionProperty(aProps,
                                               PAREN_PAD_PROP,
                                               PadOption.NOSPACE,
                                               aLog));
    }

