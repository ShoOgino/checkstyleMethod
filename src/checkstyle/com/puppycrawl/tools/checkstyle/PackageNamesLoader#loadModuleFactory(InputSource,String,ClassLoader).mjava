    /**
     * Returns the list of package names in a specified source.
     * @param aSource the source for the list.
     * @param aSourceName the name of the source.
     * @param aClassLoader the class loader to load user's classes.
     * @return the list ofpackage names stored in aSource.
     * @throws CheckstyleException if an error occurs.
     */
    private static ModuleFactory loadModuleFactory(
            InputSource aSource, String aSourceName, ClassLoader aClassLoader)
        throws CheckstyleException
    {
        try {
            final PackageNamesLoader nameLoader =
                new PackageNamesLoader(aClassLoader);
            nameLoader.parseInputSource(aSource);
            return nameLoader.getModuleFactory();
        }
        catch (FileNotFoundException e) {
            throw new CheckstyleException("unable to find " + aSourceName, e);
        }
        catch (ParserConfigurationException e) {
            throw new CheckstyleException("unable to parse " + aSourceName, e);
        }
        catch (SAXException e) {
            throw new CheckstyleException("unable to parse "
                    + aSourceName + " - " + e.getMessage(), e);
        }
        catch (IOException e) {
            throw new CheckstyleException("unable to read " + aSourceName, e);
        }
    }

