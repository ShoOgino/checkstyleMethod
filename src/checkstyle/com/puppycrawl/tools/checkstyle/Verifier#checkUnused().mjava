    /**
     * Checks for unused variables using BCEL.
     */
    private void checkUnused()
    {
        if (!mConfig.isCheckUnusedFields()) {
            return;
        }

        final Iterator typeNames = mTypeFieldsMap.keySet().iterator();
        while (typeNames.hasNext()) {
            final String type = (String) typeNames.next();
            String cname = type.replace('.', '$');
            if (mPkgName != null) {
                cname = mPkgName + "." + cname;
            }
            final String fname = cname.replace('.', '/') + ".class";
            final InputStream is =
                mConfig.getClassLoader().getResourceAsStream(fname);

            final ClassParser parser = new ClassParser(is, cname);
            JavaClass jc = null;
            try {
                jc = parser.parse();
            }
            catch (IOException e) {
                e.printStackTrace();
                return;
            }
            catch (ClassFormatError e) {
                e.printStackTrace();
                return;
            }

            // Visit the code using BCEL
            final UnusedDetector ud = new UnusedDetector(jc);
            final DescendingVisitor dv = new DescendingVisitor(jc, ud);
            dv.visit();

            // Report all unused fields
            final Map typeVars = (Map) mTypeFieldsMap.get(type);
            final String[] unusedFields = ud.getUnusedFields();
            for (int i = 0; i < unusedFields.length; i++) {
                final MyVariable var =
                    (MyVariable) typeVars.get(unusedFields[i]);
                mMessages.add(var.getLineNo(),
                              var.getColumnNo() - 1,
                              "field.unused",
                              var.getText());
            }
        }
    }

