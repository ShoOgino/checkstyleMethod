    /**
     * Register a check for a given configuration.
     * @param aCheck the check to register
     * @param aConfig the configuration to use
     */
    void registerCheck(Check aCheck, CheckConfiguration aConfig)
    {
        aCheck.setMessages(mMessages);
        aCheck.setTabWidth(mTabWidth);
        if (!aConfig.getTokens().isEmpty()) {
            int acceptableTokens[] = aCheck.getAcceptableTokens();
            Arrays.sort(acceptableTokens);
            final Iterator it = aConfig.getTokens().iterator();
            while (it.hasNext()) {
                String token = (String) it.next();
                int tokenId = TokenTypes.getTokenId(token);
                if (Arrays.binarySearch(acceptableTokens, tokenId) >= 0) {
                    registerCheck(token, aCheck);
                }
                // TODO: else error message?
            }
        }
        else {
            final int[] tokens = aCheck.getDefaultTokens();
            for (int i = 0; i < tokens.length; i++) {
                registerCheck(tokens[i], aCheck);
            }
        }
        mAllChecks.add(aCheck);
    }

