    /**
     * Constructs the object.
     * @param aConfig contains the configuration to check with
     * @throws RESyntaxException unable to create a regexp object
     * @throws IOException if an error occurs
     */
    public Checker(Configuration aConfig)
        throws RESyntaxException, IOException,
        ParserConfigurationException, SAXException, ClassNotFoundException, InstantiationException, IllegalAccessException
    {
        // TODO: remove the dead code and make use the other constuctor
        mConfig = aConfig;
        mConfig.loadFiles();
        mCache = new PropertyCacheFile(aConfig);
        final Verifier v = new Verifier(aConfig);
        VerifierSingleton.setInstance(v);
        LocalizedMessage.setLocale(new Locale(mConfig.getLocaleLanguage(),
                                              mConfig.getLocaleCountry()));
        mMessages = new LocalizedMessages(mConfig.getTabWidth());
        // Load the check configurations
        final ConfigurationLoader loader = new ConfigurationLoader();
        final Set configFiles = mConfig.getCheckConfigFiles();
        // TODO: check for null
        for (Iterator it = configFiles.iterator(); it.hasNext();) {
            final String fname = (String) it.next();
            loader.parseFile(fname);
        }

        // Initialise the treewalker
        // TODO: improve the error handing
        mWalker = new TreeWalker(mMessages);
        final CheckConfiguration[] configs = loader.getConfigs();
        for (int i = 0; i < configs.length; i++) {
            final CheckConfiguration config = configs[i];
            mWalker.registerCheck(
                config.createInstance(mConfig.getClassLoader()), config);
        }
    }

