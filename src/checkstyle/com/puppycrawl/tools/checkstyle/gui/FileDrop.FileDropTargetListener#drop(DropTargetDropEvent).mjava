        public void drop(DropTargetDropEvent evt)
        {
            try {
                final Transferable tr = evt.getTransferable();

                if (tr.isDataFlavorSupported(DataFlavor.javaFileListFlavor)) {
                    evt.acceptDrop(DnDConstants.ACTION_COPY);

                    final List fileList = (List) tr.getTransferData(
                            DataFlavor.javaFileListFlavor);
                    final File[] files = new File[fileList.size()];
                    fileList.toArray(files);

                    if (mListener != null) {
                        mListener.filesDropped(files);
                    }

                    evt.getDropTargetContext().dropComplete(true);
                }
                else {
                    evt.rejectDrop();
                }
            }
            catch (final IOException io) {
                evt.rejectDrop();
            }
            catch (final UnsupportedFlavorException ufe) {
                evt.rejectDrop();
            }
            finally {
                if (mC instanceof JComponent) {
                    final JComponent jc = (JComponent) mC;
                    jc.setBorder(normalBorder);
                }
            }
        }

