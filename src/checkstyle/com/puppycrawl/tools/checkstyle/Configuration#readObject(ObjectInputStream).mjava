    /**
     * Extend default deserialization to initialize the RE member variables.
     *
     * @param aStream the ObjectInputStream that contains the serialized data
     * @throws IOException if an I/O error occurs
     * @throws ClassNotFoundException if the class of a serialized object
     *     could not be found
     */
    private void readObject(ObjectInputStream aStream)
        throws IOException, ClassNotFoundException
    {
        // initialize the serialized fields
        aStream.defaultReadObject();

        // initialize the transient fields
        try {
            setTodoPat(getTodoPat());
            setParamPat(getParamPat());
            setStaticPat(getStaticPat());
            setStaticFinalPat(getStaticFinalPat());
            setMemberPat(getMemberPat());
            setPublicMemberPat(getPublicMemberPat());
            setTypePat(getTypePat());
            setLocalVarPat(getLocalVarPat());
            setMethodPat(getMethodPat());
            setIgnoreLineLengthPat(getIgnoreLineLengthPat());
        }
        catch (RESyntaxException ex) {
            // This should never happen, as the serialized regexp patterns
            // somehow must have passed a setPattern() method.
            throw new InvalidObjectException(
                "invalid regular expression syntax");
        }
    }

