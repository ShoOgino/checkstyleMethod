    /**
     * Verify an operator. Checks include that the operator is surrounded by
     * whitespace, and that the operator follows the rules about whether to
     * be at the end of a line.
     * @param aLineNo number of line to check
     * @param aColNo column where the text starts
     * @param aText the text to check
     */
    void verifyOpBegin(int aLineNo, int aColNo, String aText)
    {
        verifyWSAroundBegin(aLineNo, aColNo, aText);

        final WrapOpOption wOp = mConfig.getWrapOpOption();

        if (wOp != WrapOpOption.IGNORE) {

            // Check if rest of line is whitespace, and not just the operator
            // by itself. This last bit is to handle the operator on a line by
            // itself.
            if (wOp == WrapOpOption.NL
                && !aText.equals(mLines[aLineNo - 1].trim())
                && (mLines[aLineNo - 1].substring(aColNo + aText.length() - 1)
                    .trim().length() == 0))
            {
                mMessages.add(aLineNo, aColNo - 1, "line.new", aText);
            }
            else if (wOp == WrapOpOption.EOL
                     && Utils.whitespaceBefore(aColNo - 1, mLines[aLineNo - 1]))
            {
                mMessages.add(aLineNo, aColNo - 1, "line.previous", aText);
            }
        }
    }

