    /**
     * Create the GlobalProperties object based on the arguments specified
     * to the ANT task.
     * @return a brand spanking new GlobalProperties object
     * @throws BuildException if an error occurs
     */
    private GlobalProperties createGlobalProperties()
    {
        final Properties props = new Properties();

        // Load the properties file is specified
        if (mPropertiesFile != null) {
            try {
                props.load(new FileInputStream(mPropertiesFile));
            }
            catch (FileNotFoundException e) {
                throw new BuildException(
                    "Could not find Properties file '" + mPropertiesFile + "'",
                    e, getLocation());
            }
            catch (IOException e) {
                throw new BuildException(
                    "Error loading Properties file '" + mPropertiesFile + "'",
                    e, getLocation());
            }
        }

        // Now override the properties specified
        for (Iterator it = mOverrideProps.iterator(); it.hasNext();) {
            final Property p = (Property) it.next();
            props.setProperty(p.getKey(), p.getValue());
        }

        // Create the configuration
        final GlobalProperties retVal;
        try {
            retVal = new GlobalProperties(props, System.out);
        }
        catch (RESyntaxException e) {
            throw new BuildException("An regular expression error exists.",
                                     e, getLocation());
        }
        catch (IOException e) {
            throw new BuildException(
                "An error loading the file '" + e.getMessage() + "'",
                e, getLocation());
        }

        // setup the classloader
        if (mClasspath != null) {
            retVal.setClassLoader(new AntClassLoader(getProject(), mClasspath));
        }

        return retVal;
    }

