    /** @see com.puppycrawl.tools.checkstyle.api.Check */
    public void visitToken(DetailAST aAST)
    {
        final DetailAST mods = aAST.findFirstToken(TokenTypes.MODIFIERS);
        final Scope declaredScope = ScopeUtils.getScopeFromMods(mods);
        final Scope typeScope =
            ScopeUtils.inInterfaceBlock(aAST) ? Scope.PUBLIC : declaredScope;
        if (typeScope.isIn(mScope)) {
            final Scope surroundingScope = ScopeUtils.getSurroundingScope(aAST);
            if ((surroundingScope == null) || surroundingScope.isIn(mScope)) {
                final FileContents contents = getFileContents();
                final String[] cmt =
                    contents.getJavadocBefore(aAST.getLineNo());
                if (cmt == null) {
                    log(aAST.getLineNo(), "javadoc.missing");
                }
                else if (ScopeUtils.isOuterMostType(aAST)) {
                    // don't check author/version for inner classes
                    if ((mAuthorRE != null)
                        && (mAuthorRE.grep(cmt).length == 0))
                    {
                        // TODO: better error message
                        log(aAST.getLineNo(), "type.missingTag", "@author");
                    }

                    if ((mVersionRE != null)
                        && (mVersionRE.grep(cmt).length == 0))
                    {
                        // TODO: better error message
                        log(aAST.getLineNo(), "type.missingTag", "@version");
                    }

                }
            }
        }
    }

