    /**
     * Checks to see if the closing parenthesis are present if required or
     * prohibited.
     *
     * @param aAST the annotation token
     */
    private void checkCheckClosingParens(final DetailAST aAST)
    {
        if (ClosingParens.MIXED.equals(this.mParens)
            || this.mParens == null)
        {
            return;
        }

        final DetailAST paren = aAST.getLastChild();
        final boolean parenExists = paren.getType() == TokenTypes.RPAREN;

        if (ClosingParens.ALWAYS.equals(this.mParens)
            && !parenExists)
        {
            this.log(aAST.getLineNo(), "annotation.parens.missing");
        }
        else if (ClosingParens.NEVER.equals(this.mParens)
            && !aAST.branchContains(TokenTypes.EXPR)
            && parenExists)
        {
            this.log(aAST.getLineNo(), "annotation.parens.present");
        }
    }

