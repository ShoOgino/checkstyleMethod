    /** @see com.puppycrawl.tools.checkstyle.api.Check */
    public void visitToken(DetailAST aAST)
    {
        // Attempt to locate the tokens to do the check
        DetailAST rcurly = null;
        DetailAST nextToken = null;
        if (aAST.getType() == TokenTypes.LITERAL_ELSE) {
            nextToken = aAST;
            final DetailAST thenAST = aAST.getPreviousSibling();
            rcurly = thenAST.getLastChild();
        }
        else if (aAST.getType() == TokenTypes.LITERAL_CATCH) {
            nextToken = (DetailAST) aAST.getNextSibling();
            rcurly = aAST.getLastChild().getLastChild();
        }
        else if (aAST.getType() == TokenTypes.LITERAL_TRY) {
            DetailAST firstChild = (DetailAST) aAST.getFirstChild();
            nextToken = (DetailAST) firstChild.getNextSibling();
            rcurly = firstChild.getLastChild();
        }

        // handle if-then-else without curlies:
        // if (cond)
        //     return 1;
        // else
        //     return 2;
        if (rcurly == null || rcurly.getType() != TokenTypes.RCURLY) {
            return;
        }

        // If have both tokens, perform the check
        if (nextToken != null) {
            if ((getAbstractOption() == RightCurlyOption.SAME)
                && (rcurly.getLineNo() != nextToken.getLineNo()))
            {
                log(rcurly.getLineNo(), rcurly.getColumnNo(),
                    "line.same", "}");
            }
            else if ((getAbstractOption() == RightCurlyOption.ALONE)
                       && (rcurly.getLineNo() == nextToken.getLineNo()))
            {
                log(rcurly.getLineNo(), rcurly.getColumnNo(),
                    "line.alone", "}");
            }
        }
    }

