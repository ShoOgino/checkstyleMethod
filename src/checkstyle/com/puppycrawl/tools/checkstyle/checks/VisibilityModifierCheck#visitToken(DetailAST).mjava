    /** @see Check */
    public void visitToken(DetailAST aAST)
    {
        if (aAST.getType() != JavaTokenTypes.VARIABLE_DEF
                || aAST.getParent().getType() != JavaTokenTypes.OBJBLOCK)
        {
            return;
        }

        final DetailAST varNameAST = getVarNameAST(aAST);
        String varName = varNameAST.getText();
        boolean inInterfaceBlock = inInterfaceBlock(aAST);
        final Set mods = getModifiers(aAST);
        final String declaredScope = getVisibilityScope(mods);
        final String variableScope =
             inInterfaceBlock ? "public" : declaredScope;

        if (!("private".equals(variableScope)
                || inInterfaceBlock // implicitly static and final
                || mods.contains("static") && mods.contains("final")
                || "package".equals(variableScope) && isPackageAllowed()
                || "protected".equals(variableScope) && isProtectedAllowed()
                || "public".equals(variableScope)
                   && getPublicMemberRegexp().match(varName)))
        {
            log(varNameAST.getLineNo(), varNameAST.getColumnNo(),
                    "variable.notPrivate", varName);
        }
    }

