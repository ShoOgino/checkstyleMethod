    /**
     * Process a variable token.
     * Check whether a local variable or parameter shadows a field.
     * Store a field for later comparison with local variables and parameters.
     * @param aAST the variable token.
     */
    private void processVariable(DetailAST aAST)
    {
        if (!ScopeUtils.inInterfaceBlock(aAST)) {
            if (ScopeUtils.isLocalVariableDef(aAST)
                || (aAST.getType() == TokenTypes.PARAMETER_DEF))
            {
                //local variable or parameter. Does it shadow a field?
                final DetailAST nameAST = aAST.findFirstToken(TokenTypes.IDENT);
                final String name = nameAST.getText();
                boolean inStatic = inStatic(aAST);
                final ListIterator it =
                    mFieldsStack.listIterator(mFieldsStack.size());
                while (it.hasPrevious()) {
                    final FieldFrame frame = (FieldFrame) it.previous();
                    inStatic |= frame.isStaticClass();
                    if ((frame.containsStaticField(name)
                        || (!inStatic && frame.containsInstanceField(name)))
                        && ((mRegexp == null) || (!getRegexp().match(name)))
                        && !isIgnoredSetterParam(aAST, name)
                        && !isIgnoredConstructorParam(aAST))
                    {
                        log(nameAST.getLineNo(), nameAST.getColumnNo(),
                            "hidden.field", name);
                        break;
                    }
                }
            }
        }
    }

