    /** {@inheritDoc} */
    public void visitToken(DetailAST aAST)
    {
        mEqualsMethods.clear();
        boolean hasEqualsObject = false;

        // examine method definitions for equals methods
        final DetailAST objBlock = aAST.findFirstToken(TokenTypes.OBJBLOCK);
        if (objBlock != null) {
            DetailAST child = (DetailAST) objBlock.getFirstChild();
            while (child != null) {
                if (child.getType() == TokenTypes.METHOD_DEF) {
                    if (CheckUtils.isEqualsMethod(child)) {
                        if (hasObjectParameter(child)) {
                            hasEqualsObject = true;
                        }
                        else {
                            mEqualsMethods.add(child);
                        }
                    }
                }
                child = (DetailAST) child.getNextSibling();
            }

            // report equals method definitions
            if (!hasEqualsObject) {
                final Iterator it = mEqualsMethods.iterator();
                while (it.hasNext()) {
                    final DetailAST equalsAST = (DetailAST) it.next();
                    final DetailAST nameNode =
                        equalsAST.findFirstToken(TokenTypes.IDENT);
                    log(
                        nameNode.getLineNo(),
                        nameNode.getColumnNo(),
                        "covariant.equals");
                }
            }
        }
    }

