    /**
     * Checks if one class is subclass of another
     *
     * @param aChild <code>FullIdent</code> of class
     *               which should be child
     * @param aParent <code>FullIdent</code> of class
     *                which should be parent
     * @return true  if aChild is subclass of aParent
     *         false otherwise
     */
    protected boolean isSubclass(FullIdent aChild, FullIdent aParent)
    {
        final ClassResolver cr = getClassResolver();
        try {
            final Class childClass = cr.resolve(aChild.getText());
            try {
                final Class parentClass = cr.resolve(aParent.getText());
                return parentClass.isAssignableFrom(childClass);
            }
            catch (ClassNotFoundException e) {
                log(aChild.getLineNo(), aChild.getColumnNo(),
                    "redundant.throws.classInfo",
                    aParent.getText());
            }
        }
        catch (ClassNotFoundException e) {
            log(aChild.getLineNo(), aChild.getColumnNo(),
                "redundant.throws.classInfo",
                aChild.getText());
        }

        return true;
    }

