  /**
   * process the given <code>SymTabAST</code> as a class definition
   *
   * @param tree the <code>SymTabAST</code> to process
   * @return <code>void</code>
   * @see #makeClass(String, SymTabAST)
   * @see #walkSiblings(SymTabAST, boolean)
   * @see net.sourceforge.transmogrify.symtab.antlr.SymTabAST
   */
  public void processClass(SymTabAST tree) {
    String name = tree.findFirstToken(TokenTypes.IDENT).getText();

    makeClass(name, tree);
    final SymTabAST objblock =
        tree.findFirstToken(TokenTypes.OBJBLOCK);
    SymTabAST start = (SymTabAST)objblock.getFirstChild();
    if (start != null) {
        //skip LPAREN
        if (start.getType() == TokenTypes.LPAREN) {
            start = (SymTabAST)start.getNextSibling();
        }
        walkSiblings(start, false);
    }
    
    symbolTable.popScope();
  }

