    /**
     * Checks if a given method is writeReplace() or readResolve().
     * @param aAST method def to check
     * @return true if this is a writeReplace() definition
     */
    private boolean isWriteReplaceOrReadResolve(DetailAST aAST)
    {
        // name is writeReplace or readResolve...
        final DetailAST ident = aAST.findFirstToken(TokenTypes.IDENT);
        if (!"writeReplace".equals(ident.getText())
            && !"readResolve".equals(ident.getText()))
        {
            return false;
        }

        // returns Object...
        final DetailAST typeAST =
            (DetailAST) aAST.findFirstToken(TokenTypes.TYPE).getFirstChild();
        if (typeAST.getType() != TokenTypes.DOT
            && typeAST.getType() != TokenTypes.IDENT)
        {
            return false;
        }

        // should have no parameters...
        final DetailAST params = aAST.findFirstToken(TokenTypes.PARAMETERS);
        if (params != null && params.getChildCount() != 0) {
            return false;
        }

        // and, finally, it should throws java.io.ObjectStreamException
        final DetailAST throwsAST =
            aAST.findFirstToken(TokenTypes.LITERAL_THROWS);
        if (throwsAST == null || throwsAST.getChildCount() != 1) {
            return false;
        }
        final DetailAST excpt = (DetailAST) throwsAST.getFirstChild();
        final String exception = FullIdent.createFullIdent(excpt).getText();
        if (!"java.io.ObjectStreamException".equals(exception)
            && !"ObjectStreamException".equals(exception))
        {
            return false;
        }

        return true;
    }

