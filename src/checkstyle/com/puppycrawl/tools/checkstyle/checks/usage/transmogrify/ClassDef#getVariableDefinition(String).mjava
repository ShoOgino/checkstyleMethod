    public IVariable getVariableDefinition(String name) {
        IVariable result = null;

        // in keeping with getField in java.lang.Class
        // 1) current class
        // 2) direct superinterfaces
        // 3) superclass
        // then we do the parent scope in case its an inner class

        result = (VariableDef) (elements.get(name));

        if (result == null) {
            IClass[] superinterfaces = getInterfaces();
            for (int i = 0;
                i < superinterfaces.length && result == null;
                i++) {
                result = superinterfaces[i].getVariableDefinition(name);
            }
        }

        if (result == null) {
            if (superclass != null) {
                result = superclass.getVariableDefinition(name);
            }
        }

        if (result == null) {
            if (getParentScope() != null) {
                result = getParentScope().getVariableDefinition(name);
            }
        }

        return result;
    }

