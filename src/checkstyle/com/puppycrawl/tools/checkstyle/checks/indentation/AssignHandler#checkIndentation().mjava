    /**
     * Check the indentation of the expression we are handling.
     */
    public void checkIndentation()
    {
        final IndentLevel expectedLevel = getChildrenExpectedLevel();

        // check indentation of assign if it starts line
        final DetailAST assign = getMainAst();
        if (startsLine(assign)
            && !expectedLevel.accept(expandedTabsColumnNo(assign)))
        {
            logError(assign, "" , expandedTabsColumnNo(assign), expectedLevel);
        }

        // check indentation of rvalue
        DetailAST child = (DetailAST) assign.getFirstChild();

        // if this is assign in expression then skip first child,
        // because it's lvalue.
        final DetailAST parent = assign.getParent();
        if (parent != null && parent.getType() == TokenTypes.EXPR) {
            child = (DetailAST) child.getNextSibling();
        }
        if (parent != null
            && parent.getType() == TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR)
        {
            child = (DetailAST) assign.getNextSibling();
        }

        checkExpressionSubtree(child, expectedLevel, false, true);
    }

