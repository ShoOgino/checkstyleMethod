    /** Creates a HandlerFactory. */
    public HandlerFactory()
    {
        register(TokenTypes.CASE_GROUP, CaseHandler.class);
        register(TokenTypes.LITERAL_SWITCH, SwitchHandler.class);
        register(TokenTypes.SLIST, SlistHandler.class);
        register(TokenTypes.PACKAGE_DEF, PackageDefHandler.class);
        register(TokenTypes.LITERAL_ELSE, ElseHandler.class);
        register(TokenTypes.LITERAL_IF, IfHandler.class);
        register(TokenTypes.LITERAL_TRY, TryHandler.class);
        register(TokenTypes.LITERAL_CATCH, CatchHandler.class);
        register(TokenTypes.LITERAL_FINALLY, FinallyHandler.class);
        register(TokenTypes.LITERAL_DO, DoWhileHandler.class);
        register(TokenTypes.LITERAL_WHILE, WhileHandler.class);
        register(TokenTypes.LITERAL_FOR, ForHandler.class);
        register(TokenTypes.METHOD_DEF, MethodDefHandler.class);
        register(TokenTypes.CTOR_DEF, MethodDefHandler.class);
        register(TokenTypes.CLASS_DEF, ClassDefHandler.class);
        register(TokenTypes.OBJBLOCK, ObjectBlockHandler.class);
        register(TokenTypes.INTERFACE_DEF, ClassDefHandler.class);
        register(TokenTypes.IMPORT, ImportHandler.class);
        register(TokenTypes.ARRAY_INIT, ArrayInitHandler.class);
        register(TokenTypes.METHOD_CALL, MethodCallHandler.class);
        register(TokenTypes.CTOR_CALL, MethodCallHandler.class);
        register(TokenTypes.LABELED_STAT, LabelHandler.class);
        register(TokenTypes.STATIC_INIT, StaticInitHandler.class);
        register(TokenTypes.ASSIGN, AssignHandler.class);
        register(TokenTypes.PLUS_ASSIGN, AssignHandler.class);
        register(TokenTypes.MINUS_ASSIGN, AssignHandler.class);
        register(TokenTypes.STAR_ASSIGN, AssignHandler.class);
        register(TokenTypes.DIV_ASSIGN, AssignHandler.class);
        register(TokenTypes.MOD_ASSIGN, AssignHandler.class);
        register(TokenTypes.SR_ASSIGN, AssignHandler.class);
        register(TokenTypes.BSR_ASSIGN, AssignHandler.class);
        register(TokenTypes.SL_ASSIGN, AssignHandler.class);
        register(TokenTypes.BAND_ASSIGN, AssignHandler.class);
        register(TokenTypes.BXOR_ASSIGN, AssignHandler.class);
        register(TokenTypes.BOR_ASSIGN, AssignHandler.class);
        register(TokenTypes.VARIABLE_DEF, MemberDefHandler.class);
        register(TokenTypes.LITERAL_NEW, NewHandler.class);
    }

