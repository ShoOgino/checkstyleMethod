    /**
     * Check the indent level of the children of the specified parent
     * expression.
     * 
     * @param aParent             the parent whose children we are checking
     * @param aTokenTypes         the token types to check
     * @param aStartLevel         the starting indent level
     * @param aFirstLineMatches   whether or not the first line needs to match
     * @param aAllowNesting       whether or not nested children are allowed
     */
    protected void checkChildren(DetailAST aParent, int[] aTokenTypes, 
        int aStartLevel, 
        boolean aFirstLineMatches, boolean aAllowNesting) 
    {
        Arrays.sort(aTokenTypes);
        for (DetailAST child = (DetailAST) aParent.getFirstChild(); 
                child != null; 
                child = (DetailAST) child.getNextSibling()) 
        {
            if (Arrays.binarySearch(aTokenTypes, child.getType()) >= 0) {
                checkExpressionSubtree(child, aStartLevel, 
                    aFirstLineMatches, aAllowNesting);
            }
        }
    }

