    /**
     * Tests whether the given property files (arranged by their prefixes
     * in a Map) contain the proper keys.
     *
     * Each group of files must have the same keys. If this is not the case
     * an error message is posted giving information which key misses in
     * which file.
     *
     * @param aPropFiles the property files organized as Map
     */
    private void checkPropertyFileSets(Map aPropFiles)
    {
        final Set entrySet = aPropFiles.entrySet();

        for (final Iterator iterator = entrySet.iterator(); iterator.hasNext();)
        {
            final Map.Entry entry = (Map.Entry) iterator.next();
            final Set files = (Set) entry.getValue();

            if (files.size() >= 2) {
                // build a map from files to the keys they contain
                final Set keys = new HashSet();
                final Map fileMap = new HashMap();

                for (final Iterator iter = files.iterator(); iter.hasNext();) {
                    final File file = (File) iter.next();
                    final Set fileKeys = loadKeys(file);
                    keys.addAll(fileKeys);
                    fileMap.put(file, fileKeys);
                }

                // check the map for consistency
                compareKeySets(keys, fileMap);
            }
        }
    }

