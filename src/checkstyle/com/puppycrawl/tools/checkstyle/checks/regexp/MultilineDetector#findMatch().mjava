    /** recursive method that finds the matches. */
    private void findMatch()
    {
        final boolean foundMatch = mMatcher.find();
        if (!foundMatch) {
            return;
        }

        final LineColumn start = mText.lineColumn(mMatcher.start());
        final LineColumn end = mText.lineColumn(mMatcher.end());

        if (!mOptions.getSuppressor().shouldSuppress(start.getLine(),
                start.getColumn(), end.getLine(), end.getColumn()))
        {
            mCurrentMatches++;
            if (mCurrentMatches > mOptions.getMaximum()) {
                if ("".equals(mOptions.getMessage())) {
                    mOptions.getReporter().log(start.getLine(),
                            "regexp.exceeded", mMatcher.pattern().toString());
                }
                else {
                    mOptions.getReporter()
                            .log(start.getLine(), mOptions.getMessage());
                }
            }
        }
        findMatch();
    }

