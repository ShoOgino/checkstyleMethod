    /**
     * Compares the key sets of the given property files (arranged in a map)
     * with the specified key set. All missing keys are reported.
     * @param aKeys the set of keys to compare with
     * @param aFileMap a Map from property files to their key sets
     */
    private void compareKeySets(Set aKeys, Map aFileMap)
    {
        Set fls = aFileMap.keySet();

        for (Iterator iter = fls.iterator(); iter.hasNext();) {
            File currentFile = (File) iter.next();
            final MessageDispatcher dispatcher = getMessageDispatcher();
            final String path = currentFile.getPath();
            dispatcher.fireFileStarted(path);
            Set currentKeys = (Set) aFileMap.get(currentFile);

            // Clone the keys so that they are not lost
            Set keysClone = new HashSet(aKeys);
            keysClone.removeAll(currentKeys);

            // Remaining elements in the key set are missing in the current file
            if (!keysClone.isEmpty()) {
                for (Iterator it = keysClone.iterator(); it.hasNext();) {
                    Object[] key = new Object[]{it.next()};
                    LocalizedMessage[] errors = new LocalizedMessage[1];
                    final String bundle = getClass().getPackage().getName() + ".messages";
                    errors[0] = new LocalizedMessage(
                            0, bundle, "translation.missingKey", key);
                    getMessageDispatcher().fireErrors(path, errors);
                }
            }
            dispatcher.fireFileFinished(path);
        }
    }

