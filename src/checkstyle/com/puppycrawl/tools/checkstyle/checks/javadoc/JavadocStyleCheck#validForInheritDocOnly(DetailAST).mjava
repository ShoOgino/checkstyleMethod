    /**
     * Checks to see if the current AST is valid to only contain an
     * inheritDoc comment.
     *
     * @param aAST the current node
     * @return true if inheritDoc comment valid
     */
    private boolean validForInheritDocOnly(DetailAST aAST)
    {
        assert aAST != null;

        final boolean validForMethod =
            aAST.getType() == TokenTypes.METHOD_DEF
            && !aAST.branchContains(TokenTypes.LITERAL_STATIC)
            && ScopeUtils.getScopeFromMods(aAST.findFirstToken(
                TokenTypes.MODIFIERS)) != Scope.PRIVATE;

        return aAST.getType() == TokenTypes.ENUM_DEF
            || aAST.getType() == TokenTypes.CLASS_DEF
            || validForMethod
            || aAST.getType() == TokenTypes.INTERFACE_DEF;
    }

