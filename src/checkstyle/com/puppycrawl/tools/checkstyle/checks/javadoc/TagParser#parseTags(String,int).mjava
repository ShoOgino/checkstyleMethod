    /**
     * Parses the text line for any HTML tags and adds them to the internal
     * List of tags.
     * @param aText the source line to parse.
     * @param aLineNo the source line number.
     */
    private void parseTags(String aText, int aLineNo)
    {
        int position = 0;
        final StringTokenizer tokenizer =
            new StringTokenizer(aText, " \t\n\r\f<>", true);

        while (tokenizer.hasMoreTokens()) {
            String token = tokenizer.nextToken();
            position += token.length();

            if (token.equals("<")) {
                token = tokenizer.nextToken();
                position += token.length();

                if (((token.charAt(0) >= 'A')
                     && (token.charAt(0) <= 'Z'))
                    || ((token.charAt(0) >= 'a')
                        && (token.charAt(0) <= 'z'))
                    || (token.charAt(0) == '/'))
                {
                    // If a character or / follows the < sign,
                    // then assume its html.
                    // The non-html version is "&lt;"
                    // Point before the angle bracket
                    final int startOfTag = position - token.length() - 1;
                    add(new HtmlTag(token, aLineNo, startOfTag, aText));
                }
            }
        }
    }

