    /** @see com.puppycrawl.tools.checkstyle.api.Check */
    public void visitToken(DetailAST aAST)
    {
        final DetailAST mods = aAST.findFirstToken(TokenTypes.MODIFIERS);
        final Scope declaredScope = ScopeUtils.getScopeFromMods(mods);
        final Scope typeScope =
            ScopeUtils.inInterfaceBlock(aAST) ? Scope.PUBLIC : declaredScope;
        if (typeScope.isIn(mScope)) {
            final Scope surroundingScope = ScopeUtils.getSurroundingScope(aAST);
            if ((surroundingScope == null) || surroundingScope.isIn(mScope)) {
                final FileContents contents = getFileContents();
                final int lineNo = aAST.getLineNo();
                final TextBlock cmt = contents.getJavadocBefore(lineNo);
                if (cmt == null) {
                    log(lineNo, "javadoc.missing");
                }
                else if (ScopeUtils.isOuterMostType(aAST)) {
                    // don't check author/version for inner classes
                    checkTag(lineNo, cmt.getText(), "@author",
                            mAuthorTagRE, mAuthorFormatRE, mAuthorFormat);
                    checkTag(lineNo, cmt.getText(), "@version",
                            mVersionTagRE, mVersionFormatRE, mVersionFormat);
                }
            }
        }
    }

