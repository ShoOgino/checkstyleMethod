    /**
     * Checks parameters of the method or ctor.
     * @param aMethod method or ctor to check.
     */
    private void visitMethod(final DetailAST aMethod)
    {
        // exit on fast lane if there is nothing to check here
        if (!aMethod.branchContains(TokenTypes.PARAMETER_DEF)) {
            return;
        }

        // ignore abstract method
        final DetailAST modifiers =
            aMethod.findFirstToken(TokenTypes.MODIFIERS);
        if (modifiers.branchContains(TokenTypes.ABSTRACT)) {
            return;
        }

        // we can now be sure that there is at least one parameter
        final DetailAST parameters =
            aMethod.findFirstToken(TokenTypes.PARAMETERS);
        DetailAST child = (DetailAST) parameters.getFirstChild();
        while (child != null) {
            // childs are PARAMETER_DEF and COMMA
            if (child.getType() == TokenTypes.PARAMETER_DEF) {
                checkParam(child);
            }
            child = (DetailAST) child.getNextSibling();
        }
    }

