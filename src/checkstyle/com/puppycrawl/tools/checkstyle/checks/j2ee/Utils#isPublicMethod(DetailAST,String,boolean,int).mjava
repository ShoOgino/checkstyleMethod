    /**
     * Determines whether an AST node defines a public method.
     * @param aAST the node to check. Normally aAST is a METHOD_DEF.
     * @param aName the name of the method.
     * @param aIsVoid designates whether the method is void.
     * @param aParameterCount the number of method parameters.
     * @return true if aAST is the definition of a public method with name
     * aName and that is void according to aIsVoid.
     */
    public static boolean isPublicMethod(
        DetailAST aAST,
        String aName,
        boolean aIsVoid,
        int aParameterCount)
    {
        final DetailAST nameNode = aAST.findFirstToken(TokenTypes.IDENT);
        if (nameNode != null) {
            final String name = nameNode.getText();
            if (name.equals(aName)
                && isPublic(aAST)
                && (isVoid(aAST) == aIsVoid))
            {
                final DetailAST parameters =
                    aAST.findFirstToken(TokenTypes.PARAMETERS);
                if (parameters.getChildCount() == aParameterCount) {
                    return true;
                }
            }
        }
        return false;
    }

