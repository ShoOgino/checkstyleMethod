    /**
     * Checks that method has only <code>String[]</code> param
     * @param aMethod the METHOD_DEF node
     * @return true if check passed, false otherwise
     */
    private boolean checkParams(DetailAST aMethod)
    {
        DetailAST params = aMethod.findFirstToken(TokenTypes.PARAMETERS);
        if (params.getChildCount() != 1) {
            return false;
        }
        DetailAST paramType = ((DetailAST) params.getFirstChild())
            .findFirstToken(TokenTypes.TYPE);
        DetailAST arrayDecl =
            paramType.findFirstToken(TokenTypes.ARRAY_DECLARATOR);
        if (arrayDecl == null) {
            return false;
        }

        DetailAST arrayType = (DetailAST) arrayDecl.getFirstChild();

        if (arrayType.getType() == TokenTypes.IDENT
            || arrayType.getType() == TokenTypes.DOT)
        {
            FullIdent type = FullIdent.createFullIdent(arrayType);
            return ("String".equals(type.getText())
                    || "java.lang.String".equals(type.getText()));
        }

        return false;
    }

