    /** @see com.puppycrawl.tools.checkstyle.api.Check */
    public void visitToken(DetailAST aAST)
    {
        final DetailAST parenAST;
        if ((aAST.getType() == TokenTypes.METHOD_CALL)
            || (aAST.getType() == TokenTypes.SUPER_CTOR_CALL))
        {
            parenAST = aAST;
        }
        else {
            parenAST = aAST.findFirstToken(TokenTypes.LPAREN);
            // array construction => parenAST == null
            if (parenAST == null) {
                return;
            }
        }
        int parenColumnNo = parenAST.getColumnNo();
        final String[] lines = getLines();
        int identLineNo = -1;
        int identColumnNo = -1;
        final String identText;
        if (aAST.getType() == TokenTypes.SUPER_CTOR_CALL) {
            identText = "super";
            final String parenLine = lines[parenAST.getLineNo() - 1];
            final int superIndex =
                parenLine.lastIndexOf("super", parenAST.getColumnNo());
            if (superIndex != -1) {
                identLineNo = aAST.getLineNo();
                identColumnNo = superIndex;
            }
        }
        else {
            final DetailAST identAST;
            final DetailAST dotAST = aAST.findFirstToken(TokenTypes.DOT);
            if (dotAST != null) {
                identAST = dotAST.getLastChild();
            }
            else {
                identAST = aAST.findFirstToken(TokenTypes.IDENT);
            }
            identLineNo = identAST.getLineNo();
            identColumnNo = identAST.getColumnNo();
            identText = identAST.getText();
        }

        if (identLineNo == parenAST.getLineNo()) {
            final int after = identColumnNo + identText.length();
            final String line = lines[identLineNo - 1];
            if ((PadOption.NOSPACE == getAbstractOption())
                && (Character.isWhitespace(line.charAt(after))))
            {
                log(identLineNo, after, "ws.followed", identText);
            }
            else if ((PadOption.SPACE == getAbstractOption())
                     && !Character.isWhitespace(line.charAt(after)))
            {
                log(identLineNo, after, "ws.notFollowed", identText);
            }
        }
        else if (!mAllowLineBreaks) {
            log(
                parenAST.getLineNo(),
                parenColumnNo,
                "line.previous",
                parenAST.getText());
        }
    }

