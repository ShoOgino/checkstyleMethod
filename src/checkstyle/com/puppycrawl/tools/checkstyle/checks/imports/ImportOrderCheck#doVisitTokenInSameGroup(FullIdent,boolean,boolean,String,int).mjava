    /**
     * Shares processing...
     *
     * @param aIdent the import to process.
     * @param aIsStatic whether the token is static or not.
     * @param aPrevious previous non-static but current is static (above), or
     *    previous static but current is non-static (under).
     * @param aName the name of the current import.
     * @param aLine the line of the current import.
     */
    private void doVisitTokenInSameGroup(FullIdent aIdent, boolean aIsStatic,
            boolean aPrevious, String aName, int aLine)
    {
        if (!mOrdered) {
            return;
        }

        if (getAbstractOption().equals(ImportOrderOption.INFLOW)) {
            // out of lexicographic order
            if (compare(mLastImport, aName, mCaseSensitive) >= 0) {
                log(aLine, "import.ordering", aName);
            }
        }
        else {
            final boolean shouldFireError =
                // current and previous static or current and
                // previous non-static
                (!(mLastImportStatic ^ aIsStatic)
                &&
                // and out of lexicographic order
                (compare(mLastImport, aName, mCaseSensitive) >= 0))
                ||
                // previous non-static but current is static (above)
                // or
                // previous static but current is non-static (under)
                aPrevious;

            if (shouldFireError) {
                log(aLine, "import.ordering", aName);
            }
        }
    }

