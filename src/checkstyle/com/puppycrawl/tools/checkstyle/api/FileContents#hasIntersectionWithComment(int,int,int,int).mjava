    /**
     * Checks if the specified position intersects with a comment.
     * @param aStartLineNo the starting line number
     * @param aStartColNo the starting column number
     * @param aEndLineNo the ending line number
     * @param aEndColNo the ending column number
     * @return true if the positions intersects with a comment.
     **/
    public boolean hasIntersectionWithComment(
            int aStartLineNo, int aStartColNo, int aEndLineNo, int aEndColNo)
    {
        // Check C comments (all comments should be checked)
        final Collection values = mCComments.values();

        final Iterator it = values.iterator();
        while (it.hasNext()) {
            final List row = (List) it.next();
            final Iterator rowIterator = row.iterator();
            while (rowIterator.hasNext()) {
                final TextBlock comment = (TextBlock) rowIterator.next();
                if (comment.intersects(
                        aStartLineNo, aStartColNo, aEndLineNo, aEndColNo))
                {
                    return true;
                }
            }
        }

        // Check CPP comments (line searching is possible)
        for (int lineNumber = aStartLineNo; lineNumber <= aEndLineNo;
            lineNumber++)
        {
            final TextBlock comment =
                (TextBlock) mCPlusPlusComments.get(new Integer(lineNumber));
            if ((comment != null)
                && comment.intersects(aStartLineNo, aStartColNo,
                                      aEndLineNo, aEndColNo))
            {
                return true;
            }
        }
        return false;
    }

