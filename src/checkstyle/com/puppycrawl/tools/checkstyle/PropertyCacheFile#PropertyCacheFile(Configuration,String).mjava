    /**
     * Creates a new <code>PropertyCacheFile</code> instance.
     *
     * @param aCurrentConfig the current configuration, not null
     * @param aFileName the cache file
     */
    PropertyCacheFile(Configuration aCurrentConfig, String aFileName)
    {
        boolean setInActive = true;
        final String fileName = aFileName;
        if (fileName != null) {
            FileInputStream inStream = null;
            try {
                inStream = new FileInputStream(fileName);
                mDetails.load(inStream);
                String cachedConfigHash = mDetails.getProperty(CONFIG_HASH_KEY);
                String currentConfigHash = getConfigHashCode(aCurrentConfig);
                setInActive = false;
                if ((cachedConfigHash == null)
                    || !cachedConfigHash.equals(currentConfigHash))
                {
                    // Detected configuration change - clear cache
                    mDetails.clear();
                    mDetails.put(CONFIG_HASH_KEY, currentConfigHash);
                }
            }
            catch (FileNotFoundException e) {
                // Ignore, the cache does not exist
                setInActive = false;
            }
            catch (IOException e) {
                // TODO: use logger
                System.out.println("Unable to open cache file, ignoring.");
                e.printStackTrace(System.out);
            }
            finally {
                if (inStream != null) {
                    try {
                        inStream.close();
                    }
                    catch (IOException ex) {
                        // TODO: use logger
                        System.out.println("Unable to close cache file.");
                        ex.printStackTrace(System.out);
                    }
                }
            }
        }
        mDetailsFile = (setInActive) ? null : fileName;
    }

