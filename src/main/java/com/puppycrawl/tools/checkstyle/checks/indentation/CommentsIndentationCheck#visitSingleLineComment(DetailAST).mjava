    /**
     * Checks single line comment indentations over surrounding code, e.g.:
     * <p>
     * {@code
     * // some comment - this is ok
     * double d = 3.14;
     *     // some comment - this is <b>not</b> ok.
     * double d1 = 5.0;
     * }
     * </p>
     * @param singleLineComment {@link TokenTypes#SINGLE_LINE_COMMENT single line comment}.
     */
    private void visitSingleLineComment(DetailAST singleLineComment) {
        final DetailAST prevStmt = getPreviousStatementOfSingleLineComment(singleLineComment);
        final DetailAST nextStmt = singleLineComment.getNextSibling();

        if (!isTrailingSingleLineComment(singleLineComment)) {
            if (isInEmptyCaseBlock(prevStmt, nextStmt)) {
                handleSingleLineCommentInEmptyCaseBlock(prevStmt, singleLineComment,
                    nextStmt);
            }
            else if (isFallThroughSingleLineComment(prevStmt, nextStmt)) {
                handleFallThroughtSingleLineComment(prevStmt, singleLineComment,
                    nextStmt);
            }
            else if (isInEmptyCodeBlock(prevStmt, nextStmt)) {
                handleSingleLineCommentInEmptyCodeBlock(singleLineComment, nextStmt);
            }
            else if (isSingleLineCommentAtTheEndOfTheCodeBlock(nextStmt)) {
                handleSingleLineCommentAtTheEndOfTheCodeBlock(prevStmt, singleLineComment,
                    nextStmt);
            }
            else if (nextStmt != null
                        && !areSameLevelIndented(singleLineComment, nextStmt, nextStmt)) {
                log(singleLineComment.getLineNo(), MSG_KEY_SINGLE, nextStmt.getLineNo(),
                    singleLineComment.getColumnNo(), nextStmt.getColumnNo());
            }
        }
    }

