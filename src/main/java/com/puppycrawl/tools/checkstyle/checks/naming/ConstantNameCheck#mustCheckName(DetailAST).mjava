    @Override
    protected final boolean mustCheckName(DetailAST ast) {
        boolean retVal = false;

        final DetailAST modifiersAST =
            ast.findFirstToken(TokenTypes.MODIFIERS);
        final boolean isStatic = modifiersAST.branchContains(TokenTypes.LITERAL_STATIC);
        final boolean isFinal = modifiersAST.branchContains(TokenTypes.FINAL);

        if (isStatic  && isFinal && shouldCheckInScope(modifiersAST)
                || ScopeUtils.isInAnnotationBlock(ast)
                || ScopeUtils.isInInterfaceOrAnnotationBlock(ast)
                        && !ScopeUtils.isInCodeBlock(ast)) {
            // Handle the serialVersionUID and serialPersistentFields constants
            // which are used for Serialization. Cannot enforce rules on it. :-)
            final DetailAST nameAST = ast.findFirstToken(TokenTypes.IDENT);
            if (!"serialVersionUID".equals(nameAST.getText())
                && !"serialPersistentFields".equals(nameAST.getText())) {
                retVal = true;
            }
        }

        return retVal;
    }

