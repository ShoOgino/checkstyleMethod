    /**
     * Returns the annotation values represented by an AST.
     * @param ast an AST node for an EXPR or ANNOTATION_ARRAY_INIT
     * @return the list of Java string represented by the given AST for an
     *         expression or annotation array initializer
     * @throws IllegalArgumentException if the AST is invalid
     */
    private static List<String> getAnnotationValues(DetailAST ast) {
        switch (ast.getType()) {
            case TokenTypes.EXPR:
                return Collections.singletonList(getStringExpr(ast));

            case TokenTypes.ANNOTATION_ARRAY_INIT:
                return findAllExpressionsInChildren(ast);

            default:
                throw new IllegalArgumentException(
                        "Expression or annotation array initializer AST expected: " + ast);
        }
    }

