    /**
     * Verifies that a type definition has a required tag.
     * @param lineNo the line number for the type definition.
     * @param tags tags from the Javadoc comment for the type definition.
     * @param tagName the required tag name.
     * @param formatPattern regexp for the tag value.
     * @param format pattern for the tag value.
     */
    private void checkTag(int lineNo, List<JavadocTag> tags, String tagName,
                          Pattern formatPattern, String format) {
        if (formatPattern == null) {
            return;
        }

        int tagCount = 0;
        for (int i = tags.size() - 1; i >= 0; i--) {
            final JavadocTag tag = tags.get(i);
            if (tag.getTagName().equals(tagName)) {
                tagCount++;
                if (!formatPattern.matcher(tag.getArg1()).find()) {
                    log(lineNo, TAG_FORMAT, "@" + tagName, format);
                }
            }
        }
        if (tagCount == 0) {
            log(lineNo, MISSING_TAG, "@" + tagName);
        }
    }

