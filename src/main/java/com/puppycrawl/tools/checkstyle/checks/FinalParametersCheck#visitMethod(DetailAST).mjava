    /**
     * Checks parameters of the method or ctor.
     * @param method method or ctor to check.
     */
    private void visitMethod(final DetailAST method) {
        final DetailAST modifiers =
            method.findFirstToken(TokenTypes.MODIFIERS);
        // exit on fast lane if there is nothing to check here

        if (method.branchContains(TokenTypes.PARAMETER_DEF)
                // ignore abstract and native methods
                && !modifiers.branchContains(TokenTypes.ABSTRACT)
                && !modifiers.branchContains(TokenTypes.LITERAL_NATIVE)) {
            // we can now be sure that there is at least one parameter
            final DetailAST parameters =
                method.findFirstToken(TokenTypes.PARAMETERS);
            DetailAST child = parameters.getFirstChild();
            while (child != null) {
                // children are PARAMETER_DEF and COMMA
                if (child.getType() == TokenTypes.PARAMETER_DEF) {
                    checkParam(child);
                }
                child = child.getNextSibling();
            }
        }
    }

