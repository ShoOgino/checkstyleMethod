    /**
     * Tests whether the given property files (arranged by their prefixes
     * in a Map) contain the proper keys.
     *
     * <p>Each group of files must have the same keys. If this is not the case
     * an error message is posted giving information which key misses in
     * which file.
     *
     * @param propFiles the property files organized as Map
     */
    private void checkPropertyFileSets(Map<String, Set<File>> propFiles) {
        final Set<Entry<String, Set<File>>> entrySet = propFiles.entrySet();

        for (Entry<String, Set<File>> entry : entrySet) {
            final Set<File> files = entry.getValue();

            if (files.size() >= 2) {
                // build a map from files to the keys they contain
                final Set<Object> keys = Sets.newHashSet();
                final Map<File, Set<Object>> fileMap = Maps.newHashMap();

                for (File file : files) {
                    final Set<Object> fileKeys = loadKeys(file);
                    keys.addAll(fileKeys);
                    fileMap.put(file, fileKeys);
                }

                // check the map for consistency
                compareKeySets(keys, fileMap);
            }
        }
    }

