    @Override
    protected IndentLevel getIndentImpl() {
        final IndentLevel indentLevel;
        // if inside a method call's params, this could be part of
        // an expression, so get the previous line's start
        if (getParent() instanceof MethodCallHandler) {
            final MethodCallHandler container =
                    (MethodCallHandler) getParent();
            if (areOnSameLine(container.getMainAst(), getMainAst())
                    || isChainedMethodCallWrapped()
                    || areMethodsChained(container.getMainAst(), getMainAst())) {
                indentLevel = container.getIndent();
            }
            // we should increase indentation only if this is the first
            // chained method call which was moved to the next line
            else {
                indentLevel = new IndentLevel(container.getIndent(),
                    getIndentCheck().getLineWrappingIndentation());
            }
        }
        else if (getMainAst().getFirstChild().getType() == TokenTypes.LITERAL_NEW) {
            indentLevel = super.getIndentImpl();
        }
        else {
            // if our expression isn't first on the line, just use the start
            // of the line
            final LineSet lines = new LineSet();
            findSubtreeLines(lines, getMainAst().getFirstChild(), true);
            final int firstCol = lines.firstLineCol();
            final int lineStart = getLineStart(getFirstAst(getMainAst()));
            if (lineStart == firstCol) {
                indentLevel = super.getIndentImpl();
            }
            else {
                indentLevel = new IndentLevel(lineStart);
            }
        }
        return indentLevel;
    }

