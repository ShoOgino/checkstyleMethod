    /**
     * Checks whether a method has any of ignored annotations.
     * @param methodDef method definition token.
     * @param annotations a set of ignored annotations.
     * @return true if a method has any of ignored annotations.
     */
    private static boolean hasIgnoredAnnotation(DetailAST methodDef, Set<String> annotations) {
        final DetailAST modifiers = methodDef.findFirstToken(TokenTypes.MODIFIERS);
        boolean hasIgnoredAnnotation = false;
        if (modifiers.findFirstToken(TokenTypes.ANNOTATION) != null) {
            final Optional<DetailAST> annotation = TokenUtil.findFirstTokenByPredicate(modifiers,
                currentToken -> {
                    return currentToken.getType() == TokenTypes.ANNOTATION
                        && annotations.contains(getAnnotationName(currentToken));
                });
            if (annotation.isPresent()) {
                hasIgnoredAnnotation = true;
            }
        }
        return hasIgnoredAnnotation;
    }

