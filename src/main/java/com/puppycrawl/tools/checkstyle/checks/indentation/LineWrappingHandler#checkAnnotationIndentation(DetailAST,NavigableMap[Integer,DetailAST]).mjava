    /**
     * Checks line wrapping into annotations.
     *
     * @param aAtNode at-clause node.
     * @param aFirstNodesOnLines map which contains
     *     first nodes as values and line numbers as keys.
     */
    private void checkAnnotationIndentation(DetailAST aAtNode,
            NavigableMap<Integer, DetailAST> aFirstNodesOnLines)
    {
        final int currentIndent = aAtNode.getColumnNo() + mIndentLevel;
        final int firstNodeIndent = aAtNode.getColumnNo();
        final Collection<DetailAST> values = aFirstNodesOnLines.values();
        final DetailAST lastAnnotationNode = getLastAnnotationNode(aAtNode);
        final int lastAnnotationLine = lastAnnotationNode.getLineNo();
        final int lastAnnotattionColumn = lastAnnotationNode.getColumnNo();

        final Iterator<DetailAST> itr = values.iterator();
        while (itr.hasNext() && aFirstNodesOnLines.size() > 1) {
            final DetailAST node = itr.next();

            if (node.getLineNo() < lastAnnotationLine
                    || node.getLineNo() == lastAnnotationLine
                    && node.getColumnNo() <= lastAnnotattionColumn)
            {
                final DetailAST parentNode = node.getParent();
                if (node.getType() == TokenTypes.AT
                        && parentNode.getParent().getType() == TokenTypes.MODIFIERS)
                {
                    logWarningMessage(node, firstNodeIndent);
                }
                else {
                    logWarningMessage(node, currentIndent);
                }
                itr.remove();
            }
            else {
                break;
            }
        }
    }

