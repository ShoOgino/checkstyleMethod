    /**
     * Checks line wrapping into annotations.
     *
     * @param aModifiersNode modifiers node.
     * @param aFirstNodesOnLines map which contains
     *     first nodes as values and line numbers as keys.
     */
    private void checkAnnotationIndentation(DetailAST aModifiersNode,
            NavigableMap<Integer, DetailAST> aFirstNodesOnLines)
    {
        final int currentIndent = aModifiersNode.getColumnNo() + mIndentLevel;
        final int firstNodeIndent = aModifiersNode.getColumnNo();
        final Collection<DetailAST> values = aFirstNodesOnLines.values();

        final Iterator<DetailAST> itr = values.iterator();
        while (itr.hasNext() && aFirstNodesOnLines.size() > 1) {
            final DetailAST node = itr.next();
            final int parentType = node.getParent().getType();

            if (node.getType() == TokenTypes.AT) {

                if (isAnnotationAloneOnLine(node.getParent())) {
                    logWarningMessage(node, firstNodeIndent);
                    itr.remove();
                }
            }
            else if (parentType != TokenTypes.MODIFIERS
                    && !hasTypeNodeAsParent(node)
                    && parentType != TokenTypes.ENUM_DEF
                    && parentType != TokenTypes.CTOR_DEF
                    && node.getType() != TokenTypes.LITERAL_CLASS)
            {
                logWarningMessage(node, currentIndent);
                itr.remove();
            }
        }
    }

