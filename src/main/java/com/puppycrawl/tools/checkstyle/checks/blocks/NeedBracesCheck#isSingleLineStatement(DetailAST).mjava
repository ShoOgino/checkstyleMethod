    /**
     * Checks if current statement is single-line statement, e.g.:
     * <p>
     * <code>
     * if (obj.isValid()) return true;
     * </code>
     * </p>
     * <p>
     * <code>
     * while (obj.isValid()) return true;
     * </code>
     * </p>
     * @param statement if, for, while, do-while, lambda, else, case, default statements.
     * @return true if current statement is single-line statement.
     */
    private static boolean isSingleLineStatement(DetailAST statement) {
        boolean result;
        final int type = statement.getType();

        if (type == TokenTypes.LITERAL_IF) {
            result = isSingleLineIf(statement);
        }
        else if (type == TokenTypes.LITERAL_FOR) {
            result = isSingleLineFor(statement);
        }
        else if (type == TokenTypes.LITERAL_DO) {
            result = isSingleLineDoWhile(statement);
        }
        else if (type == TokenTypes.LITERAL_WHILE) {
            result = isSingleLineWhile(statement);
        }
        else if (type == TokenTypes.LAMBDA) {
            result = isSingleLineLambda(statement);
        }
        else if (type == TokenTypes.LITERAL_CASE) {
            result = isSingleLineCase(statement);
        }
        else if (type == TokenTypes.LITERAL_DEFAULT) {
            result = isSingleLineDefault(statement);
        }
        else {
            result = isSingleLineElse(statement);
        }

        return result;
    }

