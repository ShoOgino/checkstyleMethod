    @Override
    public void visitToken(DetailAST ast) {
        if (TokenTypes.INTERFACE_DEF == ast.getType()) {
            final DetailAST modifiers =
                ast.findFirstToken(TokenTypes.MODIFIERS);
            if (null != modifiers) {
                for (final int tokenType : new int[] {
                    TokenTypes.LITERAL_STATIC,
                    TokenTypes.ABSTRACT, }) {
                    final DetailAST modifier =
                            modifiers.findFirstToken(tokenType);
                    if (null != modifier) {
                        log(modifier.getLineNo(), modifier.getColumnNo(),
                                MSG_KEY, modifier.getText());
                    }
                }
            }
        }
        else if (isInterfaceOrAnnotationMember(ast)) {
            final DetailAST modifiers = ast.findFirstToken(TokenTypes.MODIFIERS);
            DetailAST modifier = modifiers.getFirstChild();
            while (modifier != null) {

                // javac does not allow final or static in interface methods
                // order annotation fields hence no need to check that this
                // is not a method or annotation field

                final int type = modifier.getType();
                if (type == TokenTypes.LITERAL_PUBLIC
                    || type == TokenTypes.LITERAL_STATIC
                            && ast.getType() != TokenTypes.METHOD_DEF
                    || type == TokenTypes.ABSTRACT
                    || type == TokenTypes.FINAL) {
                    log(modifier.getLineNo(), modifier.getColumnNo(),
                            MSG_KEY, modifier.getText());
                    break;
                }

                modifier = modifier.getNextSibling();
            }
        }
        else if (ast.getType() == TokenTypes.METHOD_DEF) {
            final DetailAST modifiers =
                            ast.findFirstToken(TokenTypes.MODIFIERS);
            // private method?
            boolean checkFinal =
                modifiers.branchContains(TokenTypes.LITERAL_PRIVATE);
            // declared in a final class?
            DetailAST parent = ast.getParent();
            while (parent != null) {
                if (parent.getType() == TokenTypes.CLASS_DEF) {
                    final DetailAST classModifiers =
                        parent.findFirstToken(TokenTypes.MODIFIERS);
                    checkFinal |=
                        classModifiers.branchContains(TokenTypes.FINAL);
                    break;
                }
                parent = parent.getParent();
            }
            if (checkFinal && !isAnnotatedWithSafeVarargs(ast)) {
                DetailAST modifier = modifiers.getFirstChild();
                while (modifier != null) {
                    final int type = modifier.getType();
                    if (type == TokenTypes.FINAL) {
                        log(modifier.getLineNo(), modifier.getColumnNo(),
                                MSG_KEY, modifier.getText());
                        break;
                    }
                    modifier = modifier.getNextSibling();
                }
            }
        }
    }

