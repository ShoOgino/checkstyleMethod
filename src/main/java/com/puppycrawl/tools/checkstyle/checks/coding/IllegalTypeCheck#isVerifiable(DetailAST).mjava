    /**
     * Checks if current method's return type or variable's type is verifiable
     * according to <b>memberModifiers</b> option.
     * @param methodOrVariableDef METHOD_DEF or VARIABLE_DEF ast node.
     * @return true if member is verifiable according to <b>memberModifiers</b> option.
     */
    private boolean isVerifiable(DetailAST methodOrVariableDef)
    {
        boolean result = true;
        if (memberModifiers != null) {
            result = false;
            final DetailAST modifiersAst = methodOrVariableDef
                    .findFirstToken(TokenTypes.MODIFIERS);
            if (modifiersAst.getFirstChild() != null) {
                for (DetailAST modifier = modifiersAst.getFirstChild(); modifier != null;
                         modifier = modifier.getNextSibling())
                {
                    if (memberModifiers.contains(modifier.getType())) {
                        result = true;
                    }
                }
            }
        }
        return result;
    }

