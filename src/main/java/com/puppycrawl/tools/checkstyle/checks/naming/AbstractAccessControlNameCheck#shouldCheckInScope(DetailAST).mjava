    /**
     * Should we check member with given modifiers.
     *
     * @param modifiers
     *                modifiers of member to check.
     * @return true if we should check such member.
     */
    protected boolean shouldCheckInScope(DetailAST modifiers) {
        final boolean isProtected = modifiers
                .findFirstToken(TokenTypes.LITERAL_PROTECTED) != null;
        final boolean isPrivate = modifiers
                .findFirstToken(TokenTypes.LITERAL_PRIVATE) != null;
        final boolean isPublic = isPublic(modifiers);

        final boolean isPackage = !(isPublic || isProtected || isPrivate);

        return applyToPublic && isPublic
                || applyToProtected && isProtected
                || applyToPackage && isPackage
                || applyToPrivate && isPrivate;
    }

