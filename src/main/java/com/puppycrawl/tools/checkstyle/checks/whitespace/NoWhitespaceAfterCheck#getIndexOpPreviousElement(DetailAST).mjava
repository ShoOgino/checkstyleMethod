    /**
     * Gets previous node for {@link TokenTypes#INDEX_OP INDEX_OP} token
     * for usage in getPositionAfter method, it is a simplified copy of
     * getArrayDeclaratorPreviousElement method.
     * @param ast
     *        , {@link TokenTypes#INDEX_OP INDEX_OP} node.
     * @return previous node by text order.
     */
    private static DetailAST getIndexOpPreviousElement(DetailAST ast) {
        final DetailAST result;
        final DetailAST firstChild = ast.getFirstChild();
        if (firstChild.getType() == TokenTypes.INDEX_OP) {
            // second or higher array index
            result = firstChild.findFirstToken(TokenTypes.RBRACK);
        }
        else {
            final DetailAST ident = getIdentLastToken(ast);
            if (ident == null) {
                final DetailAST rparen = ast.findFirstToken(TokenTypes.RPAREN);
                // construction like new int[]{1}[0]
                if (rparen == null) {
                    final DetailAST lastChild = firstChild.getLastChild();
                    result = lastChild.findFirstToken(TokenTypes.RCURLY);
                }
                // construction like ((byte[]) pixels)[0]
                else {
                    result = rparen;
                }
            }
            else {
                result = ident;
            }
        }
        return result;
    }

