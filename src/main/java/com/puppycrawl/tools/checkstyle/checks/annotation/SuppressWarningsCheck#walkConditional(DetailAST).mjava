    /**
     * Recursively walks a conditional expression checking the left
     * and right sides, checking for matches and
     * logging violations.
     *
     * @param cond a Conditional type
     * {@link TokenTypes#QUESTION QUESTION}
     */
    private void walkConditional(final DetailAST cond) {
        if (cond.getType() != TokenTypes.QUESTION) {
            final String warningText =
                removeQuotes(cond.getText());
            this.logMatch(cond.getLineNo(), cond.getColumnNo(), warningText);
            return;
        }

        this.walkConditional(getCondLeft(cond));
        this.walkConditional(getCondRight(cond));
    }

