    /**
     * Whether the variable should be removed from the list of final local variable
     * candidates.
     * @param scopeData the scope data of the variable.
     * @param ast the variable ast.
     * @return true, if the variable should be removed.
     */
    private static boolean shouldRemoveVariable(ScopeData scopeData, DetailAST ast) {
        boolean shouldRemove = true;
        for (DetailAST variable : scopeData.uninitializedVariables) {
            if (variable.getText().equals(ast.getText())) {

                // if the variable is declared outside the loop and initialized inside
                // the loop, then it cannot be declared final, as it can be initialized
                // more than once in this case
                if (isInTheSameLoop(variable, ast)
                        || !isUseOfExternalVariableInsideLoop(ast)) {
                    if (isAssignInIfBlock(scopeData, ast) && isAssignInElseBlock(scopeData, ast)) {
                        shouldRemove = true;
                    }
                    else if (isAssignInIfBlock(scopeData, ast)
                        && isAssignOutsideIfOrElseBlock(scopeData, ast)) {
                        shouldRemove = true;
                    }
                    else {
                        shouldRemove = false;
                    }
                }

                scopeData.uninitializedVariables.remove(variable);
                break;
            }
        }
        return shouldRemove;
    }

