    /**
     * Returns if an AST is a return statment with a boolean literal.
     *
     * Returns <code>true</code> iff ast represents
     * <br/>
     * <pre>
     * return true/false;
     * </pre>
     *
     * @param ast the sytax tree to check
     * @return if ast is a return statment with a boolean literal.
     */
    private static boolean isBooleanLiteralReturnStatement(AST ast) {
        if (ast == null || ast.getType() != TokenTypes.LITERAL_RETURN) {
            return false;
        }

        final AST expr = ast.getFirstChild();

        if (expr.getType() == TokenTypes.SEMI) {
            return false;
        }

        final AST value = expr.getFirstChild();
        return isBooleanLiteralType(value.getType());
    }

