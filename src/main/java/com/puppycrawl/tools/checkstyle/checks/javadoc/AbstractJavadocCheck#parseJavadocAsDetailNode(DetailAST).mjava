    /**
     * Parses Javadoc comment as DetailNode tree.
     * @param aJavadocCommentAst
     *        DetailAST of Javadoc comment
     * @return DetailNode tree of Javadoc comment
     */
    private ParseStatus parseJavadocAsDetailNode(DetailAST aJavadocCommentAst)
    {
        final String javadocComment = JavadocUtils.getJavadocCommentContent(aJavadocCommentAst);

        // Log messages should have line number in scope of file,
        // not in scope of Javadoc comment.
        // Offset is line number of beginning of Javadoc comment.
        mErrorListener.setOffset(aJavadocCommentAst.getLineNo() - 1);

        final ParseStatus result = new ParseStatus();
        ParseTree parseTree = null;
        ParseErrorMessage parseErrorMessage = null;

        try {
            parseTree = parseJavadocAsParseTree(javadocComment);
        }
        catch (IOException e) {
            // Antlr can not initiate its ANTLRInputStream
            parseErrorMessage = new ParseErrorMessage(aJavadocCommentAst.getLineNo(),
                    PARSE_ERROR_MESSAGE_KEY,
                    aJavadocCommentAst.getColumnNo(), e.getMessage());
        }
        catch (ParseCancellationException e) {
            // If syntax error occurs then message is printed by error listener
            // and parser throws this runtime exception to stop parsing.
            // Just stop processing current Javadoc comment.
            parseErrorMessage = mErrorListener.getErrorMessage();

            // There are cases when antlr error listener does not handle syntax error
            if (parseErrorMessage == null) {
                parseErrorMessage = new ParseErrorMessage(aJavadocCommentAst.getLineNo(),
                        UNRECOGNIZED_ANTLR_ERROR_MESSAGE_KEY,
                        aJavadocCommentAst.getColumnNo(), e.getMessage());
            }
        }

        if (parseErrorMessage == null) {
            final DetailNode tree = convertParseTree2DetailNode(parseTree);
            result.setTree(tree);
        }
        else {
            result.setParseErrorMessage(parseErrorMessage);
        }

        return result;
    }

