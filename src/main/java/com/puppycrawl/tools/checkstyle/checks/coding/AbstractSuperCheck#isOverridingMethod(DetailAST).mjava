    /**
     * Determines whether an AST is a method definition for this check,
     * with 0 parameters.
     * @param ast the method definition AST.
     * @return true if the method of ast is a method for this check.
     */
    private boolean isOverridingMethod(DetailAST ast) {
        if (ast.getType() != TokenTypes.METHOD_DEF
            || ScopeUtils.inInterfaceOrAnnotationBlock(ast)) {
            return false;
        }
        final DetailAST nameAST = ast.findFirstToken(TokenTypes.IDENT);
        final String name = nameAST.getText();
        final DetailAST modifiersAST = ast.findFirstToken(TokenTypes.MODIFIERS);
        if (!getMethodName().equals(name)
                || modifiersAST.branchContains(TokenTypes.LITERAL_NATIVE)) {
            return false;
        }
        final DetailAST params = ast.findFirstToken(TokenTypes.PARAMETERS);
        return params.getChildCount() == 0;
    }

