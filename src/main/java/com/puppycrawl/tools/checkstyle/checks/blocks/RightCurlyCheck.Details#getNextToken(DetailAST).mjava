        /**
         * Finds next token after the given one.
         *
         * @param ast the given node.
         * @return the token which represents next lexical item.
         */
        private static DetailAST getNextToken(DetailAST ast) {
            DetailAST next = null;
            DetailAST parent = ast;
            while (next == null && parent != null) {
                next = parent.getNextSibling();
                parent = parent.getParent();
            }
            if (next == null) {
                // a DetailAST object with DetailAST#NOT_INITIALIZED for line and column numbers
                // that no 'actual' DetailAST objects can have.
                next = new DetailAstImpl();
            }
            else {
                next = CheckUtil.getFirstNode(next);
            }
            return next;
        }

