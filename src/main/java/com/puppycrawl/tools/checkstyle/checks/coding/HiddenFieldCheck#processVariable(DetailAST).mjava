    /**
     * Process a variable token.
     * Check whether a local variable or parameter shadows a field.
     * Store a field for later comparison with local variables and parameters.
     * @param ast the variable token.
     */
    private void processVariable(DetailAST ast) {
        if (!ScopeUtils.isInInterfaceOrAnnotationBlock(ast)
            && (ScopeUtils.isLocalVariableDef(ast)
                || ast.getType() == TokenTypes.PARAMETER_DEF)) {
            // local variable or parameter. Does it shadow a field?
            final DetailAST nameAST = ast.findFirstToken(TokenTypes.IDENT);
            final String name = nameAST.getText();

            if (isStaticOrOnstanceField(ast, name)
                && !isMatchingRegexp(name)
                && !isIgnoredSetterParam(ast, name)
                && !isIgnoredConstructorParam(ast)
                && !isIgnoredParamOfAbstractMethod(ast)) {
                log(nameAST, MSG_KEY, name);
            }
        }
    }

