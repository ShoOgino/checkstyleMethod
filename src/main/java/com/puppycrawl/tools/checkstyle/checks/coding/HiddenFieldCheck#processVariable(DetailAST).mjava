    /**
     * Process a variable token.
     * Check whether a local variable or parameter shadows a field.
     * Store a field for later comparison with local variables and parameters.
     *
     * @param ast the variable token.
     */
    private void processVariable(DetailAST ast) {
        if (!ScopeUtil.isInInterfaceOrAnnotationBlock(ast)
            && !CheckUtil.isReceiverParameter(ast)
            && (ScopeUtil.isLocalVariableDef(ast)
                || ast.getType() == TokenTypes.PARAMETER_DEF
                || ast.getType() == TokenTypes.PATTERN_VARIABLE_DEF)) {
            // local variable or parameter. Does it shadow a field?
            final DetailAST nameAST = ast.findFirstToken(TokenTypes.IDENT);
            final String name = nameAST.getText();

            if ((frame.containsStaticField(name) || isInstanceField(ast, name))
                    && !isMatchingRegexp(name)
                    && !isIgnoredParam(ast, name)) {
                log(nameAST, MSG_KEY, name);
            }
        }
    }

