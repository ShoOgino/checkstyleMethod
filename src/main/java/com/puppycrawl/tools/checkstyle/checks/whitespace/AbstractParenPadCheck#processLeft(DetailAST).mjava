    /**
     * Process a token representing a left parentheses.
     *
     * @param ast the token representing a left parentheses
     */
    protected void processLeft(DetailAST ast) {
        final String line = getLines()[ast.getLineNo() - 1];
        final int after = ast.getColumnNo() + 1;
        if (after < line.length()) {
            if (option == PadOption.NOSPACE
                && Character.isWhitespace(line.charAt(after))) {
                log(ast, MSG_WS_FOLLOWED, OPEN_PARENTHESIS);
            }
            else if (option == PadOption.SPACE
                     && !Character.isWhitespace(line.charAt(after))
                     && line.charAt(after) != CLOSE_PARENTHESIS) {
                log(ast, MSG_WS_NOT_FOLLOWED, OPEN_PARENTHESIS);
            }
        }
    }

