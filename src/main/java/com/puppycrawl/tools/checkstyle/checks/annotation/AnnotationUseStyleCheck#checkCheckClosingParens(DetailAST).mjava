    /**
     * Checks to see if the closing parenthesis are present if required or
     * prohibited.
     *
     * @param ast the annotation token
     */
    private void checkCheckClosingParens(final DetailAST ast) {
        if (parens == ClosingParens.IGNORE) {
            return;
        }

        final DetailAST paren = ast.getLastChild();
        final boolean parenExists = paren.getType() == TokenTypes.RPAREN;

        if (parens == ClosingParens.ALWAYS
            && !parenExists) {
            log(ast.getLineNo(), MSG_KEY_ANNOTATION_PARENS_MISSING);
        }
        else if (parens == ClosingParens.NEVER
            && !ast.branchContains(TokenTypes.EXPR)
            && !ast.branchContains(TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR)
            && !ast.branchContains(TokenTypes.ANNOTATION_ARRAY_INIT)
            && parenExists) {
            log(ast.getLineNo(), MSG_KEY_ANNOTATION_PARENS_PRESENT);
        }
    }

