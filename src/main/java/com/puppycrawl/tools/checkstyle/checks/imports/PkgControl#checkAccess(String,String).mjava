    /**
     * Returns whether a package is allowed to be used. The algorithm checks
     * with the current node for a result, and if none is found then calls
     * its parent looking for a match. This will recurse looking for match.
     * If there is no clear result then {@link AccessResult#UNKNOWN} is
     * returned.
     * @param forImport the package to check on.
     * @param inPkg the package doing the import.
     * @return an {@link AccessResult}.
     */
    public AccessResult checkAccess(final String forImport, final String inPkg) {
        final AccessResult result;
        final AccessResult returnValue = localCheckAccess(forImport, inPkg);
        if (returnValue != AccessResult.UNKNOWN) {
            result = returnValue;
        }
        else if (parent == null) {
            // we are the top, so default to not allowed.
            result = AccessResult.DISALLOWED;
        }
        else {
            result = parent.checkAccess(forImport, inPkg);
        }
        return result;
    }

