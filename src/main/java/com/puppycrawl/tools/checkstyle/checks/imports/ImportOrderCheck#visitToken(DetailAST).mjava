    @Override
    public void visitToken(DetailAST ast) {
        final FullIdent ident;
        final boolean isStatic;

        if (ast.getType() == TokenTypes.IMPORT) {
            ident = FullIdent.createFullIdentBelow(ast);
            isStatic = false;
        }
        else {
            ident = FullIdent.createFullIdent(ast.getFirstChild()
                    .getNextSibling());
            isStatic = true;
        }

        final boolean isStaticAndNotLastImport = isStatic && !lastImportStatic;
        final boolean isLastImportAndNonStatic = lastImportStatic && !isStatic;

        // using set of IF instead of SWITCH to analyze Enum options to satisfy coverage.
        // https://github.com/checkstyle/checkstyle/issues/1387
        if (option == ImportOrderOption.TOP) {

            if (isLastImportAndNonStatic) {
                lastGroup = Integer.MIN_VALUE;
                lastImport = "";
            }
            doVisitToken(ident, isStatic, isStaticAndNotLastImport);

        }
        else if (option == ImportOrderOption.BOTTOM) {

            if (isStaticAndNotLastImport) {
                lastGroup = Integer.MIN_VALUE;
                lastImport = "";
            }
            doVisitToken(ident, isStatic, isLastImportAndNonStatic);

        }
        else if (option == ImportOrderOption.ABOVE) {
            // previous non-static but current is static
            doVisitToken(ident, isStatic, isStaticAndNotLastImport);

        }
        else if (option == ImportOrderOption.UNDER) {
            doVisitToken(ident, isStatic, isLastImportAndNonStatic);

        }
        else if (option == ImportOrderOption.INFLOW) {
            // "previous" argument is useless here
            doVisitToken(ident, isStatic, true);

        }
        else {
            throw new IllegalStateException(
                    "Unexpected option for static imports: " + option);
        }

        lastImportLine = ast.findFirstToken(TokenTypes.SEMI).getLineNo();
        lastImportStatic = isStatic;
        beforeFirstImport = false;
    }

