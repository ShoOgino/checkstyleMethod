    /**
     * Determine, whether equals method is called on a field of String type.
     * @param objCalledOn object ast.
     * @return true if the object is of String type.
     */
    private boolean calledOnStringField(DetailAST objCalledOn) {
        boolean result = false;
        final DetailAST previousSiblingAst = objCalledOn.getPreviousSibling();
        final String name = objCalledOn.getText();
        if (previousSiblingAst != null) {
            if (previousSiblingAst.getType() == TokenTypes.LITERAL_THIS) {
                final DetailAST field = getObjectFrame(currentFrame).findField(name);
                result = STRING.equals(getFieldType(field));
            }
            else {
                final String className = previousSiblingAst.getText();
                FieldFrame frame = getObjectFrame(currentFrame);
                while (frame != null) {
                    if (className.equals(frame.getFrameName())) {
                        final DetailAST field = frame.findField(name);
                        result = STRING.equals(getFieldType(field));
                        break;
                    }
                    frame = getObjectFrame(frame.getParent());
                }
            }
        }
        else {
            FieldFrame frame = currentFrame;
            while (frame != null) {
                final DetailAST field = frame.findField(name);
                if (field != null
                        && (frame.isClassOrEnumOrEnumConstDef()
                                || checkLineNo(field, objCalledOn))) {
                    result = STRING.equals(getFieldType(field));
                    break;
                }
                frame = frame.getParent();
            }
        }
        return result;
    }

