    /**
     * Checks to see if the trailing comma is present if required or
     * prohibited.
     *
     * @param annotation the annotation token
     */
    private void checkTrailingComma(final DetailAST annotation) {
        if (TrailingArrayComma.IGNORE == this.comma) {
            return;
        }

        DetailAST child = annotation.getFirstChild();

        while (child != null) {
            DetailAST arrayInit = null;

            if (child.getType()
                == TokenTypes.ANNOTATION_MEMBER_VALUE_PAIR) {
                arrayInit =
                    child.findFirstToken(TokenTypes.ANNOTATION_ARRAY_INIT);
            }
            else if (child.getType() == TokenTypes.ANNOTATION_ARRAY_INIT) {
                arrayInit = child;
            }

            if (arrayInit != null) {
                this.logCommaViolation(arrayInit);
            }
            child = child.getNextSibling();
        }
    }

