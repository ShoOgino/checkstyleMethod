    /**
     * Gets the disallowed abbreviation contained in given String.
     * @param str
     *        the given String.
     * @return the disallowed abbreviation contained in given String as a
     *         separate String.
     */
    private String getDisallowedAbbreviation(String str) {
        int beginIndex = 0;
        boolean abbrStarted = false;
        String result = null;

        for (int index = 0; index < str.length(); index++) {
            final char symbol = str.charAt(index);

            if (Character.isUpperCase(symbol)) {
                if (!abbrStarted) {
                    abbrStarted = true;
                    beginIndex = index;
                }
            }
            else {
                if (abbrStarted) {
                    abbrStarted = false;

                    // -1 as a first capital is usually beginning of next word
                    final int endIndex = index - 1;
                    final int abbrLength = endIndex - beginIndex;
                    if (abbrLength > allowedAbbreviationLength) {
                        result = str.substring(beginIndex, endIndex);
                        if (!allowedAbbreviations.contains(result)) {
                            break;
                        }
                        else {
                            result = null;
                        }
                    }
                    beginIndex = -1;
                }
            }
        }
        if (abbrStarted) {
            final int endIndex = str.length();
            final int abbrLength = endIndex - beginIndex;
            if (abbrLength > 1 && abbrLength > allowedAbbreviationLength) {
                result = str.substring(beginIndex, endIndex);
                if (allowedAbbreviations.contains(result)) {
                    result = null;
                }
            }
        }
        return result;
    }

