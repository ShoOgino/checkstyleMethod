    @Override
    public void visitToken(DetailAST ast) {
        final int currentType = ast.getType();
        if (isNotRelevantSituation(ast, currentType)) {
            return;
        }

        final String line = getLine(ast.getLineNo() - 1);
        final int before = ast.getColumnNo() - 1;
        final int after = ast.getColumnNo() + ast.getText().length();

        if (before >= 0 && !Character.isWhitespace(line.charAt(before))) {
            log(ast.getLineNo(), ast.getColumnNo(),
                    MSG_WS_NOT_PRECEDED, ast.getText());
        }

        if (after >= line.length()) {
            return;
        }

        final char nextChar = line.charAt(after);
        if (!Character.isWhitespace(nextChar)
            // Check for "return;"
            && !(currentType == TokenTypes.LITERAL_RETURN
                && ast.getFirstChild().getType() == TokenTypes.SEMI)
            && !isAnonymousInnerClassEnd(currentType, nextChar)) {

            log(ast.getLineNo(), ast.getColumnNo() + ast.getText().length(),
                    MSG_WS_NOT_FOLLOWED, ast.getText());
        }
    }

