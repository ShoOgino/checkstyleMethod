    /**
     * Get the handler for an AST.
     *
     * @param indentCheck   the indentation check
     * @param ast           ast to handle
     * @param parent        the handler parent of this AST
     *
     * @return the ExpressionHandler for ast
     */
    public AbstractExpressionHandler getHandler(IndentationCheck indentCheck,
        DetailAST ast, AbstractExpressionHandler parent) {
        final AbstractExpressionHandler resultHandler;
        final AbstractExpressionHandler handler =
            createdHandlers.get(ast);
        if (handler != null) {
            resultHandler = handler;
        }
        else if (ast.getType() == TokenTypes.METHOD_CALL) {
            resultHandler = createMethodCallHandler(indentCheck, ast, parent);
        }
        else {
            final Constructor<?> handlerCtor = typeHandlers.get(ast.getType());
            resultHandler = (AbstractExpressionHandler) CommonUtil.invokeConstructor(
                handlerCtor, indentCheck, ast, parent);
        }
        return resultHandler;
    }

