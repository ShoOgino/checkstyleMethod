    /**
     * Get the handler for an AST.
     *
     * @param indentCheck   the indentation check
     * @param ast           ast to handle
     * @param parent        the handler parent of this AST
     *
     * @return the ExpressionHandler for ast
     */
    public AbstractExpressionHandler getHandler(IndentationCheck indentCheck,
        DetailAST ast, AbstractExpressionHandler parent) {
        final AbstractExpressionHandler handler =
            createdHandlers.get(ast);
        if (handler != null) {
            return handler;
        }

        if (ast.getType() == TokenTypes.METHOD_CALL) {
            return createMethodCallHandler(indentCheck, ast, parent);
        }

        AbstractExpressionHandler expHandler = null;
        final Constructor<?> handlerCtor =
            typeHandlers.get(ast.getType());
        if (handlerCtor != null) {
            expHandler = (AbstractExpressionHandler) Utils.invokeConstructor(
                    handlerCtor, indentCheck, ast, parent);
        }
        return expHandler;
    }

