    @Override
    public void checkIndentation() {
        checkTopLevelToken();
        // separate to allow for eventual configuration
        checkLeftParen(getLeftParen());
        checkRightParen(getLeftParen(), getRightParen());
        if (hasCurlies()) {
            checkLeftCurly();
            checkRightCurly();
        }
        final DetailAST listChild = getListChild();
        if (listChild == null) {
            checkNonListChild();
        }
        else {
            // NOTE: switch statements usually don't have curlies
            if (!hasCurlies() || !TokenUtil.areOnSameLine(getLeftCurly(), getRightCurly())) {
                // Note: For Annotation Array Init only:
                // If its a annotation array init block with strict cond being false then,
                // we want flexible child indents with any indentLevel above minimum requirement
                // All the other block elements will follow strict discrete indentation levels.
                final boolean doesAnnotationArrayInitFollowsStrictCond =
                    !TokenUtil.isOfType(listChild, TokenTypes.ANNOTATION_ARRAY_INIT)
                        || getIndentCheck().isForceStrictCondition();

                checkChildren(listChild,
                        getCheckedChildren(),
                        getChildrenExpectedIndent(),
                        doesAnnotationArrayInitFollowsStrictCond,
                        canChildrenBeNested());
            }
        }
    }

