    /**
     * Checks whether the content provided by the Reader ends with the platform
     * specific line separator.
     * @param randomAccessFile The reader for the content to check
     * @return boolean Whether the content ends with a line separator
     * @throws IOException When an IO error occurred while reading from the
     *         provided reader
     */
    private boolean endsWithNewline(RandomAccessFile randomAccessFile)
            throws IOException {
        final boolean result;
        final int len = lineSeparator.length();
        if (randomAccessFile.length() < len) {
            result = false;
        }
        else {
            randomAccessFile.seek(randomAccessFile.length() - len);
            final byte[] lastBytes = new byte[len];
            final int readBytes = randomAccessFile.read(lastBytes);
            if (readBytes != len) {
                throw new IOException("Unable to read " + len + " bytes, got "
                        + readBytes);
            }
            result = lineSeparator.matches(lastBytes);
        }
        return result;
    }

