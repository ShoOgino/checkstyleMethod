    /**
     * Decides whether to ignore an AST node that is the parameter of an
     * abstract method.
     * @param ast the AST to check.
     * @return true if ast should be ignored because check property
     * ignoreAbstactMethods is true and ast is a parameter of abstract
     * methods.
     */
    private boolean isIgnoredParamOfAbstractMethod(DetailAST ast)
    {
        boolean result = false;
        if (ast.getType() == TokenTypes.PARAMETER_DEF
            && ignoreAbstractMethods)
        {
            final DetailAST method = ast.getParent().getParent();
            if (method.getType() == TokenTypes.METHOD_DEF) {
                final DetailAST mods = method.findFirstToken(TokenTypes.MODIFIERS);
                result = mods != null && mods.branchContains(TokenTypes.ABSTRACT);
            }
        }
        return result;
    }

