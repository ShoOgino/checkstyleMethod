    /** recursive method that finds the matches. */
    private void findMatch()
    {
        int startLine;
        int startColumn;
        int endLine;
        int endColumn;
        boolean foundMatch;
        boolean ignore = false;

        foundMatch = mMatcher.find();
        if (!foundMatch && !mIllegalPattern && (mMatchCount == 0)) {
            logMessage(0);
        }
        else if (foundMatch) {
            final FileText text = getFileContents().getText();
            final LineColumn start = text.lineColumn(mMatcher.start());
            final LineColumn end = text.lineColumn(mMatcher.end() - 1);
            startLine = start.getLine();
            startColumn = start.getColumn();
            endLine = end.getLine();
            endColumn = end.getColumn();
            if (mIgnoreComments) {
                final FileContents theFileContents = getFileContents();
                ignore = theFileContents.hasIntersectionWithComment(startLine,
                    startColumn, endLine, endColumn);
            }
            if (!ignore) {
                mMatchCount++;
                if (mIllegalPattern || (mCheckForDuplicates
                        && ((mMatchCount - 1) > mDuplicateLimit)))
                {
                    mErrorCount++;
                    logMessage(startLine);
                }
            }
            if ((mErrorCount < mErrorLimit)
                    && (ignore || mIllegalPattern || mCheckForDuplicates))
            {
                findMatch();
            }
        }
    }

