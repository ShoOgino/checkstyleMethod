    /** recursive method that finds the matches. */
    private void findMatch()
    {
        int startLine;
        int startColumn;
        int endLine;
        int endColumn;
        boolean foundMatch;
        boolean ignore = false;

        foundMatch = matcher.find();
        if (!foundMatch && !illegalPattern && (matchCount == 0)) {
            logMessage(0);
        }
        else if (foundMatch) {
            final FileText text = getFileContents().getText();
            final LineColumn start = text.lineColumn(matcher.start());
            final LineColumn end = text.lineColumn(matcher.end() - 1);
            startLine = start.getLine();
            startColumn = start.getColumn();
            endLine = end.getLine();
            endColumn = end.getColumn();
            if (ignoreComments) {
                final FileContents theFileContents = getFileContents();
                ignore = theFileContents.hasIntersectionWithComment(startLine,
                    startColumn, endLine, endColumn);
            }
            if (!ignore) {
                matchCount++;
                if (illegalPattern || (checkForDuplicates
                        && ((matchCount - 1) > duplicateLimit)))
                {
                    errorCount++;
                    logMessage(startLine);
                }
            }
            if ((errorCount < errorLimit)
                    && (ignore || illegalPattern || checkForDuplicates))
            {
                findMatch();
            }
        }
    }

