    /**
     * Gets leftmost token of identifier.
     * @param ast
     *        , token possibly possessing an identifier.
     * @return leftmost token of identifier.
     */
    private static DetailAST getIdentLastToken(DetailAST ast) {
        // single identifier token as a name is the most common case
        DetailAST result = ast.findFirstToken(TokenTypes.IDENT);
        if (result == null) {
            final DetailAST dot = ast.findFirstToken(TokenTypes.DOT);
            // method call case
            if (dot == null) {
                final DetailAST methodCall = ast.findFirstToken(TokenTypes.METHOD_CALL);
                if (methodCall != null) {
                    result = methodCall.findFirstToken(TokenTypes.RPAREN);
                }
            }
            // qualified name case
            else {
                if (dot.findFirstToken(TokenTypes.DOT) == null) {
                    result = dot.getFirstChild().getNextSibling();
                }
                else {
                    result = dot.findFirstToken(TokenTypes.IDENT);
                }
            }
        }
        return result;
    }

