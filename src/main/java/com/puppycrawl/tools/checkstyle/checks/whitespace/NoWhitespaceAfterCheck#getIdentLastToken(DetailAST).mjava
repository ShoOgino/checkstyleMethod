    /**
     * Gets leftmost token of identifier.
     *
     * @param ast
     *        , token possibly possessing an identifier.
     * @return leftmost token of identifier.
     */
    private static DetailAST getIdentLastToken(DetailAST ast) {
        final DetailAST result;
        final DetailAST dot = ast.findFirstToken(TokenTypes.DOT);
        // method call case
        if (dot == null) {
            final DetailAST methodCall = ast.findFirstToken(TokenTypes.METHOD_CALL);
            if (methodCall == null) {
                result = ast.findFirstToken(TokenTypes.IDENT);
            }
            else {
                result = methodCall.findFirstToken(TokenTypes.RPAREN);
            }
        }
        // qualified name case
        else {
            result = dot.getFirstChild().getNextSibling();
        }
        return result;
    }

