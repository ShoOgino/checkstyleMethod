        /**
         * Constructs a tag.
         * @param text the text of the suppression.
         * @param line the line number.
         * @throws ConversionException if unable to parse expanded text.
         * on.
         */
        public Tag(String text, int line)
            throws ConversionException
        {
            this.text = text;

            tagCheckRegexp = checkRegexp;
            //Expand regexp for check and message
            //Does not intern Patterns with Utils.getPattern()
            String format = "";
            try {
                format = expandFrocomment(text, checkFormat, commentRegexp);
                tagCheckRegexp = Pattern.compile(format);
                if (messageFormat != null) {
                    format = expandFrocomment(
                         text, messageFormat, commentRegexp);
                    tagMessageRegexp = Pattern.compile(format);
                }
                int influence = 0;
                if (influenceFormat != null) {
                    format = expandFrocomment(
                        text, influenceFormat, commentRegexp);
                    try {
                        if (format.startsWith("+")) {
                            format = format.substring(1);
                        }
                        influence = Integer.parseInt(format);
                    }
                    catch (final NumberFormatException e) {
                        throw new ConversionException(
                            "unable to parse influence from '" + text
                                + "' using " + influenceFormat, e);
                    }
                }
                if (influence >= 0) {
                    firstLine = line;
                    lastLine = line + influence;
                }
                else {
                    firstLine = line + influence;
                    lastLine = line;
                }
            }
            catch (final PatternSyntaxException e) {
                throw new ConversionException(
                    "unable to parse expanded comment " + format,
                    e);
            }
        }

