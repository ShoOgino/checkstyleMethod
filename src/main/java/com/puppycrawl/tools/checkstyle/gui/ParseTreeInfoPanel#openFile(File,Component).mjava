    /**
     * Opens file and loads it into text area.
     * @param file File to open.
     * @param parent Component for displaying errors if file can't be open.
     */
    public void openFile(File file, final Component parent) {
        if (file != null) {
            try {
                Main.getFrame().setTitle("Checkstyle : " + file.getName());
                final FileText text = new FileText(file.getAbsoluteFile(),
                                                   getEncoding());
                final DetailAST parseTree = parseFile(text);
                parseTreeTableModel.setParseTree(parseTree);
                currentFile = file;
                lastDirectory = file.getParentFile();
                reloadAction.setEnabled(true);

                final String[] sourceLines = text.toLinesArray();

                // clear for each new file
                clearLinesToPosition();
                // starts line counting at 1
                addLineToPosition(0);

                //clean the text area before inserting the lines of the new file
                if (!textArea.getText().isEmpty()) {
                    textArea.replaceRange("", 0, textArea.getText()
                            .length());
                }

                // insert the contents of the file to the text area
                for (final String element : sourceLines) {
                    addLineToPosition(textArea.getText().length());
                    textArea.append(element + System.lineSeparator());
                }

                // move back to the top of the file
                textArea.moveCaretPosition(0);
                treeTable.setLinePositionMap(linesToPosition);
            }
            catch (final IOException | ANTLRException ex) {
                showErrorDialog(
                        parent,
                        "Could not parse" + file + ": " + ex.getMessage());
            }
        }
    }

