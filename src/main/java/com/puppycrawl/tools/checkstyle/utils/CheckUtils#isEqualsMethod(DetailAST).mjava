    /**
     * Tests whether a method definition AST defines an equals covariant.
     * @param ast the method definition AST to test.
     * Precondition: ast is a TokenTypes.METHOD_DEF node.
     * @return true if ast defines an equals covariant.
     */
    public static boolean isEqualsMethod(DetailAST ast) {
        if (ast.getType() != TokenTypes.METHOD_DEF) {
            // A node must be method def
            return false;
        }

        // non-static, non-abstract?
        final DetailAST modifiers = ast.findFirstToken(TokenTypes.MODIFIERS);
        if (modifiers.branchContains(TokenTypes.LITERAL_STATIC)
            || modifiers.branchContains(TokenTypes.ABSTRACT)) {
            return false;
        }

        // named "equals"?
        final DetailAST nameNode = ast.findFirstToken(TokenTypes.IDENT);
        final String name = nameNode.getText();
        if (!"equals".equals(name)) {
            return false;
        }

        // one parameter?
        final DetailAST paramsNode = ast.findFirstToken(TokenTypes.PARAMETERS);
        return paramsNode.getChildCount() == 1;
    }

