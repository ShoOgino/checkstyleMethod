    /**
     * Parse a text and return the parse tree.
     * @param text the text to parse.
     * @param withComments true to include comment nodes to the tree
     * @return the root node of the parse tree.
     * @throws CheckstyleException if the file is not a Java source.
     */
    private static DetailAST parseFileText(FileText text, boolean withComments)
            throws CheckstyleException {
        final FileContents contents = new FileContents(text);
        final DetailAST result;
        try {
            if (withComments) {
                result = TreeWalker.parseWithComments(contents);
            }
            else {
                result = TreeWalker.parse(contents);
            }
        }
        catch (RecognitionException | TokenStreamException ex) {
            final String exceptionMsg = String.format(Locale.ROOT,
                "%s occurred during the analysis of file %s.",
                ex.getClass().getSimpleName(), text.getFile().getPath());
            throw new CheckstyleException(exceptionMsg, ex);
        }

        return result;
    }

