    /**
     * Recheck property and try to copy it.
     * @param moduleName name of the module/class
     * @param key key of value
     * @param value value
     * @param recheck whether to check for property existence before copy
     * @throws CheckstyleException then property defined incorrectly
     */
    private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)
            throws CheckstyleException {

        final BeanUtilsBean beanUtils = createBeanUtilsBean();

        try {
            if (recheck) {
                // BeanUtilsBean.copyProperties silently ignores missing setters
                // for key, so we have to go through great lengths here to
                // figure out if the bean property really exists.
                final PropertyDescriptor pd =
                        PropertyUtils.getPropertyDescriptor(this, key);
                if (pd == null) {
                    final String message = String.format("Property '%s' in module %s does not "
                            + "exist, please check the documentation", key, moduleName);
                    throw new CheckstyleException(message);
                }
            }
            // finally we can set the bean property
            beanUtils.copyProperty(this, key, value);
        }
        catch (final InvocationTargetException | IllegalAccessException
                | NoSuchMethodException e) {
            // There is no way to catch IllegalAccessException | NoSuchMethodException
            // as we do PropertyUtils.getPropertyDescriptor before beanUtils.copyProperty
            // so we have to join these exceptions with InvocationTargetException
            // to satisfy UTs coverage
            final String message = String.format("Cannot set property '%s' to '%s' in module %s",
                    key, value, moduleName);
            throw new CheckstyleException(message, e);
        }
        catch (final IllegalArgumentException | ConversionException e) {
            final String message = String.format("illegal value '%s' for property '%s' of "
                    + "module %s", value, key, moduleName);
            throw new CheckstyleException(message, e);
        }
    }

