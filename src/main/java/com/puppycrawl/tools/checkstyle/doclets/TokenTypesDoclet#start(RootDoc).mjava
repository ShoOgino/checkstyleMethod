    /**
     * The doclet's starter method.
     * @param root <code>RootDoc</code> given to the doclet
     * @exception FileNotFoundException will be thrown if the doclet
     *            will be unable to write to the specified file.
     * @return true if the given <code>RootDoc</code> is processed.
     */
    public static boolean start(RootDoc root) throws FileNotFoundException
    {
        final String fileName = getDestFileName(root.options());
        final FileOutputStream fos = new FileOutputStream(fileName);
        PrintStream ps = null;
        try {
            ps = new PrintStream(fos);
            final ClassDoc[] classes = root.classes();
            if (classes.length != 1
                || !"TokenTypes".equals(classes[0].name()))
            {
                final String message =
                    "The doclet should be used for TokenTypes only";
                throw new IllegalArgumentException(message);
            }

            final FieldDoc[] fields = classes[0].fields();
            for (final FieldDoc field : fields) {
                if (field.isStatic() && field.isPublic() && field.isFinal()
                    && "int".equals(field.type().qualifiedTypeName()))
                {
                    if (field.firstSentenceTags().length != 1) {
                        final String message = "Should be only one tag.";
                        throw new IllegalArgumentException(message);
                    }
                    ps.println(field.name() + "="
                        + field.firstSentenceTags()[0].text());
                }
            }
        }
        finally {
            if (ps != null) {
                ps.close();
            }
        }

        return true;
    }

