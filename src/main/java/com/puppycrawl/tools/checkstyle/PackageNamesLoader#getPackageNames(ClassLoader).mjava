    /**
     * Returns the set of package names, compiled from all
     * checkstyle_packages.xml files found on the given classloaders
     * classpath.
     * @param classLoader the class loader for loading the
     *          checkstyle_packages.xml files.
     * @return the set of package names.
     * @throws CheckstyleException if an error occurs.
     */
    public static Set<String> getPackageNames(ClassLoader classLoader)
        throws CheckstyleException
    {

        Enumeration<URL> packageFiles = null;
        try {
            packageFiles = classLoader.getResources(CHECKSTYLE_PACKAGES);
        }
        catch (IOException e) {
            throw new CheckstyleException(
                    "unable to get package file resources", e);
        }

        //create the loader outside the loop to prevent PackageObjectFactory
        //being created anew for each file
        final PackageNamesLoader namesLoader = newPackageNamesLoader();

        while ((null != packageFiles) && packageFiles.hasMoreElements()) {
            final URL packageFile = packageFiles.nextElement();
            InputStream stream = null;

            try {
                stream = new BufferedInputStream(packageFile.openStream());
                final InputSource source = new InputSource(stream);
                loadPackageNamesSource(source, "default package names",
                    namesLoader);
            }
            catch (IOException e) {
                throw new CheckstyleException(
                        "unable to open " + packageFile, e);
            }
            finally {
                Utils.closeQuietly(stream);
            }
        }
        return namesLoader.getPackageNames();
    }

