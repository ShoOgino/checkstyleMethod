    /**
     * Processes a set of files with all FileSetChecks.
     * Once this is done, it is highly recommended to call for
     * the destroy method to close and remove the listeners.
     * @param files the list of files to be audited.
     * @return the total number of errors found
     * @throws CheckstyleException if error condition within Checkstyle occurs
     * @see #destroy()
     */
    public int process(List<File> files) throws CheckstyleException {
        // Prepare to start
        fireAuditStarted();
        for (final FileSetCheck fsc : fileSetChecks) {
            fsc.beginProcessing(charset);
        }

        // Process each file
        for (final File file : files) {
            try {
                if (!CommonUtils.matchesFileExtension(file, fileExtensions)) {
                    continue;
                }
                final String fileName = file.getAbsolutePath();
                fireFileStarted(fileName);
                final SortedSet<LocalizedMessage> fileMessages = Sets.newTreeSet();
                try {
                    final FileText theText = new FileText(file.getAbsoluteFile(),
                            charset);
                    for (final FileSetCheck fsc : fileSetChecks) {
                        fileMessages.addAll(fsc.process(file, theText));
                    }
                }
                catch (final IOException ioe) {
                    LOG.debug("IOException occurred.", ioe);
                    fileMessages.add(new LocalizedMessage(0,
                            Definitions.CHECKSTYLE_BUNDLE, "general.exception",
                            new String[] {ioe.getMessage()}, null, getClass(),
                            null));
                }
                fireErrors(fileName, fileMessages);
                fireFileFinished(fileName);
            }
            catch (Exception ex) {
                // We need to catch all exception to put a reason failure(file name) in exception
                throw new CheckstyleException("Exception was thrown while processing "
                        + file.getPath(), ex);
            }
        }

        // Finish up
        for (final FileSetCheck fsc : fileSetChecks) {
            // It may also log!!!
            fsc.finishProcessing();
        }

        for (final FileSetCheck fsc : fileSetChecks) {
            // It may also log!!!
            fsc.destroy();
        }

        final int errorCount = counter.getCount();
        fireAuditFinished();
        return errorCount;
    }

