    @Test
    public void testIncorrectTag() throws Exception {
        try {
            final Class<?> aClassParent = ConfigurationLoader.class;
            Constructor<?> ctorParent = null;
            final Constructor<?>[] parentConstructors = aClassParent.getDeclaredConstructors();
            for (Constructor<?> parentConstructor: parentConstructors) {
                parentConstructor.setAccessible(true);
                ctorParent = parentConstructor;
            }
            final Class<?> aClass = Class.forName("com.puppycrawl.tools.checkstyle."
                    + "ConfigurationLoader$InternalLoader");
            Constructor<?> constructor = null;
            final Constructor<?>[] constructors = aClass.getDeclaredConstructors();
            for (Constructor<?> constr: constructors) {
                constr.setAccessible(true);
                constructor = constr;
            }

            final Object objParent = ctorParent.newInstance(null, true);
            final Object obj = constructor.newInstance(objParent);

            final Class<?>[] param = new Class<?>[] {String.class, String.class,
                String.class, Attributes.class, };
            final Method method = aClass.getDeclaredMethod("startElement", param);

            method.invoke(obj, "", "", "hello", null);

            fail("Exception is expected");

        }
        catch (InvocationTargetException ex) {
            assertTrue(ex.getCause() instanceof IllegalStateException);
            assertEquals("Unknown name:" + "hello" + ".", ex.getCause().getMessage());
        }
    }

