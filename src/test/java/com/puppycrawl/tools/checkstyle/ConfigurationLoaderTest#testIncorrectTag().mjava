    @Test
    public void testIncorrectTag() throws Exception {
        try {
            Class<?> aClassParent = ConfigurationLoader.class;
            Constructor ctorParent = null;
            Constructor[] parentConstructors = aClassParent.getDeclaredConstructors();
            for (Constructor constr: parentConstructors) {
                constr.setAccessible(true);
                ctorParent = constr;
            }
            Object objParent = ctorParent.newInstance(null, true);

            Class<?> aClass = Class.forName("com.puppycrawl.tools.checkstyle."
                    + "ConfigurationLoader$InternalLoader");
            Constructor constructor = null;
            Constructor[] constructors = aClass.getDeclaredConstructors();
            for (Constructor constr: constructors) {
                constr.setAccessible(true);
                constructor = constr;
            }

            Object obj = constructor.newInstance(objParent);


            Class[] param = new Class[4];
            param[0] = String.class;
            param[1] = String.class;
            param[2] = String.class;
            param[3] = Attributes.class;
            Method method = aClass.getDeclaredMethod("startElement", param);

            method.invoke(obj, "", "", "hello", null);

            fail("Exception is expected");

        }
        catch (InvocationTargetException e) {
            assertTrue(e.getCause() instanceof IllegalStateException);
            assertEquals("Unknown name:" + "hello" + ".", e.getCause().getMessage());
        }
    }

