    @Test
    public void testCreateListenerWithLocationIllegalStateException() throws Exception {
        mockStatic(CommonUtils.class);
        doNothing().when(CommonUtils.class);
        CommonUtils.close(any(OutputStream.class));

        final Method method = Main.class.getDeclaredMethod("createListener", String.class,
            String.class);
        method.setAccessible(true);
        final String outDir = "myfolder123";
        try {
            method.invoke(null, "myformat", outDir);
            fail("InvocationTargetException  is expected");
        }
        catch (InvocationTargetException ex) {
            final LocalizedMessage createListenerMessage = new LocalizedMessage(0,
                    Definitions.CHECKSTYLE_BUNDLE, Main.CREATE_LISTENER_EXCEPTION,
                    new String[] {"myformat", "plain", "xml"}, null, getClass(), null);
            assertEquals("Invalid error message",
                    createListenerMessage.getMessage(), ex.getCause().getLocalizedMessage());
            assertTrue("Invalid error cause",
                    ex.getCause() instanceof IllegalStateException);
        }
        finally {
            verifyStatic(CommonUtils.class, times(1));
            final ArgumentCaptor<OutputStream> out =
                    ArgumentCaptor.forClass(OutputStream.class);
            CommonUtils.close(out.capture());
            out.getValue().close();
            // method creates output folder
            FileUtils.deleteQuietly(new File(outDir));
        }
    }

