    /**
     * Creates {@link Checker} instance based on the given {@link Configuration} instance.
     * @param moduleConfig {@link Configuration} instance.
     * @return {@link Checker} instance based on the given {@link Configuration} instance.
     * @throws Exception if an exception occurs during checker configuration.
     */
    public Checker createChecker(Configuration moduleConfig)
            throws Exception {
        ModuleCreationOption moduleCreationOption = ModuleCreationOption.IN_CHECKER;

        try {
            final Class<?> moduleClass = Class.forName(moduleConfig.getName());
            if (ModuleReflectionUtils.isCheckstyleCheck(moduleClass)
                    || ModuleReflectionUtils.isTreeWalkerFilterModule(moduleClass)) {
                moduleCreationOption = ModuleCreationOption.IN_TREEWALKER;
            }
        }
        catch (ClassNotFoundException ignore) {
            // ignore exception, assume it is not part of TreeWalker
        }

        return createChecker(moduleConfig, moduleCreationOption);
    }

