    private static void verifyCheckstyleMessage(Map<String, List<String>> usedMessages,
            Class<?> module, Field message) throws Exception {
        final String messageString = message.get(null).toString();
        final String packageName = module.getPackage().getName();
        final List<String> packageMessages =
                usedMessages.computeIfAbsent(packageName, key -> new ArrayList<>());

        packageMessages.add(messageString);

        for (Locale locale : ALL_LOCALES) {
            String result = null;

            try {
                result = CheckUtil.getCheckMessage(module, locale, messageString);
            }
            // -@cs[IllegalCatch] There is no other way to deliver filename that was used
            catch (Exception ex) {
                fail(module.getSimpleName() + " with the message '" + messageString
                        + "' in locale '" + locale.getLanguage() + "' failed with: "
                        + ex.getClass().getSimpleName() + " - " + ex.getMessage());
            }

            assertNotNull(result, module.getSimpleName() + " should have text for the message '"
                    + messageString + "' in locale " + locale.getLanguage() + "'");
            assertFalse(result.trim().isEmpty(), module.getSimpleName()
                    + " should have non-empty text for the message '"
                    + messageString + "' in locale '" + locale.getLanguage() + "'");
            assertFalse(!"todo.match".equals(messageString) && result.trim().startsWith("TODO"),
                    module.getSimpleName()
                    + " should have non-TODO text for the message '"
                    + messageString + "' in locale " + locale.getLanguage() + "'");
        }
    }

