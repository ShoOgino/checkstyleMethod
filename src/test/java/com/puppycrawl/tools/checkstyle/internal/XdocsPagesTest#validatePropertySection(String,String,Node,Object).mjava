    private static void validatePropertySection(String fileName, String sectionName,
            Node subSection, Object instance) throws Exception {
        final Set<String> properties = getProperties(instance.getClass());
        final Class<?> clss = instance.getClass();

        fixCapturedProperties(sectionName, instance, clss, properties);

        if (subSection != null) {
            Assert.assertTrue(fileName + " section '" + sectionName
                    + "' should have no properties to show", !properties.isEmpty());

            final Set<Node> nodes = XmlUtil.getChildrenElements(subSection);
            Assert.assertEquals(fileName + " section '" + sectionName
                    + "' subsection 'Properties' should have one child node",
                1, nodes.size());

            final Node div = nodes.iterator().next();
            Assert.assertEquals(fileName + " section '" + sectionName
                    + "' subsection 'Properties' has unexpected child node",
                "div", div.getNodeName());
            final String wrapperMessage = fileName + " section '" + sectionName
                    + "' subsection 'Properties' wrapping div for table needs the"
                    + " class 'wrapper'";
            Assert.assertTrue(wrapperMessage, div.hasAttributes());
            Assert.assertNotNull(wrapperMessage,
                    div.getAttributes().getNamedItem("class").getNodeValue());
            Assert.assertTrue(wrapperMessage,
                    div.getAttributes().getNamedItem("class").getNodeValue().contains("wrapper"));

            final Node table = XmlUtil.getFirstChildElement(div);
            Assert.assertEquals(fileName + " section '" + sectionName
                            + "' subsection 'Properties' has unexpected child node",
                    "table", table.getNodeName());

            validatePropertySectionProperties(fileName, sectionName, table, instance,
                    properties);
        }

        Assert.assertTrue(fileName + " section '" + sectionName + "' should show properties: "
                + properties, properties.isEmpty());
    }

