    private static void validateUsageExample(String fileName, String sectionName, Node subSection) {
        final String text = subSection.getTextContent().replace("Checkstyle Style", "")
                .replace("Google Style", "").replace("Sun Style", "").trim();

        assertTrue(text.isEmpty(), fileName + " section '" + sectionName
                + "' has unknown text in 'Example of Usage': " + text);

        boolean hasCheckstyle = false;
        boolean hasGoogle = false;
        boolean hasSun = false;

        for (Node node : XmlUtil.findChildElementsByTag(subSection, "a")) {
            final String url = node.getAttributes().getNamedItem("href").getTextContent();
            final String linkText = node.getTextContent().trim();
            String expectedUrl = null;

            if ("Checkstyle Style".equals(linkText)) {
                hasCheckstyle = true;
                expectedUrl = "https://github.com/search?q="
                        + "path%3Aconfig+filename%3Acheckstyle_checks.xml+"
                        + "repo%3Acheckstyle%2Fcheckstyle+" + sectionName;
            }
            else if ("Google Style".equals(linkText)) {
                hasGoogle = true;
                expectedUrl = "https://github.com/search?q="
                        + "path%3Asrc%2Fmain%2Fresources+filename%3Agoogle_checks.xml+"
                        + "repo%3Acheckstyle%2Fcheckstyle+"
                        + sectionName;

                assertTrue(
                        GOOGLE_MODULES.contains(sectionName), fileName + " section '" + sectionName
                            + "' should be in google_checks.xml or not reference 'Google Style'");
            }
            else if ("Sun Style".equals(linkText)) {
                hasSun = true;
                expectedUrl = "https://github.com/search?q="
                        + "path%3Asrc%2Fmain%2Fresources+filename%3Asun_checks.xml+"
                        + "repo%3Acheckstyle%2Fcheckstyle+"
                        + sectionName;

                assertTrue(
                        SUN_MODULES.contains(sectionName), fileName + " section '" + sectionName
                                + "' should be in sun_checks.xml or not reference 'Sun Style'");
            }

            assertEquals(expectedUrl, url, fileName + " section '" + sectionName
                    + "' should have matching url");
        }

        assertTrue(hasCheckstyle, fileName + " section '" + sectionName
                + "' should have a checkstyle section");
        assertTrue(hasGoogle
                || !GOOGLE_MODULES.contains(sectionName), fileName + " section '" + sectionName
                        + "' should have a google section since it is in it's config");
        assertTrue(hasSun || !SUN_MODULES.contains(sectionName),
                fileName + " section '" + sectionName
                        + "' should have a sun section since it is in it's config");
    }

