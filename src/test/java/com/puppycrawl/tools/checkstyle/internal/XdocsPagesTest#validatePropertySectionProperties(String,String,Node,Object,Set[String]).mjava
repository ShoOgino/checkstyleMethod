    private static void validatePropertySectionProperties(String fileName, String sectionName,
            Node table, Object instance, Set<String> properties) throws Exception {
        boolean skip = true;
        boolean didJavadocTokens = false;
        boolean didTokens = false;

        for (Node row : XmlUtil.getChildrenElements(table)) {
            final List<Node> columns = new ArrayList<>(XmlUtil.getChildrenElements(row));

            assertEquals(5, columns.size(), fileName + " section '" + sectionName
                    + "' should have the requested columns");

            if (skip) {
                assertEquals("name", columns.get(0).getTextContent(),
                        fileName + " section '" + sectionName
                                + "' should have the specific title");
                assertEquals("description", columns.get(1).getTextContent(),
                        fileName + " section '" + sectionName
                                + "' should have the specific title");
                assertEquals("type", columns.get(2).getTextContent(),
                        fileName + " section '" + sectionName
                                + "' should have the specific title");
                assertEquals("default value", columns.get(3).getTextContent(),
                        fileName + " section '" + sectionName
                                + "' should have the specific title");
                assertEquals("since", columns.get(4).getTextContent(),
                        fileName + " section '" + sectionName
                                + "' should have the specific title");

                skip = false;
                continue;
            }

            assertFalse(didTokens, fileName + " section '" + sectionName
                    + "' should have token properties last");

            final String propertyName = columns.get(0).getTextContent();
            assertTrue(properties.remove(propertyName), fileName + " section '" + sectionName
                    + "' should not contain the property: " + propertyName);

            if ("tokens".equals(propertyName)) {
                final AbstractCheck check = (AbstractCheck) instance;
                validatePropertySectionPropertyTokens(fileName, sectionName, check, columns);
                didTokens = true;
            }
            else if ("javadocTokens".equals(propertyName)) {
                final AbstractJavadocCheck check = (AbstractJavadocCheck) instance;
                validatePropertySectionPropertyJavadocTokens(fileName, sectionName, check, columns);
                didJavadocTokens = true;
            }
            else {
                assertFalse(didJavadocTokens, fileName + " section '" + sectionName
                            + "' should have javadoc token properties next to last, before tokens");

                validatePropertySectionPropertyEx(fileName, sectionName, instance, columns,
                        propertyName);
            }

            assertFalse(columns.get(4).getTextContent().trim().isEmpty(),
                    fileName + " section '" + sectionName
                            + "' should have a version for " + propertyName);
            assertTrue(VERSION.matcher(columns.get(4).getTextContent().trim()).matches(),
                    fileName + " section '" + sectionName
                            + "' should have a valid version for " + propertyName);
        }
    }

