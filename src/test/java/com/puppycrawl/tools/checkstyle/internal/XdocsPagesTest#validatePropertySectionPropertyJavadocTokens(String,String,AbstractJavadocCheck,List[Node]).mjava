    private static void validatePropertySectionPropertyJavadocTokens(String fileName,
            String sectionName, AbstractJavadocCheck check, List<Node> columns) {
        assertEquals("javadoc tokens to check",
                columns.get(1).getTextContent(), fileName + " section '" + sectionName
                        + "' should have the basic token javadoc description");

        final String acceptableTokenText = columns.get(2).getTextContent().trim();
        assertEquals("subset of javadoc tokens "
                        + CheckUtil.getJavadocTokenText(check.getAcceptableJavadocTokens(),
                check.getRequiredJavadocTokens()),
                acceptableTokenText
                        .replaceAll("\\s+", " ")
                        .replaceAll("\\s,", ",")
                        .replaceAll("\\s\\.", "."),
                fileName + " section '" + sectionName
                        + "' should have all the acceptable javadoc tokens");
        assertFalse(isInvalidTokenPunctuation(acceptableTokenText),
                fileName + "'s acceptable javadoc token section: " + sectionName
                        + "should have ',' & '.' at beginning of the next corresponding lines.");

        final String defaultTokenText = columns.get(3).getTextContent().trim();
        assertEquals(CheckUtil.getJavadocTokenText(check.getDefaultJavadocTokens(),
                check.getRequiredJavadocTokens()),
                defaultTokenText
                        .replaceAll("\\s+", " ")
                        .replaceAll("\\s,", ",")
                        .replaceAll("\\s\\.", "."),
                fileName + " section '" + sectionName
                        + "' should have all the default javadoc tokens");
        assertFalse(isInvalidTokenPunctuation(defaultTokenText),
                fileName + "'s default javadoc token section: " + sectionName
                        + "should have ',' & '.' at beginning of the next corresponding lines.");
    }

