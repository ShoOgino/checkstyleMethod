    private static String createPropertiesText() {
        final StringBuilder result = new StringBuilder(100);

        result.append("\n<ul>");

        for (List<Node> property : CHECK_PROPERTIES) {
            final String propertyName = getNodeText(property.get(0));

            result.append("\n<li>\nProperty {@code ");
            result.append(propertyName);
            result.append("} - ");

            final String temp = getNodeText(property.get(1));

            result.append(temp);
            CHECK_PROPERTY_DOC.put(propertyName, temp);

            String typeText = "java.lang.String[]";
            final String propertyType = property.get(2).getTextContent();
            final boolean isSpecialAllTokensType = propertyType.contains("set of any supported");
            final boolean isPropertyTokenType = isSpecialAllTokensType
                    || propertyType.contains("subset of tokens")
                    || propertyType.contains("subset of javadoc tokens");
            if (!isPropertyTokenType) {
                final String typeName =
                        getCorrectNodeBasedOnPropertyType(property).getTextContent().trim();
                typeText = FULLY_QUALIFIED_CLASS_NAMES.get(typeName).getTypeName();
            }
            if (isSpecialAllTokensType) {
                typeText = "anyTokenTypesSet";
            }
            result.append(" Type is {@code ").append(typeText).append("}.");

            if (!isSpecialAllTokensType) {
                final String validationType = getValidationType(isPropertyTokenType, propertyName);
                if (validationType != null) {
                    result.append(validationType);
                }
            }

            result.append(getDefaultValueOfType(propertyName, isSpecialAllTokensType));

            result.append(emptyStringArrayDefaultValue(property.get(3)));

            if (result.charAt(result.length() - 1) != '.') {
                result.append('.');
            }

            result.append("\n</li>");
        }

        result.append("\n</ul>");

        return result.toString();
    }

