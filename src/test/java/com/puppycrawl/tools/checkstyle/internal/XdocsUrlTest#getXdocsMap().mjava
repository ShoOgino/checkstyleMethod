    private static Map<String, List<String>> getXdocsMap() throws IOException {
        final Map<String, List<String>> checksNamesMap = new HashMap<>();
        final Set<Class<?>> checkSet = CheckUtil.getCheckstyleModules();
        final Set<Class<?>> treeWalkerOrFileSetCheckSet = checkSet.stream()
                .filter(clazz -> {
                    return AbstractCheck.class.isAssignableFrom(clazz)
                            || AbstractFileSetCheck.class.isAssignableFrom(clazz);
                })
                .collect(Collectors.toSet());
        for (Class<?> check : treeWalkerOrFileSetCheckSet) {
            final String checkName = check.getSimpleName();
            if (!checkName.equals(TREE_WORKER)) {
                String packageName = check.getPackage().getName();
                packageName = packageName.substring(packageName.lastIndexOf('.') + 1);
                if (packageName.equals(CHECKS)) {
                    packageName = MISC;
                }
                if (checksNamesMap.get(packageName) == null) {
                    final List<String> arrayList = new ArrayList<>();
                    arrayList.add(checkName);
                    checksNamesMap.put(packageName, arrayList);
                }
                else {
                    checksNamesMap.get(packageName).add(checkName);
                }
            }
        }
        return checksNamesMap;
    }

