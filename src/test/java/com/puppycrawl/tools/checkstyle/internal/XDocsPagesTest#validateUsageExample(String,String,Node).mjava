    private static void validateUsageExample(String fileName, String sectionName, Node subSection) {
        final String text = subSection.getTextContent().replace("Checkstyle Style", "")
                .replace("Google Style", "").replace("Sun Style", "").trim();

        Assert.assertTrue(fileName + " section '" + sectionName
                + "' has unknown text in 'Example of Usage': " + text, text.isEmpty());

        boolean hasCheckstyle = false;
        boolean hasGoogle = false;
        boolean hasSun = false;

        for (Node node : XmlUtil.findChildElementsByTag(subSection, "a")) {
            final String url = node.getAttributes().getNamedItem("href").getTextContent();
            final String linkText = node.getTextContent().trim();
            String expectedUrl = null;

            if ("Checkstyle Style".equals(linkText)) {
                hasCheckstyle = true;
                expectedUrl = "https://github.com/search?q="
                        + "path%3Aconfig+filename%3Acheckstyle_checks.xml+"
                        + "repo%3Acheckstyle%2Fcheckstyle+" + sectionName;
            }
            else if ("Google Style".equals(linkText)) {
                hasGoogle = true;
                expectedUrl = "https://github.com/search?q="
                        + "path%3Asrc%2Fmain%2Fresources+filename%3Agoogle_checks.xml+"
                        + "repo%3Acheckstyle%2Fcheckstyle+"
                        + sectionName;

                Assert.assertTrue(fileName + " section '" + sectionName
                        + "' should be in google_checks.xml or not reference 'Google Style'",
                        GOOGLE_MODULES.contains(sectionName));
            }
            else if ("Sun Style".equals(linkText)) {
                hasSun = true;
                expectedUrl = "https://github.com/search?q="
                        + "path%3Asrc%2Fmain%2Fresources+filename%3Asun_checks.xml+"
                        + "repo%3Acheckstyle%2Fcheckstyle+"
                        + sectionName;

                Assert.assertTrue(fileName + " section '" + sectionName
                        + "' should be in sun_checks.xml or not reference 'Sun Style'",
                        SUN_MODULES.contains(sectionName));
            }

            Assert.assertEquals(fileName + " section '" + sectionName
                    + "' should have matching url", expectedUrl, url);
        }

        Assert.assertTrue(fileName + " section '" + sectionName
                + "' should have a checkstyle section", hasCheckstyle);
        Assert.assertTrue(fileName + " section '" + sectionName
                + "' should have a google section since it is in it's config", hasGoogle
                || !GOOGLE_MODULES.contains(sectionName));
        Assert.assertTrue(fileName + " section '" + sectionName
                + "' should have a sun section since it is in it's config",
                hasSun || !SUN_MODULES.contains(sectionName));
    }

