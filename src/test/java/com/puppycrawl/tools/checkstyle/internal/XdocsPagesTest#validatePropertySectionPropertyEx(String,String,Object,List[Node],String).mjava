    private static void validatePropertySectionPropertyEx(String fileName, String sectionName,
            Object instance, List<Node> columns, String propertyName) throws Exception {
        Assert.assertFalse(fileName + " section '" + sectionName
                + "' should have a description for " + propertyName, columns.get(1)
                .getTextContent().trim().isEmpty());

        final String actualTypeName = columns.get(2).getTextContent().replace("\n", "")
                .replace("\r", "").replaceAll(" +", " ").trim();

        Assert.assertFalse(fileName + " section '" + sectionName + "' should have a type for "
                + propertyName, actualTypeName.isEmpty());

        final PropertyDescriptor descriptor = PropertyUtils.getPropertyDescriptor(instance,
                propertyName);
        final Class<?> clss = descriptor.getPropertyType();
        final String expectedTypeName = getModulePropertyExpectedTypeName(clss, instance,
                propertyName);

        if (expectedTypeName != null) {
            final String expectedValue = getModulePropertyExpectedValue(clss, instance,
                    propertyName);

            Assert.assertEquals(fileName + " section '" + sectionName
                    + "' should have the type for " + propertyName, expectedTypeName,
                    actualTypeName);

            if (expectedValue != null) {
                final String actualValue = columns.get(3).getTextContent().replace("\n", "")
                        .replace("\r", "").replaceAll(" +", " ").trim();

                Assert.assertEquals(fileName + " section '" + sectionName
                        + "' should have the value for " + propertyName, expectedValue,
                        actualValue);
            }
        }
    }

