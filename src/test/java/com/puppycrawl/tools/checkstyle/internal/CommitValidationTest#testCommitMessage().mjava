    @Test
    public void testCommitMessage() {
        assertEquals("should not accept commit message with periods on end", 3,
                validateCommitMessage("minor: Test. Test."));
        assertEquals("should not accept commit message with spaces on end", 3,
                validateCommitMessage("minor: Test. "));
        assertEquals("should not accept commit message with tabs on end", 3,
                validateCommitMessage("minor: Test.\t"));
        assertEquals("should not accept commit message with period on end, ignoring new line",
                3, validateCommitMessage("minor: Test.\n"));
        assertEquals("should not accept commit message with missing prefix", 1,
                validateCommitMessage("Test. Test"));
        assertEquals("should not accept commit message with missing prefix", 1,
                validateCommitMessage("Test. Test\n"));
        assertEquals("should not accept commit message with multiple lines with text", 2,
                validateCommitMessage("minor: Test.\nTest"));
        assertEquals("should accept commit message with a new line on end", 0,
                validateCommitMessage("minor: Test\n"));
        assertEquals("should accept commit message with multiple new lines on end", 0,
                validateCommitMessage("minor: Test\n\n"));
        assertEquals("should accept commit message that ends properly", 0,
                validateCommitMessage("minor: Test. Test"));
    }

