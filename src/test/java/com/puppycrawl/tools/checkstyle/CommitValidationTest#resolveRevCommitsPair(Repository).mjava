    private static RevCommitsPair resolveRevCommitsPair(Repository repo) {
        RevCommitsPair revCommitIteratorPair;

        try (RevWalk revWalk = new RevWalk(repo)) {
            Iterator<RevCommit> first;
            Iterator<RevCommit> second;
            ObjectId headId = repo.resolve(Constants.HEAD);
            RevCommit headCommit = revWalk.parseCommit(headId);

            if (isMergeCommit(headCommit)) {
                RevCommit firstParent = headCommit.getParent(0);
                RevCommit secondParent = headCommit.getParent(1);

                try (Git git = new Git(repo)) {
                    first = git.log().add(firstParent).call().iterator();
                    second = git.log().add(secondParent).call().iterator();
                }
            }
            else {
                try (Git git = new Git(repo)) {
                    first = git.log().call().iterator();
                }
                second = Collections.emptyIterator();
            }

            revCommitIteratorPair =
                    new RevCommitsPair(new OmitMergeCommitsIterator(first),
                            new OmitMergeCommitsIterator(second));
        }
        catch (GitAPIException | IOException e) {
            revCommitIteratorPair = new RevCommitsPair();
        }

        return revCommitIteratorPair;
    }

