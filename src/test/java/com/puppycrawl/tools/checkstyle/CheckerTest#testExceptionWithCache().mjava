    @Test
    public void testExceptionWithCache() throws Exception {
        final File cacheFile = temporaryFolder.newFile();

        final DefaultConfiguration checkConfig =
                createModuleConfig(CheckWhichThrowsError.class);

        final DefaultConfiguration treewalkerConfig =
                createModuleConfig(TreeWalker.class);
        treewalkerConfig.addChild(checkConfig);

        final DefaultConfiguration checkerConfig = createRootConfig(treewalkerConfig);
        checkerConfig.addAttribute("charset", StandardCharsets.UTF_8.name());
        checkerConfig.addAttribute("cacheFile", cacheFile.getPath());
        checkerConfig.addChild(treewalkerConfig);

        final Checker checker = createChecker(checkerConfig);

        final String filePath = getPath("InputChecker.java");
        try {
            checker.process(Collections.singletonList(new File(filePath)));
            fail("Exception is expected");
        }
        catch (CheckstyleException ex) {
            assertEquals("Error message is not expected",
                    "Exception was thrown while processing " + filePath, ex.getMessage());

            // destroy is called by Main
            checker.destroy();

            final Properties cache = new Properties();
            cache.load(Files.newBufferedReader(cacheFile.toPath()));

            assertEquals("Cache has unexpected size",
                    1, cache.size());
            assertNull("testFile is not in cache",
                    cache.getProperty(filePath));
        }
    }

