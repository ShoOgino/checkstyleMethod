    @Test
    public void testInRecordBlock() {
        assertFalse(ScopeUtil.isInRecordBlock(new DetailAstImpl()),
                "Should return false when passed is not record");
        assertFalse(ScopeUtil.isInRecordBlock(getNode(TokenTypes.LITERAL_NEW,
                TokenTypes.MODIFIERS)), "Should return false when passed is not record");
        assertTrue(ScopeUtil.isInRecordBlock(getNode(TokenTypes.OBJBLOCK, TokenTypes.RECORD_DEF,
                TokenTypes.MODIFIERS)), "Should return true when passed is record");
        assertFalse(ScopeUtil.isInRecordBlock(getNode(TokenTypes.RECORD_DEF,
                TokenTypes.INTERFACE_DEF, TokenTypes.MODIFIERS)),
                "Should return false when passed is not record");
        assertFalse(
                ScopeUtil.isInRecordBlock(getNode(TokenTypes.RECORD_DEF, TokenTypes.ANNOTATION_DEF,
                TokenTypes.MODIFIERS)), "Should return false when passed is not record");
        assertFalse(ScopeUtil.isInRecordBlock(getNode(TokenTypes.RECORD_DEF, TokenTypes.ENUM_DEF,
                TokenTypes.MODIFIERS)), "Should return false when passed is not record");
        assertFalse(ScopeUtil.isInRecordBlock(getNode(TokenTypes.RECORD_DEF, TokenTypes.LITERAL_NEW,
                TokenTypes.IDENT)), "Should return false when passed is not record");
        assertFalse(ScopeUtil.isInRecordBlock(getNode(TokenTypes.PACKAGE_DEF, TokenTypes.DOT)),
                "Should return false when passed is not expected");
    }

