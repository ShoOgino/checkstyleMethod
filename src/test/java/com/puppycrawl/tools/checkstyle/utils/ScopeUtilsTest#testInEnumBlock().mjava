    @Test
    public void testInEnumBlock() {
        assertFalse("Should return false when passed is not enum",
                ScopeUtils.isInEnumBlock(new DetailAST()));
        assertFalse("Should return false when passed is not enum",
                ScopeUtils.isInEnumBlock(getNode(TokenTypes.LITERAL_NEW,
                        TokenTypes.MODIFIERS)));
        assertTrue("Should return true when passed is enum",
                ScopeUtils.isInEnumBlock(getNode(TokenTypes.OBJBLOCK, TokenTypes.ENUM_DEF,
                        TokenTypes.MODIFIERS)));
        assertFalse("Should return false when passed is not enum",
                ScopeUtils.isInEnumBlock(getNode(TokenTypes.ENUM_DEF, TokenTypes.INTERFACE_DEF,
                        TokenTypes.MODIFIERS)));
        assertFalse("Should return false when passed is not enum",
                ScopeUtils.isInEnumBlock(getNode(TokenTypes.ENUM_DEF, TokenTypes.ANNOTATION_DEF,
                        TokenTypes.MODIFIERS)));
        assertFalse("Should return false when passed is not enum",
                ScopeUtils.isInEnumBlock(getNode(TokenTypes.ENUM_DEF, TokenTypes.CLASS_DEF,
                        TokenTypes.MODIFIERS)));
        assertFalse("Should return false when passed is not enum",
                ScopeUtils.isInEnumBlock(getNode(TokenTypes.ENUM_DEF, TokenTypes.LITERAL_NEW,
                        TokenTypes.IDENT)));
        assertFalse("Should return false when passed is not expected",
                ScopeUtils.isInEnumBlock(getNode(TokenTypes.PACKAGE_DEF, TokenTypes.DOT)));
    }

