    @Test
    public void testParseDoubleIntegerValues() {
        assertEquals("Invalid parse result", 0.0,
                CheckUtils.parseDouble("0L", TokenTypes.NUM_LONG), 0);
        assertEquals("Invalid parse result", 0b101,
                CheckUtils.parseDouble("0B101", TokenTypes.NUM_INT), 0);
        assertEquals("Invalid parse result", 289_775_941,
                CheckUtils.parseDouble("0b10001010001011010000101000101L", TokenTypes.NUM_LONG), 0);
        assertEquals("Invalid parse result", 1.0,
                CheckUtils.parseDouble("1", TokenTypes.NUM_INT), 0);
        assertEquals("Invalid parse result", 8.0,
                CheckUtils.parseDouble("8L", TokenTypes.NUM_LONG), 0);
        assertEquals("Invalid parse result", -2.147_483_648E10,
                CheckUtils.parseDouble("-21474836480", TokenTypes.NUM_LONG), 0);
        assertEquals("Invalid parse result", -2,
                CheckUtils.parseDouble("-2", TokenTypes.NUM_INT), 0);
        assertEquals("Invalid parse result", -1,
                CheckUtils.parseDouble("0xffffffff", TokenTypes.NUM_INT), 0);
        assertEquals("Invalid parse result", 2915.0,
                CheckUtils.parseDouble("0x0B63", TokenTypes.NUM_INT), 0);
        assertEquals("Invalid parse result", 2.147_483_647E10,
                CheckUtils.parseDouble("21474836470", TokenTypes.NUM_LONG), 0);
        assertEquals("Invalid parse result", 59.0,
                CheckUtils.parseDouble("073l", TokenTypes.NUM_LONG), 0);
    }

