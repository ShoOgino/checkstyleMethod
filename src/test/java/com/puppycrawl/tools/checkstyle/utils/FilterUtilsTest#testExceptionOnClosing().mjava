    @Test
    @PrepareForTest({FilterUtils.class, CommonUtils.class})
    public void testExceptionOnClosing() throws Exception {
        final File file = temporaryFolder.newFile("existing.xml");
        final InputStream inputStream = PowerMockito.mock(InputStream.class);
        Mockito.doThrow(IOException.class).when(inputStream).close();

        final URL url = PowerMockito.mock(URL.class);
        BDDMockito.given(url.openStream()).willReturn(inputStream);

        final URI uri = PowerMockito.mock(URI.class);
        BDDMockito.given(uri.toURL()).willReturn(url);

        PowerMockito.mockStatic(CommonUtils.class);

        final String fileName = file.getPath();
        BDDMockito.given(CommonUtils.getUriByFilename(fileName)).willReturn(uri);
        assertFalse("Should be false, because error on close",
                FilterUtils.isFileExists(fileName));
    }

