    @Test
    public void testGetAccessModifierFromModifiersToken() throws Exception {
        final DetailAST privateVariable = getNodeFromFile(TokenTypes.VARIABLE_DEF);
        final AccessModifierOption modifierPrivate =
                CheckUtil.getAccessModifierFromModifiersToken(privateVariable.getFirstChild());
        assertEquals(AccessModifierOption.PRIVATE, modifierPrivate, "Invalid access modifier");

        final DetailAST protectedVariable = privateVariable.getNextSibling();
        final AccessModifierOption modifierProtected =
                CheckUtil.getAccessModifierFromModifiersToken(protectedVariable.getFirstChild());
        assertEquals(AccessModifierOption.PROTECTED, modifierProtected, "Invalid access modifier");

        final DetailAST publicVariable = protectedVariable.getNextSibling();
        final AccessModifierOption modifierPublic =
                CheckUtil.getAccessModifierFromModifiersToken(publicVariable.getFirstChild());
        assertEquals(AccessModifierOption.PUBLIC, modifierPublic, "Invalid access modifier");

        final DetailAST packageVariable = publicVariable.getNextSibling();
        final AccessModifierOption modifierPackage =
                CheckUtil.getAccessModifierFromModifiersToken(packageVariable.getFirstChild());
        assertEquals(AccessModifierOption.PACKAGE, modifierPackage, "Invalid access modifier");
    }

