    @Test
    @SuppressWarnings("unchecked")
    public void testPackagesFile() throws Exception {
        mockStatic(Closeables.class);
        doNothing().when(Closeables.class);
        Closeables.closeQuietly(any(InputStream.class));

        final Method processFileMethod = PackageNamesLoader.class.getDeclaredMethod("processFile",
                URL.class, PackageNamesLoader.class);
        processFileMethod.setAccessible(true);
        final Constructor<PackageNamesLoader> constructor = PackageNamesLoader.class
                .getDeclaredConstructor();
        constructor.setAccessible(true);
        final PackageNamesLoader namesLoader = constructor.newInstance();
        final URL input = new File(getPath("InputPackageNamesLoaderFile.xml")).toURI().toURL();

        processFileMethod.invoke(null, input, namesLoader);

        final Field packageNamesField = PackageNamesLoader.class.getDeclaredField("packageNames");
        packageNamesField.setAccessible(true);

        final Set<String> actualPackageNames = (Set<String>) packageNamesField.get(namesLoader);
        final String[] expectedPackageNames = {
            "com.puppycrawl.tools.checkstyle",
            "com.puppycrawl.tools.checkstyle.checks",
            "com.puppycrawl.tools.checkstyle.checks.annotation",
            "com.puppycrawl.tools.checkstyle.checks.blocks",
            "com.puppycrawl.tools.checkstyle.checks.coding",
            "com.puppycrawl.tools.checkstyle.checks.design",
            "com.puppycrawl.tools.checkstyle.checks.header",
            "com.puppycrawl.tools.checkstyle.checks.imports",
            "com.puppycrawl.tools.checkstyle.checks.indentation",
            "com.puppycrawl.tools.checkstyle.checks.javadoc",
            "com.puppycrawl.tools.checkstyle.checks.metrics",
            "com.puppycrawl.tools.checkstyle.checks.modifier",
            "com.puppycrawl.tools.checkstyle.checks.naming",
            "com.puppycrawl.tools.checkstyle.checks.regexp",
            "com.puppycrawl.tools.checkstyle.checks.sizes",
            "com.puppycrawl.tools.checkstyle.checks.whitespace",
            "com.puppycrawl.tools.checkstyle.filefilters",
            "com.puppycrawl.tools.checkstyle.filters",
        };

        assertEquals("Invalid package names length.", expectedPackageNames.length,
            actualPackageNames.size());
        final Set<String> checkstylePackagesSet =
                new HashSet<>(Arrays.asList(expectedPackageNames));
        assertEquals("Invalid names set.", checkstylePackagesSet, actualPackageNames);

        verifyStatic(Closeables.class, times(1));
        Closeables.closeQuietly(any(InputStream.class));
    }

