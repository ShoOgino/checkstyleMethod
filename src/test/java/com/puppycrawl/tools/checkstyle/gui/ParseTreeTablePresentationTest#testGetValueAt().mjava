    /**
     * The path to class name in InputJavadocAttributesAndMethods.java
     * CLASS_DEF
     *  - MODIFIERS
     *  - Comment node
     *  - LITERAL_CLASS
     *  - IDENT -> this is the node that holds the class name
     *  Line number 4 - first three lines are taken by javadoc
     *  Column 6 - first five columns taken by 'class '
     */
    @Test
    public void testGetValueAt() {

        final DetailAST node = tree.getFirstChild()
            .getNextSibling()
            .getNextSibling()
            .getNextSibling();

        Assert.assertNotNull("Expected a non-null identifier node here", node);
        Assert.assertEquals("Expected identifier token",
            TokenTypes.IDENT, node.getType());

        final ParseTreeTablePresentation parseTree = new ParseTreeTablePresentation(null);
        final Object treeModel = parseTree.getValueAt(node, 0);
        final String type = (String) parseTree.getValueAt(node, 1);
        final int line = (int) parseTree.getValueAt(node, 2);
        final int column = (int) parseTree.getValueAt(node, 3);
        final String text = (String) parseTree.getValueAt(node, 4);

        Assert.assertEquals("Node should be an Identifier", "IDENT", type);
        Assert.assertEquals("Class identifier should start on line 4", 4, line);
        Assert.assertEquals("Class name should start from column 6", 6, column);
        Assert.assertEquals("Wrong class name", "InputParseTreeTablePresentation", text);
        Assert.assertNull("Root node should have null value", treeModel);

        try {
            parseTree.getValueAt(node, parseTree.getColumnCount());
            Assert.fail("IllegalStateException expected");
        }
        catch (IllegalStateException ex) {
            Assert.assertEquals("Invalid error message", "Unknown column", ex.getMessage());
        }

    }

