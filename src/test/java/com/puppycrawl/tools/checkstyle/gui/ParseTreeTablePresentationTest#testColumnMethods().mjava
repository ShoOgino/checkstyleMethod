    @Test
    public void testColumnMethods() {
        final ParseTreeTablePresentation parseTree = new ParseTreeTablePresentation(null);
        Assert.assertSame("Invalid type", ParseTreeTableModel.class, parseTree.getColumnClass(0));
        Assert.assertSame("Invalid type", String.class, parseTree.getColumnClass(1));
        Assert.assertSame("Invalid type", Integer.class, parseTree.getColumnClass(2));
        Assert.assertSame("Invalid type", Integer.class, parseTree.getColumnClass(3));
        Assert.assertSame("Invalid type", String.class, parseTree.getColumnClass(4));

        try {
            parseTree.getColumnClass(parseTree.getColumnCount());
            Assert.fail("IllegalStateException expected");
        }
        catch (IllegalStateException ex) {
            Assert.assertEquals("Invalid error message", "Unknown column", ex.getMessage());
        }

        Assert.assertFalse("Invalid cell editable status", parseTree.isCellEditable(1));

        Assert.assertEquals("Invalid column count", 5, parseTree.getColumnCount());
        Assert.assertEquals("Invalid column name", "Tree", parseTree.getColumnName(0));
        Assert.assertEquals("Invalid column name", "Type", parseTree.getColumnName(1));
        Assert.assertEquals("Invalid column name", "Line", parseTree.getColumnName(2));
        Assert.assertEquals("Invalid column name", "Column", parseTree.getColumnName(3));
        Assert.assertEquals("Invalid column name", "Text", parseTree.getColumnName(4));
    }

