    public static ParseTree treeNewlineAndAsteriskInParameters()
    {
        JavadocContext javadocContext0 = new JavadocContext(null, 0);
        CommonToken leadingAsterisk0 = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, "  *");
        javadocContext0.addChild(leadingAsterisk0);
        TextContext textContext0 = new TextContext(javadocContext0, 0);
        CommonToken ws0 = new CommonToken(JavadocTokenTypes.WS, " ");
        textContext0.addChild(ws0);
        javadocContext0.addChild(textContext0);
        JavadocInlineTagContext javadocInlineTagContext0 = new JavadocInlineTagContext(javadocContext0, 0);
        CommonToken javadocInlineTagStart0 = new CommonToken(JavadocTokenTypes.JAVADOC_INLINE_TAG_START, "{");
        javadocInlineTagContext0.addChild(javadocInlineTagStart0);
        CommonToken linkLiteral0 = new CommonToken(JavadocTokenTypes.LINK_LITERAL, "@link");
        javadocInlineTagContext0.addChild(linkLiteral0);
        CommonToken ws1 = new CommonToken(JavadocTokenTypes.WS, " ");
        javadocInlineTagContext0.addChild(ws1);
        ReferenceContext referenceContext0 = new ReferenceContext(javadocInlineTagContext0, 0);
        CommonToken class0 = new CommonToken(JavadocTokenTypes.CLASS, "ImmutableSortedMap");
        referenceContext0.addChild(class0);
        CommonToken hash0 = new CommonToken(JavadocTokenTypes.HASH, "#");
        referenceContext0.addChild(hash0);
        CommonToken member0 = new CommonToken(JavadocTokenTypes.MEMBER, "of");
        referenceContext0.addChild(member0);
        ParametersContext parametersContext0 = new ParametersContext(referenceContext0, 0);
        CommonToken leftBrace0 = new CommonToken(JavadocTokenTypes.LEFT_BRACE, "(");
        parametersContext0.addChild(leftBrace0);
        CommonToken newline0 = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);
        parametersContext0.addChild(newline0);
        CommonToken leadingAsterisk1 = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, "  *");
        parametersContext0.addChild(leadingAsterisk1);
        CommonToken newline1 = new CommonToken(JavadocTokenTypes.NEWLINE, LINE_SEPARATOR);
        parametersContext0.addChild(newline1);
        CommonToken leadingAsterisk2 = new CommonToken(JavadocTokenTypes.LEADING_ASTERISK, "  *");
        parametersContext0.addChild(leadingAsterisk2);
        CommonToken ws2 = new CommonToken(JavadocTokenTypes.WS, " ");
        parametersContext0.addChild(ws2);
        CommonToken rightBrace0 = new CommonToken(JavadocTokenTypes.RIGHT_BRACE, ")");
        parametersContext0.addChild(rightBrace0);
        referenceContext0.addChild(parametersContext0);
        javadocInlineTagContext0.addChild(referenceContext0);
        CommonToken javadocInlineTagEnd0 = new CommonToken(JavadocTokenTypes.JAVADOC_INLINE_TAG_END, "}");
        javadocInlineTagContext0.addChild(javadocInlineTagEnd0);
        javadocContext0.addChild(javadocInlineTagContext0);
        CommonToken eof0 = new CommonToken(JavadocTokenTypes.EOF, "<EOF>");
        javadocContext0.addChild(eof0);
        return javadocContext0;
    }

