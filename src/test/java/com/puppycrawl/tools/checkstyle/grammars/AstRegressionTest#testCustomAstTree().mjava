    @Test
    public void testCustomAstTree() throws Exception {
        verifyAstRaw(getPath("InputRegressionEmptyAst.txt"), "\t");
        verifyAstRaw(getPath("InputRegressionEmptyAst.txt"), "\r\n");
        verifyAstRaw(getPath("InputRegressionEmptyAst.txt"), "\n");
        verifyAstRaw(getPath("InputRegressionEmptyAst.txt"), "\r\r");
        verifyAstRaw(getPath("InputRegressionEmptyAst.txt"), "\r");
        verifyAstRaw(getPath("InputRegressionEmptyAst.txt"), "\u000c\f");
        verifyAstRaw(getPath("InputRegressionEmptyAst.txt"), "// \n", true);
        verifyAstRaw(getPath("InputRegressionEmptyAst.txt"), "// \r", true);
        verifyAstRaw(getPath("InputRegressionEmptyAst.txt"), "// \r\n", true);
        verifyAstRaw(getPath("InputRegressionEmptyAst.txt"), "/* \n */", true);
        verifyAstRaw(getPath("InputRegressionEmptyAst.txt"), "/* \r\n */", true);
        // noinspection ProhibitedExceptionCaught
        try {
            verifyAstRaw(getPath("InputRegressionEmptyAst.txt"), "/* \r" + "\u0000\u0000" + " */",
                    true);
            fail("Expected Exception");
        }
        catch (ArrayIndexOutOfBoundsException ex) {
            // expected, as 'FileContents.extractCComment' is confused if the
            // comment is a 1 line comment or 2. Part of FileContents thinks it
            // is 1 line while other parts think it is 2 lines. The exception
            // occurs when trying to retrieve the non-existent second line.
            assertEquals("expected exception", "1", ex.getMessage());
        }
    }

