    @Test
    public void testProcessException() throws Exception {
        final ExceptionFileSetCheck check = new ExceptionFileSetCheck();
        check.configure(new DefaultConfiguration("filesetcheck"));
        check.setFileExtensions("tmp");
        final File firstFile = new File("inputAbstractFileSetCheck.tmp");

        final FileText fileText = new FileText(firstFile, Collections.emptyList());
        try {
            check.process(firstFile, fileText);
            fail("Exception is expected");
        }
        catch (IllegalArgumentException ex) {
            // exception is expected
            assertEquals("Test", ex.getMessage(), "Invalid exception message");
        }

        final SortedSet<Violation> internalViolations =
                check.getViolations();
        assertEquals(1, internalViolations.size(), "Internal violation should only have 1");

        // again to prove only 1 violation exists
        final File secondFile = new File("inputAbstractFileSetCheck.tmp");
        final FileText fileText2 = new FileText(secondFile, Collections.emptyList());
        try {
            check.process(secondFile, fileText2);
            fail("Exception is expected");
        }
        catch (IllegalArgumentException ex) {
            // exception is expected
            assertEquals("Test", ex.getMessage(), "Invalid exception message");
        }

        final SortedSet<Violation> internalViolations2 =
            check.getViolations();
        assertEquals(1, internalViolations2.size(), "Internal violation should only have 1 again");
    }

