    @Test
    public void testDeprecated() {
        final DetailAST ast = new DetailAST();
        DetailAST astParent = new DetailAST();
        astParent.setType(TokenTypes.LITERAL_CATCH);
        ast.setParent(astParent);

        int[] validTypes = new int[] {
            TokenTypes.CLASS_DEF,
            TokenTypes.INTERFACE_DEF,
            TokenTypes.ENUM_DEF,
            TokenTypes.ANNOTATION_DEF,
            TokenTypes.METHOD_DEF,
            TokenTypes.CTOR_DEF,
            TokenTypes.ENUM_CONSTANT_DEF,
            TokenTypes.ANNOTATION_FIELD_DEF,
            TokenTypes.VARIABLE_DEF,
        };
        for (int type: validTypes) {
            ast.setType(type);
            assertTrue(JavadocTagInfo.DEPRECATED.isValidOn(ast));
        }

        astParent.setType(TokenTypes.SLIST);
        ast.setType(TokenTypes.VARIABLE_DEF);
        assertFalse(JavadocTagInfo.DEPRECATED.isValidOn(ast));

        ast.setType(TokenTypes.PARAMETER_DEF);
        assertFalse(JavadocTagInfo.DEPRECATED.isValidOn(ast));
    }

