    public static List<ModuleDetails> readAllModulesIncludingThirdPartyIfAny(
            String... thirdPartyPackages) {
        final Set<String> standardModuleFileNames =
                new Reflections("com.puppycrawl.tools.checkstyle.meta",
                        new ResourcesScanner()).getResources(Pattern.compile(".*\\.xml"));
        final Set<String> allMetadataSources = new HashSet<>(standardModuleFileNames);
        for (String packageName : thirdPartyPackages) {
            final Set<String> thirdPartyModuleFileNames =
                    new Reflections(packageName, new ResourcesScanner())
                            .getResources(Pattern.compile(".*checkstylemeta-.*\\.xml"));
            allMetadataSources.addAll(thirdPartyModuleFileNames);
        }

        final List<ModuleDetails> result = new ArrayList<>();
        for (String fileName : allMetadataSources) {
            final ModuleType moduleType;
            if (fileName.endsWith("FileFilter.xml")) {
                moduleType = ModuleType.FILEFILTER;
            }
            else if (fileName.endsWith("Filter.xml")) {
                moduleType = ModuleType.FILTER;
            }
            else {
                moduleType = ModuleType.CHECK;
            }
            final ModuleDetails moduleDetails;
            try {
                moduleDetails = read(XmlMetaReader.class.getResourceAsStream("/" + fileName),
                        moduleType);
            }
            catch (ParserConfigurationException | IOException | SAXException ex) {
                throw new IllegalStateException("Problem to read all modules including third "
                        + "party if any. Problem detected at file: " + fileName, ex);
            }
            result.add(moduleDetails);
        }

        return result;
    }

