    @Test
    public void testExcludeScope() throws Exception
    {
        mCheckConfig.addAttribute("scope", Scope.PRIVATE.getName());
        mCheckConfig.addAttribute("excludeScope", Scope.PROTECTED.getName());
        final String[] expected = {
            "12:5: Missing a Javadoc comment.",
            "13:5: Missing a Javadoc comment.",
            "23:9: Missing a Javadoc comment.",
            "24:9: Missing a Javadoc comment.",
            "33:9: Missing a Javadoc comment.",
            "34:9: Missing a Javadoc comment.",
            "35:9: Missing a Javadoc comment.",
            "36:9: Missing a Javadoc comment.",
            "45:9: Missing a Javadoc comment.",
            "46:9: Missing a Javadoc comment.",
            "47:9: Missing a Javadoc comment.",
            "48:9: Missing a Javadoc comment.",
            "58:5: Missing a Javadoc comment.",
            "59:5: Missing a Javadoc comment.",
            "60:5: Missing a Javadoc comment.",
            "61:5: Missing a Javadoc comment.",
            "69:9: Missing a Javadoc comment.",
            "70:9: Missing a Javadoc comment.",
            "71:9: Missing a Javadoc comment.",
            "72:9: Missing a Javadoc comment.",
            "81:9: Missing a Javadoc comment.",
            "82:9: Missing a Javadoc comment.",
            "83:9: Missing a Javadoc comment.",
            "84:9: Missing a Javadoc comment.",
            "93:9: Missing a Javadoc comment.",
            "94:9: Missing a Javadoc comment.",
            "95:9: Missing a Javadoc comment.",
            "96:9: Missing a Javadoc comment.",
            "105:9: Missing a Javadoc comment.",
            "106:9: Missing a Javadoc comment.",
            "107:9: Missing a Javadoc comment.",
            "108:9: Missing a Javadoc comment.", };
        verify(mCheckConfig, getPath("javadoc" + File.separator
                                    + "InputNoJavadoc.java"), expected);
    }

