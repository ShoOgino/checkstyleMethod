    @Test
    public void testShouldStartLine2() throws Exception {
        final DefaultConfiguration checkConfig = createModuleConfig(RightCurlyCheck.class);
        checkConfig.addAttribute("option", RightCurlyOption.ALONE_OR_SINGLELINE.toString());
        checkConfig.addAttribute("tokens", "CLASS_DEF, METHOD_DEF, "
                + "ANNOTATION_DEF, ENUM_DEF, INTERFACE_DEF");
        final String[] expected = {
            "83:5: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 5),
            "108:5: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 5),
            "108:6: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 6),
            "119:5: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 5),
            "119:6: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 6),
            "133:5: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 5),
            "133:6: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 6),
            "194:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "199:30: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 30),
            "208:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "208:10: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 10),
        };
        verify(checkConfig, getPath("InputRightCurlyLeftTestShouldStartLine2.java"), expected);
    }

