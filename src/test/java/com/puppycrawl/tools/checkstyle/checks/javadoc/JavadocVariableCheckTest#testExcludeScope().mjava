    @Test
    public void testExcludeScope() throws Exception
    {
        final DefaultConfiguration checkConfig =
            createCheckConfig(JavadocVariableCheck.class);
        checkConfig.addAttribute("scope", Scope.PRIVATE.getName());
        checkConfig.addAttribute("excludeScope", Scope.PROTECTED.getName());
        final String[] expected = {
            "7:5: Missing a Javadoc comment.",
            "8:5: Missing a Javadoc comment.",
            "18:9: Missing a Javadoc comment.",
            "19:9: Missing a Javadoc comment.",
            "28:9: Missing a Javadoc comment.",
            "29:9: Missing a Javadoc comment.",
            "30:9: Missing a Javadoc comment.",
            "31:9: Missing a Javadoc comment.",
            "40:9: Missing a Javadoc comment.",
            "41:9: Missing a Javadoc comment.",
            "42:9: Missing a Javadoc comment.",
            "43:9: Missing a Javadoc comment.",
            "53:5: Missing a Javadoc comment.",
            "54:5: Missing a Javadoc comment.",
            "55:5: Missing a Javadoc comment.",
            "56:5: Missing a Javadoc comment.",
            "64:9: Missing a Javadoc comment.",
            "65:9: Missing a Javadoc comment.",
            "66:9: Missing a Javadoc comment.",
            "67:9: Missing a Javadoc comment.",
            "76:9: Missing a Javadoc comment.",
            "77:9: Missing a Javadoc comment.",
            "78:9: Missing a Javadoc comment.",
            "79:9: Missing a Javadoc comment.",
            "88:9: Missing a Javadoc comment.",
            "89:9: Missing a Javadoc comment.",
            "90:9: Missing a Javadoc comment.",
            "91:9: Missing a Javadoc comment.",
            "100:9: Missing a Javadoc comment.",
            "101:9: Missing a Javadoc comment.",
            "102:9: Missing a Javadoc comment.",
            "103:9: Missing a Javadoc comment.",
        };
        verify(checkConfig,
               getPath("javadoc" + File.separator + "InputNoJavadoc.java"),
               expected);
    }

