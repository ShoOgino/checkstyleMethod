    @Test
    // UT uses Reflection to avoid removing null-validation from static method,
    // which is a candidate for utility method in the future
    public void testGetFullImportIdent() {
        Object actual;
        try {
            Class<?> clazz = Class.forName(
                    "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck");
            Object t = clazz.getConstructor().newInstance();
            Method method = clazz.getDeclaredMethod("getFullImportIdent", DetailAST.class);
            method.setAccessible(true);
            actual = method.invoke(t, (DetailAST) null);
        }
        catch (ClassNotFoundException | NoSuchMethodException | InstantiationException
                  | IllegalAccessException | InvocationTargetException ignored) {
            actual = null;
        }

        String expected = "";
        assertEquals(expected, actual);
    }

