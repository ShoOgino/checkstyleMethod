    @Test
    public void testWithAnnotations() throws Exception {
        checkConfig.addAttribute("option", RightCurlyOption.ALONE.toString());
        checkConfig.addAttribute("tokens", "LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, "
            + "LITERAL_ELSE, CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, "
            + "STATIC_INIT, INSTANCE_INIT");
        final String[] expected = {
            "9:77: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "12:65: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "23:46: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "27:31: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "30:35: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "33:36: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "39:73: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "41:37: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "46:58: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "48:97: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "51:30: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "54:30: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "61:38: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "68:62: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "77:28: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "79:21: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "81:20: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "83:14: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "94:26: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "104:29: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "108:29: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "112:52: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "112:112: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "115:18: " + getCheckMessage(MSG_KEY_LINE_NEW, "}"),
            "119:23: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "122:37: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "124:30: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "128:77: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "137:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "139:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "149:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "151:75: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "152:77: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "152:93: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "153:77: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "154:77: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "154:93: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "160:37: " + getCheckMessage(MSG_KEY_LINE_NEW, "}"),
            "167:37: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "182:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "189:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "189:13: " + getCheckMessage(MSG_KEY_LINE_NEW, "}"),
            "198:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "198:10: " + getCheckMessage(MSG_KEY_LINE_NEW, "}"),
            "202:49: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "202:50: " + getCheckMessage(MSG_KEY_LINE_NEW, "}"),
            "205:75: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "205:76: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "205:77: " + getCheckMessage(MSG_KEY_LINE_NEW, "}"),
            "209:76: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),
            "217:27: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}"),

        };
        verify(checkConfig, getPath("InputRightCurlyAnnotations.java"), expected);
    }

