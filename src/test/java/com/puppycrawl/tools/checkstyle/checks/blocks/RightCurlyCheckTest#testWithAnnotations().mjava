    @Test
    public void testWithAnnotations() throws Exception {
        final DefaultConfiguration checkConfig = createModuleConfig(RightCurlyCheck.class);
        checkConfig.addAttribute("option", RightCurlyOption.ALONE.toString());
        checkConfig.addAttribute("tokens", "LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, "
            + "LITERAL_IF, LITERAL_ELSE, CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, "
            + "LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT, ANNOTATION_DEF, ENUM_DEF");
        final String[] expected = {
            "15:77: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 77),
            "18:65: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 65),
            "29:46: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 46),
            "33:31: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 31),
            "36:35: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 35),
            "39:36: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 36),
            "45:73: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 73),
            "47:37: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 37),
            "52:66: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 66),
            "55:96: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 96),
            "58:30: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 30),
            "61:30: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 30),
            "64:29: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 29),
            "68:38: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 38),
            "69:31: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 31),
            "75:62: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 62),
            "84:28: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 28),
            "86:21: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 21),
            "88:20: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 20),
            "90:14: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 14),
            "101:26: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 26),
            "102:20: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 20),
            "111:29: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 29),
            "111:38: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 38),
            "115:29: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 29),
            "115:38: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 38),
            "119:40: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 40),
            "119:88: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 88),
            "122:18: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 18),
            "126:23: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 23),
            "129:37: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 37),
            "131:30: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 30),
            "135:77: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 77),
            "144:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "146:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "146:33: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 33),
            "158:75: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 75),
            "159:58: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 58),
            "159:74: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 74),
            "160:58: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 58),
            "161:58: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 58),
            "161:74: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 74),
            "167:37: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 37),
            "174:37: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 37),
            "189:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "196:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "196:13: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 13),
            "205:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "205:10: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 10),
            "209:54: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 54),
            "209:55: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 55),
            "212:75: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 75),
            "212:76: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 76),
            "212:77: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 77),
            "216:76: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 76),
            "224:27: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 27),
            "228:31: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 31),
            "231:5: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 5),
            "233:29: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 29),
            "236:5: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 5),
            "239:30: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 30),
            "242:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "245:38: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 38),
            "247:56: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 56),
            "250:24: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 24),
            "260:29: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 29),
            "262:40: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 40),
            "266:5: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 5),
            "269:5: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 5),
            "271:61: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 61),
        };
        verify(checkConfig, getPath("InputRightCurlyTestWithAnnotations.java"), expected);
    }

