    @Test
    public void testWithAnnotations() throws Exception {
        checkConfig.addAttribute("option", RightCurlyOption.ALONE.toString());
        checkConfig.addAttribute("tokens", "LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, "
            + "LITERAL_ELSE, CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, "
            + "STATIC_INIT, INSTANCE_INIT");
        final String[] expected = {
            "9:77: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 77),
            "12:65: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 65),
            "23:46: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 46),
            "27:31: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 31),
            "30:35: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 35),
            "33:36: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 36),
            "39:73: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 73),
            "41:37: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 37),
            "46:58: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 58),
            "48:97: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 97),
            "51:30: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 30),
            "54:30: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 30),
            "61:38: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 38),
            "68:62: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 62),
            "77:28: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 28),
            "79:21: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 21),
            "81:20: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 20),
            "83:14: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 14),
            "94:26: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 26),
            "104:29: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 29),
            "108:29: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 29),
            "112:52: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 52),
            "112:112: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 112),
            "115:18: " + getCheckMessage(MSG_KEY_LINE_NEW, "}", 18),
            "119:23: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 23),
            "122:37: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 37),
            "124:30: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 30),
            "128:77: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 77),
            "137:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "139:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "149:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "151:75: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 75),
            "152:77: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 77),
            "152:93: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 93),
            "153:77: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 77),
            "154:77: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 77),
            "154:93: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 93),
            "160:37: " + getCheckMessage(MSG_KEY_LINE_NEW, "}", 37),
            "167:37: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 37),
            "182:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "189:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "189:13: " + getCheckMessage(MSG_KEY_LINE_NEW, "}", 13),
            "198:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "198:10: " + getCheckMessage(MSG_KEY_LINE_NEW, "}", 10),
            "202:49: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 49),
            "202:50: " + getCheckMessage(MSG_KEY_LINE_NEW, "}", 50),
            "205:75: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 75),
            "205:76: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 76),
            "205:77: " + getCheckMessage(MSG_KEY_LINE_NEW, "}", 77),
            "209:76: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 76),
            "217:27: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 27),

        };
        verify(checkConfig, getPath("InputRightCurlyAnnotations.java"), expected);
    }

