    @Test(expected = IllegalStateException.class)
    public void testVisitTokenSwitchReflection() throws Exception {
        ImportOrderOption importOrderOptionMock = PowerMockito.mock(ImportOrderOption.class);
        Whitebox.setInternalState(importOrderOptionMock, "name", "NEW_OPTION_FOR_UT");
        Whitebox.setInternalState(importOrderOptionMock, "ordinal", 5);

        DetailAST astImport = mockAST(TokenTypes.IMPORT, "import", "mockfile", 0, 0);
        DetailAST astIdent = mockAST(TokenTypes.IDENT, "myTestImport", "mockfile", 0, 0);
        astImport.addChild(astIdent);
        DetailAST astSemi = mockAST(TokenTypes.SEMI, ";", "mockfile", 0, 0);
        astIdent.addNextSibling(astSemi);

        ImportOrderCheck check = new ImportOrderCheck() {
            @Override
            public ImportOrderOption getAbstractOption() {
                ImportOrderOption importOrderOption = PowerMockito.mock(ImportOrderOption.class);
                Whitebox.setInternalState(importOrderOption, "name", "NEW_OPTION_FOR_UT");
                Whitebox.setInternalState(importOrderOption, "ordinal", 5);
                return importOrderOption;
                }
        };
        // expecting IllegalStateException
        check.visitToken(astImport);
    }

