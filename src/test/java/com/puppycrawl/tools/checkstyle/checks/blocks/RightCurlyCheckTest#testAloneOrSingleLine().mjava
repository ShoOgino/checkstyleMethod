    @Test
    public void testAloneOrSingleLine() throws Exception {
        final DefaultConfiguration checkConfig = createModuleConfig(RightCurlyCheck.class);
        checkConfig.addAttribute("option", RightCurlyOption.ALONE_OR_SINGLELINE.toString());
        checkConfig.addAttribute("tokens", "LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, "
            + "LITERAL_IF, LITERAL_ELSE, CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, "
            + "LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT, ANNOTATION_DEF, ENUM_DEF, "
                + "INTERFACE_DEF");
        final String[] expected = {
            "68:26: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 26),
            "82:42: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 42),
            "85:18: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 18),
            "93:30: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 30),
            "97:77: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 77),
            "105:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "107:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "118:75: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 75),
            "120:77: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 77),
            "120:93: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 93),
            "122:77: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 77),
            "124:64: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 64),
            "124:80: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 80),
            "130:37: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 37),
            "137:37: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 37),
            "152:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "159:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "159:13: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 13),
            "168:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "168:10: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 10),
            "172:54: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 54),
            "172:55: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 55),
            "175:75: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 75),
            "175:76: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 76),
            "175:77: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 77),
            "187:27: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 27),
            "193:24: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 24),
            "196:24: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 24),
            "199:24: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 24),
            "205:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "207:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "209:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "210:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "215:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "220:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "221:53: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 53),
            "229:24: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 24),
            "241:30: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 30),
        };
        verify(checkConfig, getPath("InputRightCurlyTestAloneOrSingleline.java"), expected);
    }

