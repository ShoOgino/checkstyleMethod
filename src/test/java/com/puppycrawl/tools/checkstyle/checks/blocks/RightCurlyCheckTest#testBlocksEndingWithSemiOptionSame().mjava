    @Test
    public void testBlocksEndingWithSemiOptionSame() throws Exception {
        final DefaultConfiguration checkConfig = createModuleConfig(RightCurlyCheck.class);
        checkConfig.addAttribute("option", RightCurlyOption.SAME.toString());
        checkConfig.addAttribute("tokens", "CLASS_DEF, METHOD_DEF, "
                + "CTOR_DEF, ANNOTATION_DEF, ENUM_DEF, INTERFACE_DEF");
        final String[] expected = {
            "13:5: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 5),
            "18:5: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 5),
            "24:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "32:29: " + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, "}", 29),
            "38:5: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 5),
            "41:5: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 5),
            "48:20: " + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, "}", 20),
            "54:5: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 5),
            "57:5: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 5),
            "62:30: " + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, "}", 30),
            "71:9: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 9),
            "71:11: " + getCheckMessage(MSG_KEY_LINE_BREAK_BEFORE, "}", 11),
            "75:5: " + getCheckMessage(MSG_KEY_LINE_ALONE, "}", 5),
        };
        verify(checkConfig, getPath("InputRightCurlyTestOptSameBlocksWithSemi.java"), expected);
    }

