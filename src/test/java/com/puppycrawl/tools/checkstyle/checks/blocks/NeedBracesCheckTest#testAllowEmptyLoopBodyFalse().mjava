    @Test
    public void testAllowEmptyLoopBodyFalse() throws Exception {
        final DefaultConfiguration checkConfig =
            createModuleConfig(NeedBracesCheck.class);
        final String[] expected = {
            "13:9: " + getCheckMessage(MSG_KEY_NEED_BRACES, "while"),
            "17:9: " + getCheckMessage(MSG_KEY_NEED_BRACES, "while"),
            "21:9: " + getCheckMessage(MSG_KEY_NEED_BRACES, "for"),
            "22:9: " + getCheckMessage(MSG_KEY_NEED_BRACES, "for"),
            "26:9: " + getCheckMessage(MSG_KEY_NEED_BRACES, "while"),
            "31:9: " + getCheckMessage(MSG_KEY_NEED_BRACES, "while"),
            "36:9: " + getCheckMessage(MSG_KEY_NEED_BRACES, "while"),
            "42:9: " + getCheckMessage(MSG_KEY_NEED_BRACES, "while"),
            "48:9: " + getCheckMessage(MSG_KEY_NEED_BRACES, "while"),
            "53:9: " + getCheckMessage(MSG_KEY_NEED_BRACES, "for"),
            "57:9: " + getCheckMessage(MSG_KEY_NEED_BRACES, "for"),
            "63:9: " + getCheckMessage(MSG_KEY_NEED_BRACES, "for"),
            "70:9: " + getCheckMessage(MSG_KEY_NEED_BRACES, "for"),
            "92:9: " + getCheckMessage(MSG_KEY_NEED_BRACES, "while"),
            "96:9: " + getCheckMessage(MSG_KEY_NEED_BRACES, "for"),
            "100:9: " + getCheckMessage(MSG_KEY_NEED_BRACES, "if"),
            "111:9: " + getCheckMessage(MSG_KEY_NEED_BRACES, "while"),
        };
        verify(checkConfig, getPath("InputNeedBracesLoopBodyFalse.java"), expected);
    }

