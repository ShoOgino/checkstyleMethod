    @Test
    public void testStatefulFieldsClearedOnBeginTree3() throws Exception {
        final NPathComplexityCheck check = new NPathComplexityCheck();
        final Optional<DetailAST> question = TestUtil.findTokenInAstByPredicate(
            TestUtil.parseFile(new File(getPath("InputNPathComplexity.java"))),
            ast -> ast.getType() == TokenTypes.QUESTION);

        Assert.assertTrue("Ast should contain QUESTION", question.isPresent());

        Assert.assertTrue("State is not cleared on beginTree",
            TestUtil.isStatefulFieldClearedDuringBeginTree(
                check,
                question.get(),
                "processingTokenEnd",
                processingTokenEnd -> {
                    try {
                        return (Integer) TestUtil.getClassDeclaredField(
                            processingTokenEnd.getClass(), "endLineNo").get(
                            processingTokenEnd) == 0
                            && (Integer) TestUtil.getClassDeclaredField(
                                processingTokenEnd.getClass(), "endColumnNo").get(
                                processingTokenEnd) == 0;
                    }
                    catch (IllegalAccessException | NoSuchFieldException ex) {
                        throw new IllegalStateException(ex);
                    }
                }));
    }

