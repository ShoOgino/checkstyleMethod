    @Test
    public void testInvalidForWithChecker()
        throws Exception
    {
        final DefaultConfiguration checkConfig = createCheckConfig(IndentationCheck.class);
        final Checker c = createChecker(checkConfig);
        final String fname = getPath("indentation/InputInvalidForIndent.java");
        final String[] expected = {
            "22: " + getCheckMessage(MSG_ERROR, "for", 6, 8),
            "23: " + getCheckMessage(MSG_ERROR, "for rcurly", 10, 8),
            "25: " + getCheckMessage(MSG_ERROR, "for", 9, 8),
            "26: " + getCheckMessage(MSG_ERROR, "for lcurly", 6, 8),
            "27: " + getCheckMessage(MSG_ERROR, "for rcurly", 6, 8),
            "31: " + getCheckMessage(MSG_CHILD_ERROR, "for", 10, 12),
            "31: " + getCheckMessage(MSG_CHILD_ERROR, "method call", 10, 12),
            "32: " + getCheckMessage(MSG_ERROR, "for rcurly", 10, 8),
            "35: " + getCheckMessage(MSG_ERROR, "for lcurly", 10, 8),
            "36: " + getCheckMessage(MSG_CHILD_ERROR, "for", 10, 12),
            "36: " + getCheckMessage(MSG_ERROR, "member def type", 10, 12),
            "44: " + getCheckMessage(MSG_CHILD_ERROR, "for", 10, 12),
            "44: " + getCheckMessage(MSG_ERROR, "i", 10, 12),
            "50: " + getCheckMessage(MSG_ERROR, "for", 7, 8),
            "51: " + getCheckMessage(MSG_CHILD_ERROR, "for", 10, 12),
            "51: " + getCheckMessage(MSG_ERROR, "int", 10, 11),
            "51: " + getCheckMessage(MSG_ERROR, "member def type", 10, 12),
            "60: " + getCheckMessage(MSG_CHILD_ERROR, "for", 7, 12),
            "60: " + getCheckMessage(MSG_ERROR, "i", 7, 12),
            "65: " + getCheckMessage(MSG_ERROR, "for", 6, 8),
            "66: " + getCheckMessage(MSG_CHILD_ERROR, "for", 10, 12),
            "67: " + getCheckMessage(MSG_CHILD_ERROR, "for", 14, 16),
            "68: " + getCheckMessage(MSG_CHILD_ERROR, "for", 10, 12),
            "73: " + getCheckMessage(MSG_ERROR, "for rcurly", 39, 8),
            "77: " + getCheckMessage(MSG_ERROR, "for rparen", 12, 8),
        };
        verify(c, fname, expected);
    }

