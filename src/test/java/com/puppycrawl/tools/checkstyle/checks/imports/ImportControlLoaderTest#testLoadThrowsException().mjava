    @Test
    // UT uses Reflection to cover IOException from 'loader.parseInputSource(source);'
    // because this is possible situation (though highly unlikely), which depends on hardware
    // and is difficult to emulate
    public void testLoadThrowsException() throws Exception {
        final InputSource source = new InputSource();
        try {
            final Class<?> clazz = ImportControlLoader.class;
            final Method privateMethod = clazz.getDeclaredMethod("load", InputSource.class,
                URI.class);
            privateMethod.setAccessible(true);
            privateMethod.invoke(null, source,
                    new File(getPath("import-control_complete.xml")).toURI());
            fail("exception expected");
        }
        catch (InvocationTargetException ex) {
            assertSame(CheckstyleException.class, ex.getCause().getClass());
            assertTrue(ex.getCause().getMessage().startsWith("unable to read"));
        }
    }

