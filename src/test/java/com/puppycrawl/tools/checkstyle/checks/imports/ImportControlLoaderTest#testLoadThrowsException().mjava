    @Test(expected = InvocationTargetException.class)
    // UT uses Reflection to cover IOException from 'loader.parseInputSource(source);'
    // because this is possible situation (though highly unlikely), which depends on hardware
    // and is difficult to emulate
    public void testLoadThrowsException() throws InvocationTargetException {
        InputSource source = new InputSource();
        try {
            Class<?> clazz = ImportControlLoader.class;
            Method privateMethod = clazz.getDeclaredMethod("load", InputSource.class, URI.class);
            privateMethod.setAccessible(true);
            privateMethod.invoke(null, source,
                    new File(getPath("import-control_complete.xml")).toURI());
        }
        catch (IllegalAccessException | IllegalArgumentException
                | NoSuchMethodException | SecurityException e) {
            throw new IllegalStateException(e);
        }
    }

