    /**
     * We cannot reproduce situation when visitToken is called and leaveToken is not.
     * So, we have to use reflection to be sure that even in such situation
     * state of the field will be cleared.
     *
     * @throws Exception when code tested throws exception
     */
    @Test
    @SuppressWarnings("unchecked")
    public void testClearState() throws Exception {
        final ParameterAssignmentCheck check = new ParameterAssignmentCheck();
        final Optional<DetailAST> methodDef = TestUtils.findTokenInAstByPredicate(
            TestUtils.parseFile(new File(getPath("InputParameterAssignmentReceiver.java"))),
            ast -> ast.getType() == TokenTypes.METHOD_DEF);

        assertTrue("Ast should contain METHOD_DEF", methodDef.isPresent());
        assertTrue("State is not cleared on beginTree",
            TestUtils.isStatefulFieldClearedDuringBeginTree(check, methodDef.get(),
                "parameterNamesStack",
                parameterNamesStack -> ((Collection<Set<String>>) parameterNamesStack).isEmpty()));
    }

