    @Test
    public void testAcceptThrowsIllegalStateExceptionAsFileNotFound() {
        final LocalizedMessage message = new LocalizedMessage(1, 1, 1, TokenTypes.CLASS_DEF,
            "messages.properties", "key", null, SeverityLevel.ERROR, null, getClass(), null);
        final String fileName = "nonexisting_file";
        final AuditEvent auditEvent = new AuditEvent(this, fileName, message);

        final SuppressWithPlainTextCommentFilter filter = new SuppressWithPlainTextCommentFilter();

        try {
            filter.accept(auditEvent);
            fail(IllegalStateException.class.getSimpleName() + " is expected");
        }
        catch (IllegalStateException ex) {
            assertEquals("Invalid exception message",
                "Cannot read source file: " + fileName, ex.getMessage());

            final Throwable cause = ex.getCause();
            assertTrue("Exception cause has invalid type",
                cause instanceof FileNotFoundException);
            assertEquals("Invalid exception message",
                fileName + " (No such file or directory)", cause.getMessage());
        }
    }

