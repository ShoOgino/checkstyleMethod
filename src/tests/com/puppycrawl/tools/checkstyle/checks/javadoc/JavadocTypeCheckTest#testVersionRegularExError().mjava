    @Test
    public void testVersionRegularExError()
        throws Exception
    {
        final DefaultConfiguration checkConfig =
            createCheckConfig(JavadocTypeCheck.class);
        checkConfig.addAttribute("versionFormat", "\\$Revision.*\\$");
        final String[] expected = {
            "13: Type Javadoc tag @version must match pattern '\\$Revision.*\\$'.",
            "22: Type Javadoc comment is missing an @version tag.",
            "31: Type Javadoc tag @version must match pattern '\\$Revision.*\\$'.",
            "40: Type Javadoc tag @version must match pattern '\\$Revision.*\\$'.",
            "49: Type Javadoc tag @version must match pattern '\\$Revision.*\\$'.",
            "58: Type Javadoc comment is missing an @version tag.",
            "67: Type Javadoc tag @version must match pattern '\\$Revision.*\\$'.",
            "76: Type Javadoc tag @version must match pattern '\\$Revision.*\\$'.",
            "85: Type Javadoc tag @version must match pattern '\\$Revision.*\\$'.",
            "94: Type Javadoc comment is missing an @version tag.",
            "103: Type Javadoc tag @version must match pattern '\\$Revision.*\\$'.",
            "112: Type Javadoc tag @version must match pattern '\\$Revision.*\\$'.",
        };
        verify(checkConfig, getPath("InputJavadoc.java"), expected);
    }

