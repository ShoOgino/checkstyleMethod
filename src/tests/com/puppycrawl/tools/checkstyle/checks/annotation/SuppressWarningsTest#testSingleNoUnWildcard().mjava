    /**
     * Tests SuppressWarnings un* warning disabled on everything.
     * @throws Exception
     */
    @Test
    public void testSingleNoUnWildcard() throws Exception {
        DefaultConfiguration checkConfig = createCheckConfig(SuppressWarningsCheck.class);
        checkConfig.addAttribute("format", ".*un.*");
        
        final String[] expected = {
            "5:19: The warning 'unchecked' cannot be suppressed at this location.",
            "17:23: The warning 'unused' cannot be suppressed at this location.",
            "20:27: The warning 'unforgiven' cannot be suppressed at this location.",
            "25:31: The warning 'unused' cannot be suppressed at this location.",
            "29:35: The warning 'unchecked' cannot be suppressed at this location.",
            "37:23: The warning 'abcun' cannot be suppressed at this location.",
            "44:23: The warning 'abcun' cannot be suppressed at this location.",
            "47:27: The warning 'unused' cannot be suppressed at this location.",
            "56:27: The warning 'unchecked' cannot be suppressed at this location.",
            "59:48: The warning 'unchecked' cannot be suppressed at this location.",
            
            "64:33: The warning 'unchecked' cannot be suppressed at this location.",
            "67:42: The warning 'unchecked' cannot be suppressed at this location.",
            "72:54: The warning 'unused' cannot be suppressed at this location.",
            "72:65: The warning 'unchecked' cannot be suppressed at this location.",
            "77:37: The warning 'unchecked' cannot be suppressed at this location.",
            "77:68: The warning 'unused' cannot be suppressed at this location.",
            "82:47: The warning 'unchecked' cannot be suppressed at this location.",
            "82:115: The warning 'unused' cannot be suppressed at this location.",
        };

        verify(checkConfig, getPath("annotation" + File.separator + "SuppressWarningsSingle.java"), expected);
    }

