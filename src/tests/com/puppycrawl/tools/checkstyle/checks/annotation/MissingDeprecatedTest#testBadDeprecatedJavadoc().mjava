    /**
     * Tests that memebers that are only deprecated via the annotation are flagged.
     */
    @Test
    public void testBadDeprecatedJavadoc() throws Exception
    {

        DefaultConfiguration checkConfig = createCheckConfig(MissingDeprecatedCheck.class);

        final String[] expected = {
            "5: Must include both @java.lang.Deprecated annotation and @deprecated Javadoc tag with description.",
            "11: Must include both @java.lang.Deprecated annotation and @deprecated Javadoc tag with description.",
            "16: Must include both @java.lang.Deprecated annotation and @deprecated Javadoc tag with description.",
            "23: Must include both @java.lang.Deprecated annotation and @deprecated Javadoc tag with description.",
            "29: Must include both @java.lang.Deprecated annotation and @deprecated Javadoc tag with description.",
            "38: Must include both @java.lang.Deprecated annotation and @deprecated Javadoc tag with description.",
            "40: Must include both @java.lang.Deprecated annotation and @deprecated Javadoc tag with description.",
            "48: Must include both @java.lang.Deprecated annotation and @deprecated Javadoc tag with description.",
            "55: Must include both @java.lang.Deprecated annotation and @deprecated Javadoc tag with description.",
        };

        verify(checkConfig, getPath("annotation" + File.separator + "BadDeprecatedJavadoc.java"), expected);
    }

