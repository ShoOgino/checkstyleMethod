    public void testTagsWithResolver()
        throws Exception
    {      
        final CheckConfiguration checkConfig = new CheckConfiguration();
        checkConfig.setClassname(JavadocMethodCheck.class.getName());
        checkConfig.addProperty("checkUnusedThrows", "true");
        final Checker c = createChecker(checkConfig);
        final String fname = getPath("InputTags.java");
        final String[] expected = {
            "14:5: Missing a Javadoc comment.",
            "18: Unused @param tag for 'unused'.",
            "24: Expected an @return tag.",
            "33: Expected an @return tag.",
            "40:16: Expected @throws tag for 'Exception'.",
            "49:16: Expected @throws tag for 'Exception'.",
            "53: Unable to get class information for @throws tag 'WrongException'.",
            "53: Unused @throws tag for 'WrongException'.",
            "55:16: Expected @throws tag for 'Exception'.",
            "55:27: Expected @throws tag for 'NullPointerException'.",
            "60:22: Expected @param tag for 'aOne'.",
            "68:22: Expected @param tag for 'aOne'.",
            "72: Unused @param tag for 'WrongParam'.",
            "73:23: Expected @param tag for 'aOne'.",
            "73:33: Expected @param tag for 'aTwo'.",
            "78: Unused @param tag for 'Unneeded'.",
            "79: Unused Javadoc tag.",
            "87: Duplicate @return tag.",
            "109:23: Expected @param tag for 'aOne'.",
            "109:55: Expected @param tag for 'aFour'.",
            "109:66: Expected @param tag for 'aFive'.",
        };
        verify(c, fname, expected);
    }

