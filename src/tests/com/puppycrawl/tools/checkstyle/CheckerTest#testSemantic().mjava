    public void testSemantic()
        throws Exception
    {
        mProps.setProperty(Defn.IGNORE_WHITESPACE_PROP, "true");
        mProps.setProperty(Defn.JAVADOC_CHECKSCOPE_PROP, Scope.NOTHING.getName());
        mProps.setProperty(Defn.TRY_BLOCK_PROP, BlockOption.STMT.toString());
        mProps.setProperty(Defn.CATCH_BLOCK_PROP, BlockOption.STMT.toString());
        mProps.setProperty(Defn.FINALLY_BLOCK_PROP, BlockOption.STMT.toString());
        final Checker c = createChecker();
        final String filepath = getPath("InputSemantic.java");
        assertNotNull(c);
        final String[] expected = {
            filepath + ":51:65: Must have at least one statement.",
            filepath + ":53:41: Must have at least one statement.",
            filepath + ":70:38: Must have at least one statement.",
            filepath + ":71:52: Must have at least one statement.",
            filepath + ":72:45: Must have at least one statement.",
            filepath + ":74:13: Must have at least one statement.",
            filepath + ":76:17: Must have at least one statement.",
            filepath + ":78:13: Must have at least one statement.",
            filepath + ":81:17: Must have at least one statement.",
        };
        verify(c, filepath, expected);
    }

