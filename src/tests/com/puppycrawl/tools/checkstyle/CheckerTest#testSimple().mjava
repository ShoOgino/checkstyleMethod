    public void testSimple()
        throws Exception
    {
        mConfig.setMaxFileLength(20);
        mConfig.setMaxMethodLength(19);
        mConfig.setMaxConstructorLength(9);
        mConfig.setParamPat("^a[A-Z][a-zA-Z0-9]*$");
        mConfig.setStaticPat("^s[A-Z][a-zA-Z0-9]*$");
        mConfig.setMemberPat("^m[A-Z][a-zA-Z0-9]*$");
        final Checker c = createChecker();
        final String filepath = getPath("InputSimple.java");
        assertNotNull(c);
        final String[] expected = {
            filepath + ":1: file length is 151 lines (max allowed is 20).",
            filepath + ":3: Line does not match expected header line of '// Created: 2001'.",
            filepath + ":16: order of modifiers violates suggestions in the Java Language Specification.",
            filepath + ":18: line longer than 80 characters",
            filepath + ":19: line contains a tab character",
            filepath + ":25: variable 'badConstant' must match pattern '^[A-Z]([A-Z0-9_]*[A-Z0-9])?$'.",
            filepath + ":30: variable 'badStatic' must match pattern '^s[A-Z][a-zA-Z0-9]*$'.",
            filepath + ":35: variable 'badMember' must match pattern '^m[A-Z][a-zA-Z0-9]*$'.",
            filepath + ":39: variable 'mNumCreated2' must be private and have accessor methods.",
            filepath + ":42: ',' needs to be followed by whitespace.",
            filepath + ":49: variable 'sTest1' must be private and have accessor methods.",
            filepath + ":51: variable 'sTest3' must be private and have accessor methods.",
            filepath + ":53: variable 'sTest2' must be private and have accessor methods.",
            filepath + ":56: variable 'mTest1' must be private and have accessor methods.",
            filepath + ":58: variable 'mTest2' must be private and have accessor methods.",
            filepath + ":71: ',' needs to be followed by whitespace.",
            filepath + ":71: parameter 'badFormat1' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.",
            filepath + ":71: parameter 'badFormat2' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.",
            filepath + ":72: parameter 'badFormat3' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.",
            filepath + ":80: method length is 20 lines (max allowed is 19).",
            filepath + ":103: constructor length is 10 lines (max allowed is 9).",
            filepath + ":119: variable 'ABC' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
            filepath + ":123: variable 'CDE' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
            filepath + ":130: variable 'I' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
            filepath + ":132: variable 'InnerBlockVariable' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
            filepath + ":137: method name 'ALL_UPPERCASE_METHOD' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
            filepath + ":142: order of modifiers violates suggestions in the Java Language Specification.",
            filepath + ":148: order of modifiers violates suggestions in the Java Language Specification.",
        };
        verify(c, filepath, expected);
    }

