    public void testSimple()
        throws Exception
    {
        mConfig.setIntProperty(Defn.MAX_FILE_LENGTH_PROP, 20) ;
        mConfig.setIntProperty(Defn.MAX_METHOD_LENGTH_PROP, 19) ;
        mConfig.setIntProperty(Defn.MAX_CONSTRUCTOR_LENGTH_PROP, 9) ;
        mConfig.setPatternProperty(Defn.PARAMETER_PATTERN_PROP, "^a[A-Z][a-zA-Z0-9]*$");
        mConfig.setPatternProperty(Defn.STATIC_PATTERN_PROP, "^s[A-Z][a-zA-Z0-9]*$");
        mConfig.setPatternProperty(Defn.MEMBER_PATTERN_PROP, "^m[A-Z][a-zA-Z0-9]*$");
        mConfig.setPatternProperty(Defn.IGNORE_LINE_LENGTH_PATTERN_PROP,"^.*is OK.*regexp.*$");
        mConfig.setPatternProperty(Defn.TODO_PATTERN_PROP, "FIXME:");
        final Checker c = createChecker();
        final String filepath = getPath("InputSimple.java");
        assertNotNull(c);
        final String[] expected = {
            filepath + ":1: File length is 198 lines (max allowed is 20).",
            filepath + ":3: Line does not match expected header line of '// Created: 2001'.",
            filepath + ":18: Line is longer than 80 characters.",
            filepath + ":19:25: Line contains a tab character.",
            filepath + ":25:29: variable name 'badConstant' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.",
            filepath + ":30:24: variable name 'badStatic' must match pattern '^s[A-Z][a-zA-Z0-9]*$'.",
            filepath + ":35:17: variable name 'badMember' must match pattern '^m[A-Z][a-zA-Z0-9]*$'.",
            filepath + ":39:19: Variable 'mNumCreated2' must be private and have accessor methods.",
            filepath + ":42:40: ',' is not followed by whitespace.",
            filepath + ":49:23: Variable 'sTest1' must be private and have accessor methods.",
            filepath + ":51:26: Variable 'sTest3' must be private and have accessor methods.",
            filepath + ":53:16: Variable 'sTest2' must be private and have accessor methods.",
            filepath + ":56:9: Variable 'mTest1' must be private and have accessor methods.",
            filepath + ":58:16: Variable 'mTest2' must be private and have accessor methods.",
            filepath + ":71:19: parameter name 'badFormat1' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.",
            filepath + ":71:30: ',' is not followed by whitespace.",
            filepath + ":71:34: parameter name 'badFormat2' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.",
            filepath + ":72:25: parameter name 'badFormat3' must match pattern '^a[A-Z][a-zA-Z0-9]*$'.",
            filepath + ":80: Method length is 20 lines (max allowed is 19).",
            filepath + ":103: Constructor length is 10 lines (max allowed is 9).",
            filepath + ":119:13: variable name 'ABC' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
            filepath + ":123:19: variable name 'CDE' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
            filepath + ":127:9: '{' should be on the previous line.",
            filepath + ":130:18: variable name 'I' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
            filepath + ":131:9: '{' should be on the previous line.",
            filepath + ":132:20: variable name 'InnerBlockVariable' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
            filepath + ":137:10: method name 'ALL_UPPERCASE_METHOD' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
            filepath + ":142:30: variable name 'BAD__NAME' must match pattern '^[A-Z](_?[A-Z0-9]+)*$'.",
            filepath + ":145: Line is longer than 80 characters.",
            filepath + ":145:35: Line contains a tab character.",
            filepath + ":146:64: Line contains a tab character.",
            filepath + ":153:27: '=' is not followed by whitespace.",
            filepath + ":154:9: Line contains a tab character.",
            filepath + ":154:27: '=' is not followed by whitespace.",
            filepath + ":155:10: Line contains a tab character.",
            filepath + ":155:27: '=' is not followed by whitespace.",
            filepath + ":156:1: Line contains a tab character.",
            filepath + ":156:27: '=' is not followed by whitespace.",
            filepath + ":157:3: Line contains a tab character.",
            filepath + ":157:27: '=' is not followed by whitespace.",
            filepath + ":158:3: Line contains a tab character.",
            filepath + ":158:27: '=' is not followed by whitespace.",
            filepath + ":161: Comment matches to-do format 'FIXME:'.",
            filepath + ":162: Comment matches to-do format 'FIXME:'.",
            filepath + ":163: Comment matches to-do format 'FIXME:'.",
            filepath + ":167: Comment matches to-do format 'FIXME:'.",
            filepath + ":194:5: More than 7 parameters.",
        };
        verify(c, filepath, expected);
    }

